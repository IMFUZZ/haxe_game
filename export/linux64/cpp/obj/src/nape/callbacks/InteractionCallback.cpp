// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_nape_callbacks_Callback
#include <nape/callbacks/Callback.h>
#endif
#ifndef INCLUDED_nape_callbacks_InteractionCallback
#include <nape/callbacks/InteractionCallback.h>
#endif
#ifndef INCLUDED_nape_callbacks_Listener
#include <nape/callbacks/Listener.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterList
#include <nape/dynamics/ArbiterList.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Callback
#include <zpp_nape/callbacks/ZPP_Callback.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Listener
#include <zpp_nape/callbacks/ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <zpp_nape/phys/ZPP_Interactor.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_11212c38cc8966ff_185_new,"nape.callbacks.InteractionCallback","new",0x346421a3,"nape.callbacks.InteractionCallback.new","nape/callbacks/InteractionCallback.hx",185,0xad3d8fef)
HX_DEFINE_STACK_FRAME(_hx_pos_11212c38cc8966ff_196_get_int1,"nape.callbacks.InteractionCallback","get_int1",0x89893bc8,"nape.callbacks.InteractionCallback.get_int1","nape/callbacks/InteractionCallback.hx",196,0xad3d8fef)
HX_DEFINE_STACK_FRAME(_hx_pos_11212c38cc8966ff_207_get_int2,"nape.callbacks.InteractionCallback","get_int2",0x89893bc9,"nape.callbacks.InteractionCallback.get_int2","nape/callbacks/InteractionCallback.hx",207,0xad3d8fef)
HX_DEFINE_STACK_FRAME(_hx_pos_11212c38cc8966ff_218_get_arbiters,"nape.callbacks.InteractionCallback","get_arbiters",0x8426ced0,"nape.callbacks.InteractionCallback.get_arbiters","nape/callbacks/InteractionCallback.hx",218,0xad3d8fef)
HX_DEFINE_STACK_FRAME(_hx_pos_11212c38cc8966ff_223_toString,"nape.callbacks.InteractionCallback","toString",0xfc820c89,"nape.callbacks.InteractionCallback.toString","nape/callbacks/InteractionCallback.hx",223,0xad3d8fef)
static const ::String _hx_array_data_b56c1431_5[] = {
	HX_("BEGIN",09,22,44,2e),HX_("END",bb,9f,34,00),HX_("",00,00,00,00),HX_("",00,00,00,00),HX_("",00,00,00,00),HX_("",00,00,00,00),HX_("ONGOING",1b,7e,d8,1a),
};
namespace nape{
namespace callbacks{

void InteractionCallback_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_11212c38cc8966ff_185_new)
            	HX_STACK_THIS(this)
HXLINE( 185)		super::__construct();
            	}

Dynamic InteractionCallback_obj::__CreateEmpty() { return new InteractionCallback_obj; }

void *InteractionCallback_obj::_hx_vtable = 0;

Dynamic InteractionCallback_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< InteractionCallback_obj > _hx_result = new InteractionCallback_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool InteractionCallback_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1e829ba7) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1e829ba7;
	} else {
		return inClassId==(int)0x65b302b1;
	}
}

 ::nape::phys::Interactor InteractionCallback_obj::get_int1(){
            	HX_STACKFRAME(&_hx_pos_11212c38cc8966ff_196_get_int1)
            	HX_STACK_THIS(this)
HXLINE( 196)		return this->zpp_inner->int1->outer_i;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionCallback_obj,get_int1,return )

 ::nape::phys::Interactor InteractionCallback_obj::get_int2(){
            	HX_STACKFRAME(&_hx_pos_11212c38cc8966ff_207_get_int2)
            	HX_STACK_THIS(this)
HXLINE( 207)		return this->zpp_inner->int2->outer_i;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionCallback_obj,get_int2,return )

 ::nape::dynamics::ArbiterList InteractionCallback_obj::get_arbiters(){
            	HX_STACKFRAME(&_hx_pos_11212c38cc8966ff_218_get_arbiters)
            	HX_STACK_THIS(this)
HXLINE( 218)		return this->zpp_inner->wrap_arbiters;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionCallback_obj,get_arbiters,return )

::String InteractionCallback_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_11212c38cc8966ff_223_toString)
            	HX_STACK_THIS(this)
HXLINE( 224)		HX_VARI( ::String,ret) = HX_("Cb:",9b,2c,33,00);
HXLINE( 225)		ret = (HX_("Cb:",9b,2c,33,00) + ::Array_obj< ::String >::fromData( _hx_array_data_b56c1431_5,7)->__get(this->zpp_inner->event));
HXLINE( 226)		ret = (ret + (((HX_(":",3a,00,00,00) + this->zpp_inner->int1->outer_i->toString()) + HX_("/",2f,00,00,00)) + this->zpp_inner->int2->outer_i->toString()));
HXLINE( 227)		ret = (ret + (HX_(" : ",c6,7a,18,00) + this->zpp_inner->wrap_arbiters->toString()));
HXLINE( 228)		ret = (ret + (HX_(" : listener: ",60,26,46,e2) + ::Std_obj::string(this->zpp_inner->listener->outer)));
HXLINE( 229)		return ret;
            	}



hx::ObjectPtr< InteractionCallback_obj > InteractionCallback_obj::__new() {
	hx::ObjectPtr< InteractionCallback_obj > __this = new InteractionCallback_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< InteractionCallback_obj > InteractionCallback_obj::__alloc(hx::Ctx *_hx_ctx) {
	InteractionCallback_obj *__this = (InteractionCallback_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(InteractionCallback_obj), true, "nape.callbacks.InteractionCallback"));
	*(void **)__this = InteractionCallback_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

InteractionCallback_obj::InteractionCallback_obj()
{
}

hx::Val InteractionCallback_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"int1") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_int1()); }
		if (HX_FIELD_EQ(inName,"int2") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_int2()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_int1") ) { return hx::Val( get_int1_dyn()); }
		if (HX_FIELD_EQ(inName,"get_int2") ) { return hx::Val( get_int2_dyn()); }
		if (HX_FIELD_EQ(inName,"arbiters") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_arbiters()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_arbiters") ) { return hx::Val( get_arbiters_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

void InteractionCallback_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("int1","\x62","\x44","\xbb","\x45"));
	outFields->push(HX_HCSTRING("int2","\x63","\x44","\xbb","\x45"));
	outFields->push(HX_HCSTRING("arbiters","\x6a","\x2c","\xb2","\x21"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *InteractionCallback_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *InteractionCallback_obj_sStaticStorageInfo = 0;
#endif

static ::String InteractionCallback_obj_sMemberFields[] = {
	HX_HCSTRING("get_int1","\xeb","\xff","\x75","\xc5"),
	HX_HCSTRING("get_int2","\xec","\xff","\x75","\xc5"),
	HX_HCSTRING("get_arbiters","\x73","\xe0","\xcb","\xd6"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void InteractionCallback_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InteractionCallback_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InteractionCallback_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InteractionCallback_obj::__mClass,"__mClass");
};

#endif

hx::Class InteractionCallback_obj::__mClass;

void InteractionCallback_obj::__register()
{
	hx::Object *dummy = new InteractionCallback_obj;
	InteractionCallback_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("nape.callbacks.InteractionCallback","\x31","\x14","\x6c","\xb5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = InteractionCallback_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(InteractionCallback_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< InteractionCallback_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = InteractionCallback_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = InteractionCallback_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = InteractionCallback_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace callbacks
