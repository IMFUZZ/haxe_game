// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_nape_dynamics_InteractionGroup
#include <nape/dynamics/InteractionGroup.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroupList
#include <nape/dynamics/InteractionGroupList.h>
#endif
#ifndef INCLUDED_nape_phys_InteractorList
#include <nape/phys/InteractorList.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionGroup
#include <zpp_nape/dynamics/ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_InteractionGroup
#include <zpp_nape/util/ZNPList_ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Interactor
#include <zpp_nape/util/ZNPList_ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_InteractionGroupList
#include <zpp_nape/util/ZPP_InteractionGroupList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_InteractorList
#include <zpp_nape/util/ZPP_InteractorList.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_218_new,"nape.dynamics.InteractionGroup","new",0x9c747e33,"nape.dynamics.InteractionGroup.new","nape/dynamics/InteractionGroup.hx",218,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_230_get_group,"nape.dynamics.InteractionGroup","get_group",0x992f5da9,"nape.dynamics.InteractionGroup.get_group","nape/dynamics/InteractionGroup.hx",230,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_232_set_group,"nape.dynamics.InteractionGroup","set_group",0x7c8049b5,"nape.dynamics.InteractionGroup.set_group","nape/dynamics/InteractionGroup.hx",232,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_248_get_ignore,"nape.dynamics.InteractionGroup","get_ignore",0xe6e32b68,"nape.dynamics.InteractionGroup.get_ignore","nape/dynamics/InteractionGroup.hx",248,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_250_set_ignore,"nape.dynamics.InteractionGroup","set_ignore",0xea60c9dc,"nape.dynamics.InteractionGroup.set_ignore","nape/dynamics/InteractionGroup.hx",250,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_268_get_interactors,"nape.dynamics.InteractionGroup","get_interactors",0xdbd71de4,"nape.dynamics.InteractionGroup.get_interactors","nape/dynamics/InteractionGroup.hx",268,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_282_get_groups,"nape.dynamics.InteractionGroup","get_groups",0x704296aa,"nape.dynamics.InteractionGroup.get_groups","nape/dynamics/InteractionGroup.hx",282,0xfcb37cbd)
HX_DEFINE_STACK_FRAME(_hx_pos_a2f2b2306e6f7209_299_toString,"nape.dynamics.InteractionGroup","toString",0xc30825f9,"nape.dynamics.InteractionGroup.toString","nape/dynamics/InteractionGroup.hx",299,0xfcb37cbd)
namespace nape{
namespace dynamics{

void InteractionGroup_obj::__construct(hx::Null< bool >  __o_ignore){
bool ignore = __o_ignore.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_218_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ignore,"ignore")
HXLINE( 222)		this->zpp_inner = null();
HXLINE( 292)		this->zpp_inner =  ::zpp_nape::dynamics::ZPP_InteractionGroup_obj::__alloc( HX_CTX );
HXLINE( 293)		this->zpp_inner->outer = hx::ObjectPtr<OBJ_>(this);
HXLINE( 294)		if ((this->zpp_inner->ignore != ignore)) {
HXLINE( 294)			this->zpp_inner->invalidate(true);
HXDLIN( 294)			this->zpp_inner->ignore = ignore;
            		}
            	}

Dynamic InteractionGroup_obj::__CreateEmpty() { return new InteractionGroup_obj; }

void *InteractionGroup_obj::_hx_vtable = 0;

Dynamic InteractionGroup_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< InteractionGroup_obj > _hx_result = new InteractionGroup_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool InteractionGroup_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x479189a9;
}

 ::nape::dynamics::InteractionGroup InteractionGroup_obj::get_group(){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_230_get_group)
            	HX_STACK_THIS(this)
HXLINE( 230)		if (hx::IsNull( this->zpp_inner->group )) {
HXLINE( 230)			return null();
            		}
            		else {
HXLINE( 230)			return this->zpp_inner->group->outer;
            		}
HXDLIN( 230)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionGroup_obj,get_group,return )

 ::nape::dynamics::InteractionGroup InteractionGroup_obj::set_group( ::nape::dynamics::InteractionGroup group){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_232_set_group)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(group,"group")
HXLINE( 237)		 ::zpp_nape::dynamics::ZPP_InteractionGroup _hx_tmp;
HXDLIN( 237)		if (hx::IsNull( group )) {
HXLINE( 237)			_hx_tmp = null();
            		}
            		else {
HXLINE( 237)			_hx_tmp = group->zpp_inner;
            		}
HXDLIN( 237)		this->zpp_inner->setGroup(_hx_tmp);
HXLINE( 239)		if (hx::IsNull( this->zpp_inner->group )) {
HXLINE( 239)			return null();
            		}
            		else {
HXLINE( 239)			return this->zpp_inner->group->outer;
            		}
HXDLIN( 239)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(InteractionGroup_obj,set_group,return )

bool InteractionGroup_obj::get_ignore(){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_248_get_ignore)
            	HX_STACK_THIS(this)
HXLINE( 248)		return this->zpp_inner->ignore;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionGroup_obj,get_ignore,return )

bool InteractionGroup_obj::set_ignore(bool ignore){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_250_set_ignore)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ignore,"ignore")
HXLINE( 252)		if ((this->zpp_inner->ignore != ignore)) {
HXLINE( 253)			this->zpp_inner->invalidate(true);
HXLINE( 254)			this->zpp_inner->ignore = ignore;
            		}
HXLINE( 257)		return this->zpp_inner->ignore;
            	}


HX_DEFINE_DYNAMIC_FUNC1(InteractionGroup_obj,set_ignore,return )

 ::nape::phys::InteractorList InteractionGroup_obj::get_interactors(){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_268_get_interactors)
            	HX_STACK_THIS(this)
HXLINE( 269)		if (hx::IsNull( this->zpp_inner->wrap_interactors )) {
HXLINE( 269)			this->zpp_inner->wrap_interactors = ::zpp_nape::util::ZPP_InteractorList_obj::get(this->zpp_inner->interactors,true);
            		}
HXLINE( 270)		return this->zpp_inner->wrap_interactors;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionGroup_obj,get_interactors,return )

 ::nape::dynamics::InteractionGroupList InteractionGroup_obj::get_groups(){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_282_get_groups)
            	HX_STACK_THIS(this)
HXLINE( 283)		if (hx::IsNull( this->zpp_inner->wrap_groups )) {
HXLINE( 283)			this->zpp_inner->wrap_groups = ::zpp_nape::util::ZPP_InteractionGroupList_obj::get(this->zpp_inner->groups,true);
            		}
HXLINE( 284)		return this->zpp_inner->wrap_groups;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionGroup_obj,get_groups,return )

::String InteractionGroup_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_a2f2b2306e6f7209_299_toString)
            	HX_STACK_THIS(this)
HXLINE( 300)		HX_VARI( ::String,ret) = HX_("InteractionGroup",2d,2e,ee,3f);
HXLINE( 301)		if (this->zpp_inner->ignore) {
HXLINE( 301)			ret = (HX_("InteractionGroup",2d,2e,ee,3f) + HX_(":ignore",cc,a0,a5,fe));
            		}
HXLINE( 302)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(InteractionGroup_obj,toString,return )


hx::ObjectPtr< InteractionGroup_obj > InteractionGroup_obj::__new(hx::Null< bool >  __o_ignore) {
	hx::ObjectPtr< InteractionGroup_obj > __this = new InteractionGroup_obj();
	__this->__construct(__o_ignore);
	return __this;
}

hx::ObjectPtr< InteractionGroup_obj > InteractionGroup_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< bool >  __o_ignore) {
	InteractionGroup_obj *__this = (InteractionGroup_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(InteractionGroup_obj), true, "nape.dynamics.InteractionGroup"));
	*(void **)__this = InteractionGroup_obj::_hx_vtable;
	__this->__construct(__o_ignore);
	return __this;
}

InteractionGroup_obj::InteractionGroup_obj()
{
}

void InteractionGroup_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(InteractionGroup);
	HX_MARK_MEMBER_NAME(zpp_inner,"zpp_inner");
	HX_MARK_END_CLASS();
}

void InteractionGroup_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner,"zpp_inner");
}

hx::Val InteractionGroup_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_group()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"ignore") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_ignore()); }
		if (HX_FIELD_EQ(inName,"groups") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_groups()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { return hx::Val( zpp_inner); }
		if (HX_FIELD_EQ(inName,"get_group") ) { return hx::Val( get_group_dyn()); }
		if (HX_FIELD_EQ(inName,"set_group") ) { return hx::Val( set_group_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_ignore") ) { return hx::Val( get_ignore_dyn()); }
		if (HX_FIELD_EQ(inName,"set_ignore") ) { return hx::Val( set_ignore_dyn()); }
		if (HX_FIELD_EQ(inName,"get_groups") ) { return hx::Val( get_groups_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"interactors") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_interactors()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_interactors") ) { return hx::Val( get_interactors_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val InteractionGroup_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_group(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"ignore") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_ignore(inValue) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { zpp_inner=inValue.Cast<  ::zpp_nape::dynamics::ZPP_InteractionGroup >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void InteractionGroup_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"));
	outFields->push(HX_HCSTRING("group","\x3f","\xb3","\xf4","\x99"));
	outFields->push(HX_HCSTRING("ignore","\x12","\xb9","\xc8","\x92"));
	outFields->push(HX_HCSTRING("interactors","\xfa","\xc7","\x5d","\x3c"));
	outFields->push(HX_HCSTRING("groups","\x54","\x24","\x28","\x1c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo InteractionGroup_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::dynamics::ZPP_InteractionGroup*/ ,(int)offsetof(InteractionGroup_obj,zpp_inner),HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *InteractionGroup_obj_sStaticStorageInfo = 0;
#endif

static ::String InteractionGroup_obj_sMemberFields[] = {
	HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"),
	HX_HCSTRING("get_group","\x96","\x0f","\x9e","\xdd"),
	HX_HCSTRING("set_group","\xa2","\xfb","\xee","\xc0"),
	HX_HCSTRING("get_ignore","\xdb","\x28","\x50","\x83"),
	HX_HCSTRING("set_ignore","\x4f","\xc7","\xcd","\x86"),
	HX_HCSTRING("get_interactors","\x91","\x7f","\x3f","\xfd"),
	HX_HCSTRING("get_groups","\x1d","\x94","\xaf","\x0c"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void InteractionGroup_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InteractionGroup_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InteractionGroup_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InteractionGroup_obj::__mClass,"__mClass");
};

#endif

hx::Class InteractionGroup_obj::__mClass;

void InteractionGroup_obj::__register()
{
	hx::Object *dummy = new InteractionGroup_obj;
	InteractionGroup_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("nape.dynamics.InteractionGroup","\xc1","\xe8","\xce","\x67");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = InteractionGroup_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(InteractionGroup_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< InteractionGroup_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = InteractionGroup_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = InteractionGroup_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = InteractionGroup_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace dynamics
