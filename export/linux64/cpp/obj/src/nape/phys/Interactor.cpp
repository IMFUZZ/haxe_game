// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_nape_callbacks_CbTypeList
#include <nape/callbacks/CbTypeList.h>
#endif
#ifndef INCLUDED_nape_dynamics_InteractionGroup
#include <nape/dynamics/InteractionGroup.h>
#endif
#ifndef INCLUDED_nape_phys_Body
#include <nape/phys/Body.h>
#endif
#ifndef INCLUDED_nape_phys_Compound
#include <nape/phys/Compound.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_nape_shape_Shape
#include <nape/shape/Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionGroup
#include <zpp_nape/dynamics/ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Body
#include <zpp_nape/phys/ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Compound
#include <zpp_nape/phys/ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <zpp_nape/phys/ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Shape
#include <zpp_nape/shape/ZPP_Shape.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_178_new,"nape.phys.Interactor","new",0x114ae081,"nape.phys.Interactor.new","nape/phys/Interactor.hx",178,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_185_get_id,"nape.phys.Interactor","get_id",0xefd2eda3,"nape.phys.Interactor.get_id","nape/phys/Interactor.hx",185,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_200_get_userData,"nape.phys.Interactor","get_userData",0xc382addd,"nape.phys.Interactor.get_userData","nape/phys/Interactor.hx",200,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_212_isShape,"nape.phys.Interactor","isShape",0xda9abb78,"nape.phys.Interactor.isShape","nape/phys/Interactor.hx",212,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_220_isBody,"nape.phys.Interactor","isBody",0xab253a2b,"nape.phys.Interactor.isBody","nape/phys/Interactor.hx",220,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_228_isCompound,"nape.phys.Interactor","isCompound",0x8f0a7b74,"nape.phys.Interactor.isCompound","nape/phys/Interactor.hx",228,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_236_get_castShape,"nape.phys.Interactor","get_castShape",0x2ec8171a,"nape.phys.Interactor.get_castShape","nape/phys/Interactor.hx",236,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_244_get_castBody,"nape.phys.Interactor","get_castBody",0x8ff8a8c9,"nape.phys.Interactor.get_castBody","nape/phys/Interactor.hx",244,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_252_get_castCompound,"nape.phys.Interactor","get_castCompound",0xe67c9112,"nape.phys.Interactor.get_castCompound","nape/phys/Interactor.hx",252,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_262_get_group,"nape.phys.Interactor","get_group",0x35856e77,"nape.phys.Interactor.get_group","nape/phys/Interactor.hx",262,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_264_set_group,"nape.phys.Interactor","set_group",0x18d65a83,"nape.phys.Interactor.set_group","nape/phys/Interactor.hx",264,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_278_get_cbTypes,"nape.phys.Interactor","get_cbTypes",0x1f5f2292,"nape.phys.Interactor.get_cbTypes","nape/phys/Interactor.hx",278,0xc210d1af)
HX_DEFINE_STACK_FRAME(_hx_pos_a0d5349daf8b7760_297_toString,"nape.phys.Interactor","toString",0x2fa4a8eb,"nape.phys.Interactor.toString","nape/phys/Interactor.hx",297,0xc210d1af)
namespace nape{
namespace phys{

void Interactor_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_178_new)
            	HX_STACK_THIS(this)
HXLINE( 178)		this->zpp_inner_i = null();
            	}

Dynamic Interactor_obj::__CreateEmpty() { return new Interactor_obj; }

void *Interactor_obj::_hx_vtable = 0;

Dynamic Interactor_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Interactor_obj > _hx_result = new Interactor_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Interactor_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x643c1bb3;
}

int Interactor_obj::get_id(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_185_get_id)
            	HX_STACK_THIS(this)
HXLINE( 185)		return this->zpp_inner_i->id;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_id,return )

 ::Dynamic Interactor_obj::get_userData(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_200_get_userData)
            	HX_STACK_THIS(this)
HXLINE( 201)		if (hx::IsNull( this->zpp_inner_i->userData )) {
HXLINE( 202)			this->zpp_inner_i->userData =  ::Dynamic(hx::Anon_obj::Create(0));
            		}
HXLINE( 204)		return this->zpp_inner_i->userData;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_userData,return )

bool Interactor_obj::isShape(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_212_isShape)
            	HX_STACK_THIS(this)
HXLINE( 212)		return hx::IsNotNull( this->zpp_inner_i->ishape );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isShape,return )

bool Interactor_obj::isBody(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_220_isBody)
            	HX_STACK_THIS(this)
HXLINE( 220)		return hx::IsNotNull( this->zpp_inner_i->ibody );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isBody,return )

bool Interactor_obj::isCompound(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_228_isCompound)
            	HX_STACK_THIS(this)
HXLINE( 228)		return hx::IsNotNull( this->zpp_inner_i->icompound );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,isCompound,return )

 ::nape::shape::Shape Interactor_obj::get_castShape(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_236_get_castShape)
            	HX_STACK_THIS(this)
HXLINE( 236)		if (hx::IsNotNull( this->zpp_inner_i->ishape )) {
HXLINE( 236)			return this->zpp_inner_i->ishape->outer;
            		}
            		else {
HXLINE( 236)			return null();
            		}
HXDLIN( 236)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castShape,return )

 ::nape::phys::Body Interactor_obj::get_castBody(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_244_get_castBody)
            	HX_STACK_THIS(this)
HXLINE( 244)		if (hx::IsNotNull( this->zpp_inner_i->ibody )) {
HXLINE( 244)			return this->zpp_inner_i->ibody->outer;
            		}
            		else {
HXLINE( 244)			return null();
            		}
HXDLIN( 244)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castBody,return )

 ::nape::phys::Compound Interactor_obj::get_castCompound(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_252_get_castCompound)
            	HX_STACK_THIS(this)
HXLINE( 252)		if (hx::IsNotNull( this->zpp_inner_i->icompound )) {
HXLINE( 252)			return this->zpp_inner_i->icompound->outer;
            		}
            		else {
HXLINE( 252)			return null();
            		}
HXDLIN( 252)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_castCompound,return )

 ::nape::dynamics::InteractionGroup Interactor_obj::get_group(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_262_get_group)
            	HX_STACK_THIS(this)
HXLINE( 262)		if (hx::IsNull( this->zpp_inner_i->group )) {
HXLINE( 262)			return null();
            		}
            		else {
HXLINE( 262)			return this->zpp_inner_i->group->outer;
            		}
HXDLIN( 262)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_group,return )

 ::nape::dynamics::InteractionGroup Interactor_obj::set_group( ::nape::dynamics::InteractionGroup group){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_264_set_group)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(group,"group")
HXLINE( 265)		{
HXLINE( 266)			this->zpp_inner_i->immutable_midstep(HX_("Interactor::group",26,ef,48,55));
HXLINE( 267)			 ::zpp_nape::dynamics::ZPP_InteractionGroup _hx_tmp;
HXDLIN( 267)			if (hx::IsNull( group )) {
HXLINE( 267)				_hx_tmp = null();
            			}
            			else {
HXLINE( 267)				_hx_tmp = group->zpp_inner;
            			}
HXDLIN( 267)			this->zpp_inner_i->setGroup(_hx_tmp);
            		}
HXLINE( 269)		if (hx::IsNull( this->zpp_inner_i->group )) {
HXLINE( 269)			return null();
            		}
            		else {
HXLINE( 269)			return this->zpp_inner_i->group->outer;
            		}
HXDLIN( 269)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interactor_obj,set_group,return )

 ::nape::callbacks::CbTypeList Interactor_obj::get_cbTypes(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_278_get_cbTypes)
            	HX_STACK_THIS(this)
HXLINE( 279)		if (hx::IsNull( this->zpp_inner_i->wrap_cbTypes )) {
HXLINE( 279)			this->zpp_inner_i->setupcbTypes();
            		}
HXLINE( 280)		return this->zpp_inner_i->wrap_cbTypes;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,get_cbTypes,return )

::String Interactor_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_a0d5349daf8b7760_297_toString)
            	HX_STACK_THIS(this)
HXLINE( 297)		return HX_("",00,00,00,00);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interactor_obj,toString,return )


hx::ObjectPtr< Interactor_obj > Interactor_obj::__new() {
	hx::ObjectPtr< Interactor_obj > __this = new Interactor_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Interactor_obj > Interactor_obj::__alloc(hx::Ctx *_hx_ctx) {
	Interactor_obj *__this = (Interactor_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Interactor_obj), true, "nape.phys.Interactor"));
	*(void **)__this = Interactor_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Interactor_obj::Interactor_obj()
{
}

void Interactor_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interactor);
	HX_MARK_MEMBER_NAME(zpp_inner_i,"zpp_inner_i");
	HX_MARK_END_CLASS();
}

void Interactor_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner_i,"zpp_inner_i");
}

hx::Val Interactor_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_id()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_group()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_id") ) { return hx::Val( get_id_dyn()); }
		if (HX_FIELD_EQ(inName,"isBody") ) { return hx::Val( isBody_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isShape") ) { return hx::Val( isShape_dyn()); }
		if (HX_FIELD_EQ(inName,"cbTypes") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_cbTypes()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"userData") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_userData()); }
		if (HX_FIELD_EQ(inName,"castBody") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_castBody()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"castShape") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_castShape()); }
		if (HX_FIELD_EQ(inName,"get_group") ) { return hx::Val( get_group_dyn()); }
		if (HX_FIELD_EQ(inName,"set_group") ) { return hx::Val( set_group_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"isCompound") ) { return hx::Val( isCompound_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"zpp_inner_i") ) { return hx::Val( zpp_inner_i); }
		if (HX_FIELD_EQ(inName,"get_cbTypes") ) { return hx::Val( get_cbTypes_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_userData") ) { return hx::Val( get_userData_dyn()); }
		if (HX_FIELD_EQ(inName,"get_castBody") ) { return hx::Val( get_castBody_dyn()); }
		if (HX_FIELD_EQ(inName,"castCompound") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_castCompound()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_castShape") ) { return hx::Val( get_castShape_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_castCompound") ) { return hx::Val( get_castCompound_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Interactor_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"group") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_group(inValue) ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"zpp_inner_i") ) { zpp_inner_i=inValue.Cast<  ::zpp_nape::phys::ZPP_Interactor >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Interactor_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("zpp_inner_i","\xbb","\x6e","\xa6","\xb0"));
	outFields->push(HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"));
	outFields->push(HX_HCSTRING("userData","\x15","\x96","\x28","\x05"));
	outFields->push(HX_HCSTRING("castShape","\xe2","\x5f","\x4d","\x5e"));
	outFields->push(HX_HCSTRING("castBody","\x01","\x91","\x9e","\xd1"));
	outFields->push(HX_HCSTRING("castCompound","\x4a","\xf5","\xa6","\x93"));
	outFields->push(HX_HCSTRING("group","\x3f","\xb3","\xf4","\x99"));
	outFields->push(HX_HCSTRING("cbTypes","\x5a","\x29","\xbf","\xf1"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Interactor_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::phys::ZPP_Interactor*/ ,(int)offsetof(Interactor_obj,zpp_inner_i),HX_HCSTRING("zpp_inner_i","\xbb","\x6e","\xa6","\xb0")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Interactor_obj_sStaticStorageInfo = 0;
#endif

static ::String Interactor_obj_sMemberFields[] = {
	HX_HCSTRING("zpp_inner_i","\xbb","\x6e","\xa6","\xb0"),
	HX_HCSTRING("get_id","\x24","\xf3","\x2f","\xa3"),
	HX_HCSTRING("get_userData","\x1e","\x4a","\x42","\xba"),
	HX_HCSTRING("isShape","\xd7","\x86","\xa2","\x18"),
	HX_HCSTRING("isBody","\xac","\x3f","\x82","\x5e"),
	HX_HCSTRING("isCompound","\x75","\xd5","\x7e","\xfc"),
	HX_HCSTRING("get_castShape","\xb9","\x33","\xb1","\x1f"),
	HX_HCSTRING("get_castBody","\x0a","\x45","\xb8","\x86"),
	HX_HCSTRING("get_castCompound","\xd3","\xe1","\x45","\x98"),
	HX_HCSTRING("get_group","\x96","\x0f","\x9e","\xdd"),
	HX_HCSTRING("set_group","\xa2","\xfb","\xee","\xc0"),
	HX_HCSTRING("get_cbTypes","\x71","\x89","\xb9","\x77"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Interactor_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Interactor_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Interactor_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Interactor_obj::__mClass,"__mClass");
};

#endif

hx::Class Interactor_obj::__mClass;

void Interactor_obj::__register()
{
	hx::Object *dummy = new Interactor_obj;
	Interactor_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("nape.phys.Interactor","\x0f","\x8c","\x56","\xd3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Interactor_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Interactor_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Interactor_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Interactor_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interactor_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interactor_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace phys
