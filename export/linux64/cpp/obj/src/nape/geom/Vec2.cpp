// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Point
#include <openfl/_legacy/geom/Point.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_PubPool
#include <zpp_nape/util/ZPP_PubPool.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_204_new,"nape.geom.Vec2","new",0x3252e95c,"nape.geom.Vec2.new","nape/geom/Vec2.hx",204,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_328_dispose,"nape.geom.Vec2","dispose",0x0fb1c79b,"nape.geom.Vec2.dispose","nape/geom/Vec2.hx",328,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_431_copy,"nape.geom.Vec2","copy",0xcefb7f39,"nape.geom.Vec2.copy","nape/geom/Vec2.hx",431,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_475_toPoint,"nape.geom.Vec2","toPoint",0xe77947d1,"nape.geom.Vec2.toPoint","nape/geom/Vec2.hx",475,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_523_get_x,"nape.geom.Vec2","get_x",0x9414f54b,"nape.geom.Vec2.get_x","nape/geom/Vec2.hx",523,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_532_set_x,"nape.geom.Vec2","set_x",0x7ce3eb57,"nape.geom.Vec2.set_x","nape/geom/Vec2.hx",532,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_559_get_y,"nape.geom.Vec2","get_y",0x9414f54c,"nape.geom.Vec2.get_y","nape/geom/Vec2.hx",559,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_568_set_y,"nape.geom.Vec2","set_y",0x7ce3eb58,"nape.geom.Vec2.set_y","nape/geom/Vec2.hx",568,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_605_get_length,"nape.geom.Vec2","get_length",0x33cb4333,"nape.geom.Vec2.get_length","nape/geom/Vec2.hx",605,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_607_set_length,"nape.geom.Vec2","set_length",0x3748e1a7,"nape.geom.Vec2.set_length","nape/geom/Vec2.hx",607,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_656_lsq,"nape.geom.Vec2","lsq",0x32517106,"nape.geom.Vec2.lsq","nape/geom/Vec2.hx",656,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_671_set,"nape.geom.Vec2","set",0x3256b49e,"nape.geom.Vec2.set","nape/geom/Vec2.hx",671,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_808_setxy,"nape.geom.Vec2","setxy",0x7ce4011f,"nape.geom.Vec2.setxy","nape/geom/Vec2.hx",808,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_867_get_angle,"nape.geom.Vec2","get_angle",0x940d9e26,"nape.geom.Vec2.get_angle","nape/geom/Vec2.hx",867,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_874_set_angle,"nape.geom.Vec2","set_angle",0x775e8a32,"nape.geom.Vec2.set_angle","nape/geom/Vec2.hx",874,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_907_rotate,"nape.geom.Vec2","rotate",0x2631f2df,"nape.geom.Vec2.rotate","nape/geom/Vec2.hx",907,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_942_reflect,"nape.geom.Vec2","reflect",0x3d8ecb39,"nape.geom.Vec2.reflect","nape/geom/Vec2.hx",942,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_984_normalise,"nape.geom.Vec2","normalise",0xd9232f70,"nape.geom.Vec2.normalise","nape/geom/Vec2.hx",984,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1035_unit,"nape.geom.Vec2","unit",0xdae08e08,"nape.geom.Vec2.unit","nape/geom/Vec2.hx",1035,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1066_add,"nape.geom.Vec2","add",0x32490b1d,"nape.geom.Vec2.add","nape/geom/Vec2.hx",1066,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1119_addMul,"nape.geom.Vec2","addMul",0xfa15d8e7,"nape.geom.Vec2.addMul","nape/geom/Vec2.hx",1119,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1165_sub,"nape.geom.Vec2","sub",0x3256c27c,"nape.geom.Vec2.sub","nape/geom/Vec2.hx",1165,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1220_mul,"nape.geom.Vec2","mul",0x32523500,"nape.geom.Vec2.mul","nape/geom/Vec2.hx",1220,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1237_addeq,"nape.geom.Vec2","addeq",0x1ef824c9,"nape.geom.Vec2.addeq","nape/geom/Vec2.hx",1237,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1283_subeq,"nape.geom.Vec2","subeq",0x8769b1e8,"nape.geom.Vec2.subeq","nape/geom/Vec2.hx",1283,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1328_muleq,"nape.geom.Vec2","muleq",0x1309cd6c,"nape.geom.Vec2.muleq","nape/geom/Vec2.hx",1328,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1359_dot,"nape.geom.Vec2","dot",0x324b5b85,"nape.geom.Vec2.dot","nape/geom/Vec2.hx",1359,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1419_cross,"nape.geom.Vec2","cross",0x4f0eaf7c,"nape.geom.Vec2.cross","nape/geom/Vec2.hx",1419,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1476_perp,"nape.geom.Vec2","perp",0xd78bb077,"nape.geom.Vec2.perp","nape/geom/Vec2.hx",1476,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_1481_toString,"nape.geom.Vec2","toString",0xbca7a630,"nape.geom.Vec2.toString","nape/geom/Vec2.hx",1481,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_257_weak,"nape.geom.Vec2","weak",0xdc2c1ffc,"nape.geom.Vec2.weak","nape/geom/Vec2.hx",257,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_273_get,"nape.geom.Vec2","get",0x324d9992,"nape.geom.Vec2.get","nape/geom/Vec2.hx",273,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_461_fromPoint,"nape.geom.Vec2","fromPoint",0xa89a9c82,"nape.geom.Vec2.fromPoint","nape/geom/Vec2.hx",461,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_514_fromPolar,"nape.geom.Vec2","fromPolar",0xa89cd7f0,"nape.geom.Vec2.fromPolar","nape/geom/Vec2.hx",514,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_711_dsq,"nape.geom.Vec2","dsq",0x324b5efe,"nape.geom.Vec2.dsq","nape/geom/Vec2.hx",711,0x020b6534)
HX_DEFINE_STACK_FRAME(_hx_pos_7b41e6298c0d3dcf_759_distance,"nape.geom.Vec2","distance",0xf03268b9,"nape.geom.Vec2.distance","nape/geom/Vec2.hx",759,0x020b6534)
namespace nape{
namespace geom{

void Vec2_obj::__construct(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_204_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 212)		this->zpp_pool = null();
HXLINE( 208)		this->zpp_inner = null();
HXLINE( 406)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXDLIN( 406)		{
HXLINE( 406)			if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 406)				ret =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            			}
            			else {
HXLINE( 406)				ret = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 406)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret->next;
HXDLIN( 406)				ret->next = null();
            			}
HXDLIN( 406)			ret->weak = false;
            		}
HXDLIN( 406)		ret->_immutable = false;
HXDLIN( 406)		{
HXLINE( 406)			ret->x = x;
HXDLIN( 406)			ret->y = y;
            		}
HXDLIN( 406)		this->zpp_inner = ret;
HXLINE( 407)		this->zpp_inner->outer = hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic Vec2_obj::__CreateEmpty() { return new Vec2_obj; }

void *Vec2_obj::_hx_vtable = 0;

Dynamic Vec2_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Vec2_obj > _hx_result = new Vec2_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Vec2_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x08dbfe6a;
}

void Vec2_obj::dispose(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_328_dispose)
            	HX_STACK_THIS(this)
HXLINE( 340)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = this->zpp_inner;
HXLINE( 341)		this->zpp_inner->outer = null();
HXLINE( 342)		this->zpp_inner = null();
HXLINE( 343)		{
HXLINE( 344)			HX_VARI(  ::nape::geom::Vec2,o) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 360)			o->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXLINE( 361)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = o;
            		}
HXLINE( 370)		{
HXLINE( 380)			{
HXLINE( 380)				if (hx::IsNotNull( inner->outer )) {
HXLINE( 380)					inner->outer->zpp_inner = null();
HXDLIN( 380)					inner->outer = null();
            				}
HXDLIN( 380)				inner->_isimmutable = null();
HXDLIN( 380)				inner->_validate = null();
HXDLIN( 380)				inner->_invalidate = null();
            			}
HXLINE( 381)			inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXLINE( 382)			::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,dispose,(void))

 ::nape::geom::Vec2 Vec2_obj::copy(hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_431_copy)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(weak,"weak")
HXLINE( 431)		{
HXLINE( 431)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 431)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 431)				_this->_validate();
            			}
            		}
HXDLIN( 431)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN( 431)		{
HXLINE( 431)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 431)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 431)				_this1->_validate();
            			}
            		}
HXDLIN( 431)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN( 431)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 431)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 431)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 431)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 431)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 431)			ret->zpp_pool = null();
            		}
HXDLIN( 431)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 431)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 431)			{
HXLINE( 431)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 431)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 431)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 431)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 431)					ret1->next = null();
            				}
HXDLIN( 431)				ret1->weak = false;
            			}
HXDLIN( 431)			ret1->_immutable = false;
HXDLIN( 431)			{
HXLINE( 431)				ret1->x = x;
HXDLIN( 431)				ret1->y = y;
            			}
HXDLIN( 431)			ret->zpp_inner = ret1;
HXDLIN( 431)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 431)			bool _hx_tmp;
HXDLIN( 431)			{
HXLINE( 431)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 431)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 431)					_this2->_validate();
            				}
            			}
HXDLIN( 431)			if ((ret->zpp_inner->x == x)) {
HXLINE( 431)				{
HXLINE( 431)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN( 431)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 431)						_this3->_validate();
            					}
            				}
HXDLIN( 431)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 431)				_hx_tmp = false;
            			}
HXDLIN( 431)			if (!(_hx_tmp)) {
HXLINE( 431)				{
HXLINE( 431)					ret->zpp_inner->x = x;
HXDLIN( 431)					ret->zpp_inner->y = y;
            				}
HXDLIN( 431)				{
HXLINE( 431)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN( 431)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 431)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN( 431)		ret->zpp_inner->weak = weak;
HXDLIN( 431)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,copy,return )

 ::openfl::_legacy::geom::Point Vec2_obj::toPoint( ::openfl::_legacy::geom::Point output){
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_475_toPoint)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(output,"output")
HXLINE( 481)		if (hx::IsNull( output )) {
HXLINE( 481)			output =  ::openfl::_legacy::geom::Point_obj::__alloc( HX_CTX ,null(),null());
            		}
HXLINE( 482)		{
HXLINE( 482)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 482)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 482)				_this->_validate();
            			}
            		}
HXDLIN( 482)		output->x = this->zpp_inner->x;
HXLINE( 483)		{
HXLINE( 483)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 483)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 483)				_this1->_validate();
            			}
            		}
HXDLIN( 483)		output->y = this->zpp_inner->y;
HXLINE( 484)		return output;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,toPoint,return )

Float Vec2_obj::get_x(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_523_get_x)
            	HX_STACK_THIS(this)
HXLINE( 529)		{
HXLINE( 529)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 529)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 529)				_this->_validate();
            			}
            		}
HXLINE( 530)		return this->zpp_inner->x;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,get_x,return )

Float Vec2_obj::set_x(Float x){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_532_set_x)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE( 533)		{
HXLINE( 540)			{
HXLINE( 540)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 540)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 540)					_this->_validate();
            				}
            			}
HXDLIN( 540)			if ((this->zpp_inner->x != x)) {
HXLINE( 546)				this->zpp_inner->x = x;
HXLINE( 547)				{
HXLINE( 547)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 547)					if (hx::IsNotNull( _this1->_invalidate )) {
HXLINE( 547)						_this1->_invalidate(_this1);
            					}
            				}
            			}
            		}
HXLINE( 550)		{
HXLINE( 550)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 550)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 550)				_this2->_validate();
            			}
            		}
HXDLIN( 550)		return this->zpp_inner->x;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,set_x,return )

Float Vec2_obj::get_y(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_559_get_y)
            	HX_STACK_THIS(this)
HXLINE( 565)		{
HXLINE( 565)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 565)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 565)				_this->_validate();
            			}
            		}
HXLINE( 566)		return this->zpp_inner->y;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,get_y,return )

Float Vec2_obj::set_y(Float y){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_568_set_y)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(y,"y")
HXLINE( 569)		{
HXLINE( 576)			{
HXLINE( 576)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 576)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 576)					_this->_validate();
            				}
            			}
HXDLIN( 576)			if ((this->zpp_inner->y != y)) {
HXLINE( 582)				this->zpp_inner->y = y;
HXLINE( 583)				{
HXLINE( 583)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 583)					if (hx::IsNotNull( _this1->_invalidate )) {
HXLINE( 583)						_this1->_invalidate(_this1);
            					}
            				}
            			}
            		}
HXLINE( 586)		{
HXLINE( 586)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 586)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 586)				_this2->_validate();
            			}
            		}
HXDLIN( 586)		return this->zpp_inner->y;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,set_y,return )

Float Vec2_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_605_get_length)
            	HX_STACK_THIS(this)
HXLINE( 605)		{
HXLINE( 605)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 605)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 605)				_this->_validate();
            			}
            		}
HXDLIN( 605)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 605)		{
HXLINE( 605)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 605)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 605)				_this1->_validate();
            			}
            		}
HXDLIN( 605)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 605)		{
HXLINE( 605)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 605)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 605)				_this2->_validate();
            			}
            		}
HXDLIN( 605)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 605)		{
HXLINE( 605)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 605)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 605)				_this3->_validate();
            			}
            		}
HXDLIN( 605)		return ::Math_obj::sqrt((_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,get_length,return )

Float Vec2_obj::set_length(Float length){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_607_set_length)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(length,"length")
HXLINE( 608)		{
HXLINE( 623)			{
HXLINE( 624)				{
HXLINE( 624)					HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 624)					if (hx::IsNotNull( _this->_validate )) {
HXLINE( 624)						_this->_validate();
            					}
            				}
HXDLIN( 624)				HX_VARI( Float,t) = this->zpp_inner->x;
HXDLIN( 624)				{
HXLINE( 624)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 624)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 624)						_this1->_validate();
            					}
            				}
HXDLIN( 624)				HX_VARI_NAME( Float,t1,"t") = (t * this->zpp_inner->x);
HXDLIN( 624)				{
HXLINE( 624)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 624)					if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 624)						_this2->_validate();
            					}
            				}
HXDLIN( 624)				HX_VARI_NAME( Float,t2,"t") = this->zpp_inner->y;
HXDLIN( 624)				{
HXLINE( 624)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 624)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 624)						_this3->_validate();
            					}
            				}
HXDLIN( 624)				HX_VARI_NAME( Float,t3,"t") = ((Float)length / (Float)::Math_obj::sqrt((t1 + (t2 * this->zpp_inner->y))));
HXLINE( 633)				{
HXLINE( 633)					HX_VARI(  ::nape::geom::Vec2,_g) = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 633)					{
HXLINE( 633)						{
HXLINE( 633)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = _g->zpp_inner;
HXDLIN( 633)							if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 633)								_this4->_validate();
            							}
            						}
HXDLIN( 633)						HX_VARI( Float,x) = (_g->zpp_inner->x * t3);
HXDLIN( 633)						{
HXLINE( 633)							{
HXLINE( 633)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = _g->zpp_inner;
HXDLIN( 633)								if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 633)									_this5->_validate();
            								}
            							}
HXDLIN( 633)							if ((_g->zpp_inner->x != x)) {
HXLINE( 633)								_g->zpp_inner->x = x;
HXDLIN( 633)								{
HXLINE( 633)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = _g->zpp_inner;
HXDLIN( 633)									if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE( 633)										_this6->_invalidate(_this6);
            									}
            								}
            							}
            						}
HXDLIN( 633)						{
HXLINE( 633)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = _g->zpp_inner;
HXDLIN( 633)							if (hx::IsNotNull( _this7->_validate )) {
HXLINE( 633)								_this7->_validate();
            							}
            						}
            					}
            				}
HXLINE( 634)				{
HXLINE( 634)					HX_VARI_NAME(  ::nape::geom::Vec2,_g1,"_g") = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 634)					{
HXLINE( 634)						{
HXLINE( 634)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = _g1->zpp_inner;
HXDLIN( 634)							if (hx::IsNotNull( _this8->_validate )) {
HXLINE( 634)								_this8->_validate();
            							}
            						}
HXDLIN( 634)						HX_VARI( Float,y) = (_g1->zpp_inner->y * t3);
HXDLIN( 634)						{
HXLINE( 634)							{
HXLINE( 634)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = _g1->zpp_inner;
HXDLIN( 634)								if (hx::IsNotNull( _this9->_validate )) {
HXLINE( 634)									_this9->_validate();
            								}
            							}
HXDLIN( 634)							if ((_g1->zpp_inner->y != y)) {
HXLINE( 634)								_g1->zpp_inner->y = y;
HXDLIN( 634)								{
HXLINE( 634)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this10,"_this") = _g1->zpp_inner;
HXDLIN( 634)									if (hx::IsNotNull( _this10->_invalidate )) {
HXLINE( 634)										_this10->_invalidate(_this10);
            									}
            								}
            							}
            						}
HXDLIN( 634)						{
HXLINE( 634)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = _g1->zpp_inner;
HXDLIN( 634)							if (hx::IsNotNull( _this11->_validate )) {
HXLINE( 634)								_this11->_validate();
            							}
            						}
            					}
            				}
            			}
HXLINE( 636)			{
HXLINE( 636)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this12,"_this") = this->zpp_inner;
HXDLIN( 636)				if (hx::IsNotNull( _this12->_invalidate )) {
HXLINE( 636)					_this12->_invalidate(_this12);
            				}
            			}
            		}
HXLINE( 638)		{
HXLINE( 638)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this13,"_this") = this->zpp_inner;
HXDLIN( 638)			if (hx::IsNotNull( _this13->_validate )) {
HXLINE( 638)				_this13->_validate();
            			}
            		}
HXDLIN( 638)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 638)		{
HXLINE( 638)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this14,"_this") = this->zpp_inner;
HXDLIN( 638)			if (hx::IsNotNull( _this14->_validate )) {
HXLINE( 638)				_this14->_validate();
            			}
            		}
HXDLIN( 638)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 638)		{
HXLINE( 638)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this15,"_this") = this->zpp_inner;
HXDLIN( 638)			if (hx::IsNotNull( _this15->_validate )) {
HXLINE( 638)				_this15->_validate();
            			}
            		}
HXDLIN( 638)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 638)		{
HXLINE( 638)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this16,"_this") = this->zpp_inner;
HXDLIN( 638)			if (hx::IsNotNull( _this16->_validate )) {
HXLINE( 638)				_this16->_validate();
            			}
            		}
HXDLIN( 638)		return ::Math_obj::sqrt((_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,set_length,return )

Float Vec2_obj::lsq(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_656_lsq)
            	HX_STACK_THIS(this)
HXLINE( 656)		{
HXLINE( 656)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 656)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 656)				_this->_validate();
            			}
            		}
HXDLIN( 656)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 656)		{
HXLINE( 656)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 656)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 656)				_this1->_validate();
            			}
            		}
HXDLIN( 656)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 656)		{
HXLINE( 656)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 656)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 656)				_this2->_validate();
            			}
            		}
HXDLIN( 656)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 656)		{
HXLINE( 656)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 656)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 656)				_this3->_validate();
            			}
            		}
HXDLIN( 656)		return (_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,lsq,return )

 ::nape::geom::Vec2 Vec2_obj::set( ::nape::geom::Vec2 vector){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_671_set)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE( 688)		{
HXLINE( 688)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = vector->zpp_inner;
HXDLIN( 688)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 688)				_this->_validate();
            			}
            		}
HXDLIN( 688)		HX_VARI( Float,x) = vector->zpp_inner->x;
HXDLIN( 688)		{
HXLINE( 688)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN( 688)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 688)				_this1->_validate();
            			}
            		}
HXDLIN( 688)		HX_VARI( Float,y) = vector->zpp_inner->y;
HXDLIN( 688)		bool _hx_tmp;
HXDLIN( 688)		{
HXLINE( 688)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 688)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 688)				_this2->_validate();
            			}
            		}
HXDLIN( 688)		if ((this->zpp_inner->x == x)) {
HXLINE( 688)			{
HXLINE( 688)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 688)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 688)					_this3->_validate();
            				}
            			}
HXDLIN( 688)			_hx_tmp = (this->zpp_inner->y == y);
            		}
            		else {
HXLINE( 688)			_hx_tmp = false;
            		}
HXDLIN( 688)		if (!(_hx_tmp)) {
HXLINE( 688)			{
HXLINE( 688)				this->zpp_inner->x = x;
HXDLIN( 688)				this->zpp_inner->y = y;
            			}
HXDLIN( 688)			{
HXLINE( 688)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN( 688)				if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 688)					_this4->_invalidate(_this4);
            				}
            			}
            		}
HXLINE( 689)		if (vector->zpp_inner->weak) {
HXLINE( 693)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN( 693)			vector->zpp_inner->outer = null();
HXDLIN( 693)			vector->zpp_inner = null();
HXDLIN( 693)			{
HXLINE( 693)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 693)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN( 693)			{
HXLINE( 693)				{
HXLINE( 693)					if (hx::IsNotNull( inner->outer )) {
HXLINE( 693)						inner->outer->zpp_inner = null();
HXDLIN( 693)						inner->outer = null();
            					}
HXDLIN( 693)					inner->_isimmutable = null();
HXDLIN( 693)					inner->_validate = null();
HXDLIN( 693)					inner->_invalidate = null();
            				}
HXDLIN( 693)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 693)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE( 700)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,set,return )

 ::nape::geom::Vec2 Vec2_obj::setxy(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_808_setxy)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 820)		bool _hx_tmp;
HXDLIN( 820)		{
HXLINE( 820)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 820)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 820)				_this->_validate();
            			}
            		}
HXDLIN( 820)		if ((this->zpp_inner->x == x)) {
HXLINE( 820)			{
HXLINE( 820)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 820)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 820)					_this1->_validate();
            				}
            			}
HXDLIN( 820)			_hx_tmp = (this->zpp_inner->y == y);
            		}
            		else {
HXLINE( 820)			_hx_tmp = false;
            		}
HXDLIN( 820)		if (!(_hx_tmp)) {
HXLINE( 821)			{
HXLINE( 822)				this->zpp_inner->x = x;
HXLINE( 823)				this->zpp_inner->y = y;
            			}
HXLINE( 841)			{
HXLINE( 841)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 841)				if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 841)					_this2->_invalidate(_this2);
            				}
            			}
            		}
HXLINE( 843)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,setxy,return )

Float Vec2_obj::get_angle(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_867_get_angle)
            	HX_STACK_THIS(this)
HXLINE( 867)		bool _hx_tmp;
HXDLIN( 867)		{
HXLINE( 867)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 867)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 867)				_this->_validate();
            			}
            		}
HXDLIN( 867)		Float _hx_tmp1 = this->zpp_inner->x;
HXDLIN( 867)		{
HXLINE( 867)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 867)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 867)				_this1->_validate();
            			}
            		}
HXDLIN( 867)		if ((_hx_tmp1 == this->zpp_inner->y)) {
HXLINE( 867)			{
HXLINE( 867)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 867)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 867)					_this2->_validate();
            				}
            			}
HXDLIN( 867)			_hx_tmp = (this->zpp_inner->x == (int)0);
            		}
            		else {
HXLINE( 867)			_hx_tmp = false;
            		}
HXDLIN( 867)		if (_hx_tmp) {
HXLINE( 868)			return ((Float)0.0);
            		}
            		else {
HXLINE( 871)			{
HXLINE( 871)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 871)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 871)					_this3->_validate();
            				}
            			}
HXDLIN( 871)			Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 871)			{
HXLINE( 871)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN( 871)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 871)					_this4->_validate();
            				}
            			}
HXDLIN( 871)			return ::Math_obj::atan2(_hx_tmp2,this->zpp_inner->x);
            		}
HXLINE( 867)		return ((Float)0.);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,get_angle,return )

Float Vec2_obj::set_angle(Float angle){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_874_set_angle)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(angle,"angle")
HXLINE( 875)		{
HXLINE( 887)			{
HXLINE( 887)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 887)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 887)					_this->_validate();
            				}
            			}
HXDLIN( 887)			HX_VARI( Float,l) = this->zpp_inner->x;
HXDLIN( 887)			{
HXLINE( 887)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 887)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 887)					_this1->_validate();
            				}
            			}
HXDLIN( 887)			HX_VARI_NAME( Float,l1,"l") = (l * this->zpp_inner->x);
HXDLIN( 887)			{
HXLINE( 887)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 887)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 887)					_this2->_validate();
            				}
            			}
HXDLIN( 887)			HX_VARI_NAME( Float,l2,"l") = this->zpp_inner->y;
HXDLIN( 887)			{
HXLINE( 887)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 887)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 887)					_this3->_validate();
            				}
            			}
HXDLIN( 887)			HX_VARI_NAME( Float,l3,"l") = ::Math_obj::sqrt((l1 + (l2 * this->zpp_inner->y)));
HXLINE( 888)			{
HXLINE( 888)				HX_VARI( Float,x) = (l3 * ::Math_obj::cos(angle));
HXDLIN( 888)				HX_VARI( Float,y) = (l3 * ::Math_obj::sin(angle));
HXDLIN( 888)				bool _hx_tmp;
HXDLIN( 888)				{
HXLINE( 888)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN( 888)					if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 888)						_this4->_validate();
            					}
            				}
HXDLIN( 888)				if ((this->zpp_inner->x == x)) {
HXLINE( 888)					{
HXLINE( 888)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = this->zpp_inner;
HXDLIN( 888)						if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 888)							_this5->_validate();
            						}
            					}
HXDLIN( 888)					_hx_tmp = (this->zpp_inner->y == y);
            				}
            				else {
HXLINE( 888)					_hx_tmp = false;
            				}
HXDLIN( 888)				if (!(_hx_tmp)) {
HXLINE( 888)					{
HXLINE( 888)						this->zpp_inner->x = x;
HXDLIN( 888)						this->zpp_inner->y = y;
            					}
HXDLIN( 888)					{
HXLINE( 888)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = this->zpp_inner;
HXDLIN( 888)						if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE( 888)							_this6->_invalidate(_this6);
            						}
            					}
            				}
            			}
            		}
HXLINE( 890)		bool _hx_tmp1;
HXDLIN( 890)		{
HXLINE( 890)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = this->zpp_inner;
HXDLIN( 890)			if (hx::IsNotNull( _this7->_validate )) {
HXLINE( 890)				_this7->_validate();
            			}
            		}
HXDLIN( 890)		Float _hx_tmp2 = this->zpp_inner->x;
HXDLIN( 890)		{
HXLINE( 890)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = this->zpp_inner;
HXDLIN( 890)			if (hx::IsNotNull( _this8->_validate )) {
HXLINE( 890)				_this8->_validate();
            			}
            		}
HXDLIN( 890)		if ((_hx_tmp2 == this->zpp_inner->y)) {
HXLINE( 890)			{
HXLINE( 890)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = this->zpp_inner;
HXDLIN( 890)				if (hx::IsNotNull( _this9->_validate )) {
HXLINE( 890)					_this9->_validate();
            				}
            			}
HXDLIN( 890)			_hx_tmp1 = (this->zpp_inner->x == (int)0);
            		}
            		else {
HXLINE( 890)			_hx_tmp1 = false;
            		}
HXDLIN( 890)		if (_hx_tmp1) {
HXLINE( 890)			return ((Float)0.0);
            		}
            		else {
HXLINE( 890)			{
HXLINE( 890)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this10,"_this") = this->zpp_inner;
HXDLIN( 890)				if (hx::IsNotNull( _this10->_validate )) {
HXLINE( 890)					_this10->_validate();
            				}
            			}
HXDLIN( 890)			Float _hx_tmp3 = this->zpp_inner->y;
HXDLIN( 890)			{
HXLINE( 890)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = this->zpp_inner;
HXDLIN( 890)				if (hx::IsNotNull( _this11->_validate )) {
HXLINE( 890)					_this11->_validate();
            				}
            			}
HXDLIN( 890)			return ::Math_obj::atan2(_hx_tmp3,this->zpp_inner->x);
            		}
HXDLIN( 890)		return ((Float)0.);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,set_angle,return )

 ::nape::geom::Vec2 Vec2_obj::rotate(Float angle){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_907_rotate)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(angle,"angle")
HXLINE( 919)		if ((hx::Mod(angle,(::Math_obj::PI * (int)2)) != (int)0)) {
HXLINE( 920)			HX_VARI( Float,ax) = ::Math_obj::sin(angle);
HXLINE( 921)			HX_VARI( Float,ay) = ::Math_obj::cos(angle);
HXLINE( 922)			{
HXLINE( 923)				HX_VARI( Float,t) = ((ay * this->zpp_inner->x) - (ax * this->zpp_inner->y));
HXLINE( 924)				this->zpp_inner->y = ((this->zpp_inner->x * ax) + (this->zpp_inner->y * ay));
HXLINE( 925)				this->zpp_inner->x = t;
            			}
HXLINE( 927)			{
HXLINE( 927)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 927)				if (hx::IsNotNull( _this->_invalidate )) {
HXLINE( 927)					_this->_invalidate(_this);
            				}
            			}
            		}
HXLINE( 929)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,rotate,return )

 ::nape::geom::Vec2 Vec2_obj::reflect( ::nape::geom::Vec2 vec,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_942_reflect)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vec,"vec")
            	HX_STACK_ARG(weak,"weak")
HXLINE( 958)		{
HXLINE( 958)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 958)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 958)				_this->_validate();
            			}
            		}
HXDLIN( 958)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN( 958)		{
HXLINE( 958)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 958)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 958)				_this1->_validate();
            			}
            		}
HXDLIN( 958)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN( 958)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 958)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 958)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 958)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 958)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 958)			ret->zpp_pool = null();
            		}
HXDLIN( 958)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 958)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 958)			{
HXLINE( 958)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 958)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 958)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 958)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 958)					ret1->next = null();
            				}
HXDLIN( 958)				ret1->weak = false;
            			}
HXDLIN( 958)			ret1->_immutable = false;
HXDLIN( 958)			{
HXLINE( 958)				ret1->x = x;
HXDLIN( 958)				ret1->y = y;
            			}
HXDLIN( 958)			ret->zpp_inner = ret1;
HXDLIN( 958)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 958)			bool normal;
HXDLIN( 958)			{
HXLINE( 958)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 958)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 958)					_this2->_validate();
            				}
            			}
HXDLIN( 958)			if ((ret->zpp_inner->x == x)) {
HXLINE( 958)				{
HXLINE( 958)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN( 958)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 958)						_this3->_validate();
            					}
            				}
HXDLIN( 958)				normal = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 958)				normal = false;
            			}
HXDLIN( 958)			if (!(normal)) {
HXLINE( 958)				{
HXLINE( 958)					ret->zpp_inner->x = x;
HXDLIN( 958)					ret->zpp_inner->y = y;
            				}
HXDLIN( 958)				{
HXLINE( 958)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN( 958)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 958)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN( 958)		ret->zpp_inner->weak = true;
HXDLIN( 958)		HX_VARI_NAME(  ::nape::geom::Vec2,normal1,"normal") = ret->normalise();
HXLINE( 959)		HX_VARI_NAME(  ::nape::geom::Vec2,ret2,"ret") = vec->sub(normal1->muleq(((int)2 * normal1->dot(vec))),weak);
HXLINE( 960)		if (vec->zpp_inner->weak) {
HXLINE( 964)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vec->zpp_inner;
HXDLIN( 964)			vec->zpp_inner->outer = null();
HXDLIN( 964)			vec->zpp_inner = null();
HXDLIN( 964)			{
HXLINE( 964)				vec->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 964)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vec;
            			}
HXDLIN( 964)			{
HXLINE( 964)				{
HXLINE( 964)					if (hx::IsNotNull( inner->outer )) {
HXLINE( 964)						inner->outer->zpp_inner = null();
HXDLIN( 964)						inner->outer = null();
            					}
HXDLIN( 964)					inner->_isimmutable = null();
HXDLIN( 964)					inner->_validate = null();
HXDLIN( 964)					inner->_invalidate = null();
            				}
HXDLIN( 964)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 964)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE( 971)		return ret2;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,reflect,return )

 ::nape::geom::Vec2 Vec2_obj::normalise(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_984_normalise)
            	HX_STACK_THIS(this)
HXLINE( 996)		{
HXLINE( 997)			{
HXLINE( 997)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN( 997)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 997)					_this->_validate();
            				}
            			}
HXDLIN( 997)			HX_VARI( Float,d) = this->zpp_inner->x;
HXDLIN( 997)			{
HXLINE( 997)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN( 997)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 997)					_this1->_validate();
            				}
            			}
HXDLIN( 997)			HX_VARI_NAME( Float,d1,"d") = (d * this->zpp_inner->x);
HXDLIN( 997)			{
HXLINE( 997)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN( 997)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 997)					_this2->_validate();
            				}
            			}
HXDLIN( 997)			HX_VARI_NAME( Float,d2,"d") = this->zpp_inner->y;
HXDLIN( 997)			{
HXLINE( 997)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN( 997)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 997)					_this3->_validate();
            				}
            			}
HXLINE(1006)			HX_VARI( Float,imag) = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((d1 + (d2 * this->zpp_inner->y))));
HXLINE(1007)			{
HXLINE(1017)				{
HXLINE(1017)					HX_VARI(  ::nape::geom::Vec2,_g) = hx::ObjectPtr<OBJ_>(this);
HXDLIN(1017)					{
HXLINE(1017)						{
HXLINE(1017)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = _g->zpp_inner;
HXDLIN(1017)							if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1017)								_this4->_validate();
            							}
            						}
HXDLIN(1017)						HX_VARI( Float,x) = (_g->zpp_inner->x * imag);
HXDLIN(1017)						{
HXLINE(1017)							{
HXLINE(1017)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = _g->zpp_inner;
HXDLIN(1017)								if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1017)									_this5->_validate();
            								}
            							}
HXDLIN(1017)							if ((_g->zpp_inner->x != x)) {
HXLINE(1017)								_g->zpp_inner->x = x;
HXDLIN(1017)								{
HXLINE(1017)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = _g->zpp_inner;
HXDLIN(1017)									if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1017)										_this6->_invalidate(_this6);
            									}
            								}
            							}
            						}
HXDLIN(1017)						{
HXLINE(1017)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = _g->zpp_inner;
HXDLIN(1017)							if (hx::IsNotNull( _this7->_validate )) {
HXLINE(1017)								_this7->_validate();
            							}
            						}
            					}
            				}
HXLINE(1018)				{
HXLINE(1018)					HX_VARI_NAME(  ::nape::geom::Vec2,_g1,"_g") = hx::ObjectPtr<OBJ_>(this);
HXDLIN(1018)					{
HXLINE(1018)						{
HXLINE(1018)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = _g1->zpp_inner;
HXDLIN(1018)							if (hx::IsNotNull( _this8->_validate )) {
HXLINE(1018)								_this8->_validate();
            							}
            						}
HXDLIN(1018)						HX_VARI( Float,y) = (_g1->zpp_inner->y * imag);
HXDLIN(1018)						{
HXLINE(1018)							{
HXLINE(1018)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = _g1->zpp_inner;
HXDLIN(1018)								if (hx::IsNotNull( _this9->_validate )) {
HXLINE(1018)									_this9->_validate();
            								}
            							}
HXDLIN(1018)							if ((_g1->zpp_inner->y != y)) {
HXLINE(1018)								_g1->zpp_inner->y = y;
HXDLIN(1018)								{
HXLINE(1018)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this10,"_this") = _g1->zpp_inner;
HXDLIN(1018)									if (hx::IsNotNull( _this10->_invalidate )) {
HXLINE(1018)										_this10->_invalidate(_this10);
            									}
            								}
            							}
            						}
HXDLIN(1018)						{
HXLINE(1018)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = _g1->zpp_inner;
HXDLIN(1018)							if (hx::IsNotNull( _this11->_validate )) {
HXLINE(1018)								_this11->_validate();
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE(1021)		{
HXLINE(1021)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this12,"_this") = this->zpp_inner;
HXDLIN(1021)			if (hx::IsNotNull( _this12->_invalidate )) {
HXLINE(1021)				_this12->_invalidate(_this12);
            			}
            		}
HXLINE(1022)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,normalise,return )

 ::nape::geom::Vec2 Vec2_obj::unit(hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1035_unit)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(weak,"weak")
HXLINE(1046)		{
HXLINE(1046)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1046)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1046)				_this->_validate();
            			}
            		}
HXDLIN(1046)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1046)		{
HXLINE(1046)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN(1046)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1046)				_this1->_validate();
            			}
            		}
HXDLIN(1046)		HX_VARI_NAME( Float,x1,"x") = (x * this->zpp_inner->x);
HXDLIN(1046)		{
HXLINE(1046)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1046)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1046)				_this2->_validate();
            			}
            		}
HXDLIN(1046)		HX_VARI_NAME( Float,x2,"x") = this->zpp_inner->y;
HXDLIN(1046)		{
HXLINE(1046)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN(1046)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1046)				_this3->_validate();
            			}
            		}
HXDLIN(1046)		HX_VARI( Float,scale) = ((Float)(int)1 / (Float)::Math_obj::sqrt((x1 + (x2 * this->zpp_inner->y))));
HXLINE(1047)		{
HXLINE(1047)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN(1047)			if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1047)				_this4->_validate();
            			}
            		}
HXDLIN(1047)		HX_VARI_NAME( Float,x3,"x") = (this->zpp_inner->x * scale);
HXDLIN(1047)		{
HXLINE(1047)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = this->zpp_inner;
HXDLIN(1047)			if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1047)				_this5->_validate();
            			}
            		}
HXDLIN(1047)		HX_VARI( Float,y) = (this->zpp_inner->y * scale);
HXDLIN(1047)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1047)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1047)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1047)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1047)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1047)			ret->zpp_pool = null();
            		}
HXDLIN(1047)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1047)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1047)			{
HXLINE(1047)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1047)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1047)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1047)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1047)					ret1->next = null();
            				}
HXDLIN(1047)				ret1->weak = false;
            			}
HXDLIN(1047)			ret1->_immutable = false;
HXDLIN(1047)			{
HXLINE(1047)				ret1->x = x3;
HXDLIN(1047)				ret1->y = y;
            			}
HXDLIN(1047)			ret->zpp_inner = ret1;
HXDLIN(1047)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1047)			bool _hx_tmp;
HXDLIN(1047)			{
HXLINE(1047)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret->zpp_inner;
HXDLIN(1047)				if (hx::IsNotNull( _this6->_validate )) {
HXLINE(1047)					_this6->_validate();
            				}
            			}
HXDLIN(1047)			if ((ret->zpp_inner->x == x3)) {
HXLINE(1047)				{
HXLINE(1047)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = ret->zpp_inner;
HXDLIN(1047)					if (hx::IsNotNull( _this7->_validate )) {
HXLINE(1047)						_this7->_validate();
            					}
            				}
HXDLIN(1047)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE(1047)				_hx_tmp = false;
            			}
HXDLIN(1047)			if (!(_hx_tmp)) {
HXLINE(1047)				{
HXLINE(1047)					ret->zpp_inner->x = x3;
HXDLIN(1047)					ret->zpp_inner->y = y;
            				}
HXDLIN(1047)				{
HXLINE(1047)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = ret->zpp_inner;
HXDLIN(1047)					if (hx::IsNotNull( _this8->_invalidate )) {
HXLINE(1047)						_this8->_invalidate(_this8);
            					}
            				}
            			}
            		}
HXDLIN(1047)		ret->zpp_inner->weak = weak;
HXDLIN(1047)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,unit,return )

 ::nape::geom::Vec2 Vec2_obj::add( ::nape::geom::Vec2 vector,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1066_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
            	HX_STACK_ARG(weak,"weak")
HXLINE(1082)		{
HXLINE(1082)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1082)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1082)				_this->_validate();
            			}
            		}
HXDLIN(1082)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1082)		{
HXLINE(1082)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1082)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1082)				_this1->_validate();
            			}
            		}
HXDLIN(1082)		HX_VARI_NAME( Float,x1,"x") = (x + vector->zpp_inner->x);
HXDLIN(1082)		{
HXLINE(1082)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1082)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1082)				_this2->_validate();
            			}
            		}
HXDLIN(1082)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN(1082)		{
HXLINE(1082)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1082)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1082)				_this3->_validate();
            			}
            		}
HXDLIN(1082)		HX_VARI_NAME( Float,y1,"y") = (y + vector->zpp_inner->y);
HXDLIN(1082)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1082)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1082)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1082)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1082)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1082)			ret->zpp_pool = null();
            		}
HXDLIN(1082)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1082)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1082)			{
HXLINE(1082)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1082)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1082)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1082)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1082)					ret1->next = null();
            				}
HXDLIN(1082)				ret1->weak = false;
            			}
HXDLIN(1082)			ret1->_immutable = false;
HXDLIN(1082)			{
HXLINE(1082)				ret1->x = x1;
HXDLIN(1082)				ret1->y = y1;
            			}
HXDLIN(1082)			ret->zpp_inner = ret1;
HXDLIN(1082)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1082)			bool _hx_tmp;
HXDLIN(1082)			{
HXLINE(1082)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN(1082)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1082)					_this4->_validate();
            				}
            			}
HXDLIN(1082)			if ((ret->zpp_inner->x == x1)) {
HXLINE(1082)				{
HXLINE(1082)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = ret->zpp_inner;
HXDLIN(1082)					if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1082)						_this5->_validate();
            					}
            				}
HXDLIN(1082)				_hx_tmp = (ret->zpp_inner->y == y1);
            			}
            			else {
HXLINE(1082)				_hx_tmp = false;
            			}
HXDLIN(1082)			if (!(_hx_tmp)) {
HXLINE(1082)				{
HXLINE(1082)					ret->zpp_inner->x = x1;
HXDLIN(1082)					ret->zpp_inner->y = y1;
            				}
HXDLIN(1082)				{
HXLINE(1082)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret->zpp_inner;
HXDLIN(1082)					if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1082)						_this6->_invalidate(_this6);
            					}
            				}
            			}
            		}
HXDLIN(1082)		ret->zpp_inner->weak = weak;
HXLINE(1083)		if (vector->zpp_inner->weak) {
HXLINE(1087)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1087)			vector->zpp_inner->outer = null();
HXDLIN(1087)			vector->zpp_inner = null();
HXDLIN(1087)			{
HXLINE(1087)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1087)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1087)			{
HXLINE(1087)				{
HXLINE(1087)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1087)						inner->outer->zpp_inner = null();
HXDLIN(1087)						inner->outer = null();
            					}
HXDLIN(1087)					inner->_isimmutable = null();
HXDLIN(1087)					inner->_validate = null();
HXDLIN(1087)					inner->_invalidate = null();
            				}
HXDLIN(1087)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1087)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1094)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,add,return )

 ::nape::geom::Vec2 Vec2_obj::addMul( ::nape::geom::Vec2 vector,Float scalar,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1119_addMul)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
            	HX_STACK_ARG(scalar,"scalar")
            	HX_STACK_ARG(weak,"weak")
HXLINE(1135)		{
HXLINE(1135)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1135)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1135)				_this->_validate();
            			}
            		}
HXDLIN(1135)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1135)		{
HXLINE(1135)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1135)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1135)				_this1->_validate();
            			}
            		}
HXDLIN(1135)		HX_VARI_NAME( Float,x1,"x") = (x + (vector->zpp_inner->x * scalar));
HXDLIN(1135)		{
HXLINE(1135)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1135)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1135)				_this2->_validate();
            			}
            		}
HXDLIN(1135)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN(1135)		{
HXLINE(1135)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1135)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1135)				_this3->_validate();
            			}
            		}
HXDLIN(1135)		HX_VARI_NAME( Float,y1,"y") = (y + (vector->zpp_inner->y * scalar));
HXDLIN(1135)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1135)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1135)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1135)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1135)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1135)			ret->zpp_pool = null();
            		}
HXDLIN(1135)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1135)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1135)			{
HXLINE(1135)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1135)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1135)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1135)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1135)					ret1->next = null();
            				}
HXDLIN(1135)				ret1->weak = false;
            			}
HXDLIN(1135)			ret1->_immutable = false;
HXDLIN(1135)			{
HXLINE(1135)				ret1->x = x1;
HXDLIN(1135)				ret1->y = y1;
            			}
HXDLIN(1135)			ret->zpp_inner = ret1;
HXDLIN(1135)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1135)			bool _hx_tmp;
HXDLIN(1135)			{
HXLINE(1135)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN(1135)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1135)					_this4->_validate();
            				}
            			}
HXDLIN(1135)			if ((ret->zpp_inner->x == x1)) {
HXLINE(1135)				{
HXLINE(1135)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = ret->zpp_inner;
HXDLIN(1135)					if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1135)						_this5->_validate();
            					}
            				}
HXDLIN(1135)				_hx_tmp = (ret->zpp_inner->y == y1);
            			}
            			else {
HXLINE(1135)				_hx_tmp = false;
            			}
HXDLIN(1135)			if (!(_hx_tmp)) {
HXLINE(1135)				{
HXLINE(1135)					ret->zpp_inner->x = x1;
HXDLIN(1135)					ret->zpp_inner->y = y1;
            				}
HXDLIN(1135)				{
HXLINE(1135)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret->zpp_inner;
HXDLIN(1135)					if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1135)						_this6->_invalidate(_this6);
            					}
            				}
            			}
            		}
HXDLIN(1135)		ret->zpp_inner->weak = weak;
HXLINE(1136)		if (vector->zpp_inner->weak) {
HXLINE(1140)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1140)			vector->zpp_inner->outer = null();
HXDLIN(1140)			vector->zpp_inner = null();
HXDLIN(1140)			{
HXLINE(1140)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1140)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1140)			{
HXLINE(1140)				{
HXLINE(1140)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1140)						inner->outer->zpp_inner = null();
HXDLIN(1140)						inner->outer = null();
            					}
HXDLIN(1140)					inner->_isimmutable = null();
HXDLIN(1140)					inner->_validate = null();
HXDLIN(1140)					inner->_invalidate = null();
            				}
HXDLIN(1140)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1140)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1147)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Vec2_obj,addMul,return )

 ::nape::geom::Vec2 Vec2_obj::sub( ::nape::geom::Vec2 vector,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1165_sub)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
            	HX_STACK_ARG(weak,"weak")
HXLINE(1181)		{
HXLINE(1181)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1181)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1181)				_this->_validate();
            			}
            		}
HXDLIN(1181)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1181)		{
HXLINE(1181)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1181)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1181)				_this1->_validate();
            			}
            		}
HXDLIN(1181)		HX_VARI_NAME( Float,x1,"x") = (x - vector->zpp_inner->x);
HXDLIN(1181)		{
HXLINE(1181)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1181)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1181)				_this2->_validate();
            			}
            		}
HXDLIN(1181)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN(1181)		{
HXLINE(1181)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1181)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1181)				_this3->_validate();
            			}
            		}
HXDLIN(1181)		HX_VARI_NAME( Float,y1,"y") = (y - vector->zpp_inner->y);
HXDLIN(1181)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1181)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1181)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1181)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1181)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1181)			ret->zpp_pool = null();
            		}
HXDLIN(1181)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1181)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1181)			{
HXLINE(1181)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1181)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1181)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1181)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1181)					ret1->next = null();
            				}
HXDLIN(1181)				ret1->weak = false;
            			}
HXDLIN(1181)			ret1->_immutable = false;
HXDLIN(1181)			{
HXLINE(1181)				ret1->x = x1;
HXDLIN(1181)				ret1->y = y1;
            			}
HXDLIN(1181)			ret->zpp_inner = ret1;
HXDLIN(1181)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1181)			bool _hx_tmp;
HXDLIN(1181)			{
HXLINE(1181)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN(1181)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1181)					_this4->_validate();
            				}
            			}
HXDLIN(1181)			if ((ret->zpp_inner->x == x1)) {
HXLINE(1181)				{
HXLINE(1181)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = ret->zpp_inner;
HXDLIN(1181)					if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1181)						_this5->_validate();
            					}
            				}
HXDLIN(1181)				_hx_tmp = (ret->zpp_inner->y == y1);
            			}
            			else {
HXLINE(1181)				_hx_tmp = false;
            			}
HXDLIN(1181)			if (!(_hx_tmp)) {
HXLINE(1181)				{
HXLINE(1181)					ret->zpp_inner->x = x1;
HXDLIN(1181)					ret->zpp_inner->y = y1;
            				}
HXDLIN(1181)				{
HXLINE(1181)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret->zpp_inner;
HXDLIN(1181)					if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1181)						_this6->_invalidate(_this6);
            					}
            				}
            			}
            		}
HXDLIN(1181)		ret->zpp_inner->weak = weak;
HXLINE(1182)		if (vector->zpp_inner->weak) {
HXLINE(1186)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1186)			vector->zpp_inner->outer = null();
HXDLIN(1186)			vector->zpp_inner = null();
HXDLIN(1186)			{
HXLINE(1186)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1186)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1186)			{
HXLINE(1186)				{
HXLINE(1186)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1186)						inner->outer->zpp_inner = null();
HXDLIN(1186)						inner->outer = null();
            					}
HXDLIN(1186)					inner->_isimmutable = null();
HXDLIN(1186)					inner->_validate = null();
HXDLIN(1186)					inner->_invalidate = null();
            				}
HXDLIN(1186)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1186)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1193)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,sub,return )

 ::nape::geom::Vec2 Vec2_obj::mul(Float scalar,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1220_mul)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(scalar,"scalar")
            	HX_STACK_ARG(weak,"weak")
HXLINE(1220)		{
HXLINE(1220)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1220)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1220)				_this->_validate();
            			}
            		}
HXDLIN(1220)		HX_VARI( Float,x) = (this->zpp_inner->x * scalar);
HXDLIN(1220)		{
HXLINE(1220)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN(1220)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1220)				_this1->_validate();
            			}
            		}
HXDLIN(1220)		HX_VARI( Float,y) = (this->zpp_inner->y * scalar);
HXDLIN(1220)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1220)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1220)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1220)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1220)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1220)			ret->zpp_pool = null();
            		}
HXDLIN(1220)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1220)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1220)			{
HXLINE(1220)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1220)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1220)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1220)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1220)					ret1->next = null();
            				}
HXDLIN(1220)				ret1->weak = false;
            			}
HXDLIN(1220)			ret1->_immutable = false;
HXDLIN(1220)			{
HXLINE(1220)				ret1->x = x;
HXDLIN(1220)				ret1->y = y;
            			}
HXDLIN(1220)			ret->zpp_inner = ret1;
HXDLIN(1220)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1220)			bool _hx_tmp;
HXDLIN(1220)			{
HXLINE(1220)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN(1220)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1220)					_this2->_validate();
            				}
            			}
HXDLIN(1220)			if ((ret->zpp_inner->x == x)) {
HXLINE(1220)				{
HXLINE(1220)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN(1220)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1220)						_this3->_validate();
            					}
            				}
HXDLIN(1220)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE(1220)				_hx_tmp = false;
            			}
HXDLIN(1220)			if (!(_hx_tmp)) {
HXLINE(1220)				{
HXLINE(1220)					ret->zpp_inner->x = x;
HXDLIN(1220)					ret->zpp_inner->y = y;
            				}
HXDLIN(1220)				{
HXLINE(1220)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN(1220)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE(1220)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN(1220)		ret->zpp_inner->weak = weak;
HXDLIN(1220)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,mul,return )

 ::nape::geom::Vec2 Vec2_obj::addeq( ::nape::geom::Vec2 vector){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1237_addeq)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE(1254)		{
HXLINE(1254)			{
HXLINE(1254)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1254)				if (hx::IsNotNull( _this->_validate )) {
HXLINE(1254)					_this->_validate();
            				}
            			}
HXDLIN(1254)			HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1254)			{
HXLINE(1254)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1254)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1254)					_this1->_validate();
            				}
            			}
HXDLIN(1254)			HX_VARI_NAME( Float,x1,"x") = (x + vector->zpp_inner->x);
HXDLIN(1254)			{
HXLINE(1254)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1254)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1254)					_this2->_validate();
            				}
            			}
HXDLIN(1254)			HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN(1254)			{
HXLINE(1254)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1254)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1254)					_this3->_validate();
            				}
            			}
HXDLIN(1254)			HX_VARI_NAME( Float,y1,"y") = (y + vector->zpp_inner->y);
HXDLIN(1254)			bool _hx_tmp;
HXDLIN(1254)			{
HXLINE(1254)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN(1254)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1254)					_this4->_validate();
            				}
            			}
HXDLIN(1254)			if ((this->zpp_inner->x == x1)) {
HXLINE(1254)				{
HXLINE(1254)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = this->zpp_inner;
HXDLIN(1254)					if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1254)						_this5->_validate();
            					}
            				}
HXDLIN(1254)				_hx_tmp = (this->zpp_inner->y == y1);
            			}
            			else {
HXLINE(1254)				_hx_tmp = false;
            			}
HXDLIN(1254)			if (!(_hx_tmp)) {
HXLINE(1254)				{
HXLINE(1254)					this->zpp_inner->x = x1;
HXDLIN(1254)					this->zpp_inner->y = y1;
            				}
HXDLIN(1254)				{
HXLINE(1254)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = this->zpp_inner;
HXDLIN(1254)					if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1254)						_this6->_invalidate(_this6);
            					}
            				}
            			}
            		}
HXLINE(1255)		if (vector->zpp_inner->weak) {
HXLINE(1259)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1259)			vector->zpp_inner->outer = null();
HXDLIN(1259)			vector->zpp_inner = null();
HXDLIN(1259)			{
HXLINE(1259)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1259)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1259)			{
HXLINE(1259)				{
HXLINE(1259)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1259)						inner->outer->zpp_inner = null();
HXDLIN(1259)						inner->outer = null();
            					}
HXDLIN(1259)					inner->_isimmutable = null();
HXDLIN(1259)					inner->_validate = null();
HXDLIN(1259)					inner->_invalidate = null();
            				}
HXDLIN(1259)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1259)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1266)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,addeq,return )

 ::nape::geom::Vec2 Vec2_obj::subeq( ::nape::geom::Vec2 vector){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1283_subeq)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE(1300)		{
HXLINE(1300)			{
HXLINE(1300)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1300)				if (hx::IsNotNull( _this->_validate )) {
HXLINE(1300)					_this->_validate();
            				}
            			}
HXDLIN(1300)			HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN(1300)			{
HXLINE(1300)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1300)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1300)					_this1->_validate();
            				}
            			}
HXDLIN(1300)			HX_VARI_NAME( Float,x1,"x") = (x - vector->zpp_inner->x);
HXDLIN(1300)			{
HXLINE(1300)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1300)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1300)					_this2->_validate();
            				}
            			}
HXDLIN(1300)			HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN(1300)			{
HXLINE(1300)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1300)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1300)					_this3->_validate();
            				}
            			}
HXDLIN(1300)			HX_VARI_NAME( Float,y1,"y") = (y - vector->zpp_inner->y);
HXDLIN(1300)			bool _hx_tmp;
HXDLIN(1300)			{
HXLINE(1300)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN(1300)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE(1300)					_this4->_validate();
            				}
            			}
HXDLIN(1300)			if ((this->zpp_inner->x == x1)) {
HXLINE(1300)				{
HXLINE(1300)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = this->zpp_inner;
HXDLIN(1300)					if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1300)						_this5->_validate();
            					}
            				}
HXDLIN(1300)				_hx_tmp = (this->zpp_inner->y == y1);
            			}
            			else {
HXLINE(1300)				_hx_tmp = false;
            			}
HXDLIN(1300)			if (!(_hx_tmp)) {
HXLINE(1300)				{
HXLINE(1300)					this->zpp_inner->x = x1;
HXDLIN(1300)					this->zpp_inner->y = y1;
            				}
HXDLIN(1300)				{
HXLINE(1300)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = this->zpp_inner;
HXDLIN(1300)					if (hx::IsNotNull( _this6->_invalidate )) {
HXLINE(1300)						_this6->_invalidate(_this6);
            					}
            				}
            			}
            		}
HXLINE(1301)		if (vector->zpp_inner->weak) {
HXLINE(1305)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1305)			vector->zpp_inner->outer = null();
HXDLIN(1305)			vector->zpp_inner = null();
HXDLIN(1305)			{
HXLINE(1305)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1305)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1305)			{
HXLINE(1305)				{
HXLINE(1305)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1305)						inner->outer->zpp_inner = null();
HXDLIN(1305)						inner->outer = null();
            					}
HXDLIN(1305)					inner->_isimmutable = null();
HXDLIN(1305)					inner->_validate = null();
HXDLIN(1305)					inner->_invalidate = null();
            				}
HXDLIN(1305)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1305)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1312)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,subeq,return )

 ::nape::geom::Vec2 Vec2_obj::muleq(Float scalar){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1328_muleq)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(scalar,"scalar")
HXLINE(1340)		{
HXLINE(1340)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1340)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1340)				_this->_validate();
            			}
            		}
HXDLIN(1340)		HX_VARI( Float,x) = (this->zpp_inner->x * scalar);
HXDLIN(1340)		{
HXLINE(1340)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN(1340)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1340)				_this1->_validate();
            			}
            		}
HXDLIN(1340)		HX_VARI( Float,y) = (this->zpp_inner->y * scalar);
HXDLIN(1340)		bool _hx_tmp;
HXDLIN(1340)		{
HXLINE(1340)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1340)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1340)				_this2->_validate();
            			}
            		}
HXDLIN(1340)		if ((this->zpp_inner->x == x)) {
HXLINE(1340)			{
HXLINE(1340)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN(1340)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1340)					_this3->_validate();
            				}
            			}
HXDLIN(1340)			_hx_tmp = (this->zpp_inner->y == y);
            		}
            		else {
HXLINE(1340)			_hx_tmp = false;
            		}
HXDLIN(1340)		if (!(_hx_tmp)) {
HXLINE(1340)			{
HXLINE(1340)				this->zpp_inner->x = x;
HXDLIN(1340)				this->zpp_inner->y = y;
            			}
HXDLIN(1340)			{
HXLINE(1340)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = this->zpp_inner;
HXDLIN(1340)				if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE(1340)					_this4->_invalidate(_this4);
            				}
            			}
            		}
HXDLIN(1340)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,muleq,return )

Float Vec2_obj::dot( ::nape::geom::Vec2 vector){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1359_dot)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE(1375)		{
HXLINE(1375)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1375)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1375)				_this->_validate();
            			}
            		}
HXDLIN(1375)		HX_VARI( Float,ret) = this->zpp_inner->x;
HXDLIN(1375)		{
HXLINE(1375)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = vector->zpp_inner;
HXDLIN(1375)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1375)				_this1->_validate();
            			}
            		}
HXDLIN(1375)		HX_VARI_NAME( Float,ret1,"ret") = (ret * vector->zpp_inner->x);
HXDLIN(1375)		{
HXLINE(1375)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = this->zpp_inner;
HXDLIN(1375)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1375)				_this2->_validate();
            			}
            		}
HXDLIN(1375)		HX_VARI_NAME( Float,ret2,"ret") = this->zpp_inner->y;
HXDLIN(1375)		{
HXLINE(1375)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = vector->zpp_inner;
HXDLIN(1375)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1375)				_this3->_validate();
            			}
            		}
HXDLIN(1375)		HX_VARI_NAME( Float,ret3,"ret") = (ret1 + (ret2 * vector->zpp_inner->y));
HXLINE(1376)		if (vector->zpp_inner->weak) {
HXLINE(1380)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1380)			vector->zpp_inner->outer = null();
HXDLIN(1380)			vector->zpp_inner = null();
HXDLIN(1380)			{
HXLINE(1380)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1380)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1380)			{
HXLINE(1380)				{
HXLINE(1380)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1380)						inner->outer->zpp_inner = null();
HXDLIN(1380)						inner->outer = null();
            					}
HXDLIN(1380)					inner->_isimmutable = null();
HXDLIN(1380)					inner->_validate = null();
HXDLIN(1380)					inner->_invalidate = null();
            				}
HXDLIN(1380)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1380)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1387)		return ret3;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,dot,return )

Float Vec2_obj::cross( ::nape::geom::Vec2 vector){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1419_cross)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE(1435)		{
HXLINE(1435)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = vector->zpp_inner;
HXDLIN(1435)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1435)				_this->_validate();
            			}
            		}
HXDLIN(1435)		HX_VARI( Float,ret) = vector->zpp_inner->y;
HXDLIN(1435)		{
HXLINE(1435)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN(1435)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1435)				_this1->_validate();
            			}
            		}
HXDLIN(1435)		HX_VARI_NAME( Float,ret1,"ret") = (ret * this->zpp_inner->x);
HXDLIN(1435)		{
HXLINE(1435)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = vector->zpp_inner;
HXDLIN(1435)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1435)				_this2->_validate();
            			}
            		}
HXDLIN(1435)		HX_VARI_NAME( Float,ret2,"ret") = vector->zpp_inner->x;
HXDLIN(1435)		{
HXLINE(1435)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = this->zpp_inner;
HXDLIN(1435)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1435)				_this3->_validate();
            			}
            		}
HXDLIN(1435)		HX_VARI_NAME( Float,ret3,"ret") = (ret1 - (ret2 * this->zpp_inner->y));
HXLINE(1436)		if (vector->zpp_inner->weak) {
HXLINE(1440)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = vector->zpp_inner;
HXDLIN(1440)			vector->zpp_inner->outer = null();
HXDLIN(1440)			vector->zpp_inner = null();
HXDLIN(1440)			{
HXLINE(1440)				vector->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1440)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = vector;
            			}
HXDLIN(1440)			{
HXLINE(1440)				{
HXLINE(1440)					if (hx::IsNotNull( inner->outer )) {
HXLINE(1440)						inner->outer->zpp_inner = null();
HXDLIN(1440)						inner->outer = null();
            					}
HXDLIN(1440)					inner->_isimmutable = null();
HXDLIN(1440)					inner->_validate = null();
HXDLIN(1440)					inner->_invalidate = null();
            				}
HXDLIN(1440)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1440)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE(1447)		return ret3;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,cross,return )

 ::nape::geom::Vec2 Vec2_obj::perp(hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1476_perp)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(weak,"weak")
HXLINE(1476)		{
HXLINE(1476)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1476)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1476)				_this->_validate();
            			}
            		}
HXDLIN(1476)		HX_VARI( Float,x) = -(this->zpp_inner->y);
HXDLIN(1476)		{
HXLINE(1476)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = this->zpp_inner;
HXDLIN(1476)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1476)				_this1->_validate();
            			}
            		}
HXDLIN(1476)		HX_VARI( Float,y) = this->zpp_inner->x;
HXDLIN(1476)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1476)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1476)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE(1476)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1476)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1476)			ret->zpp_pool = null();
            		}
HXDLIN(1476)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1476)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1476)			{
HXLINE(1476)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1476)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE(1476)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1476)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1476)					ret1->next = null();
            				}
HXDLIN(1476)				ret1->weak = false;
            			}
HXDLIN(1476)			ret1->_immutable = false;
HXDLIN(1476)			{
HXLINE(1476)				ret1->x = x;
HXDLIN(1476)				ret1->y = y;
            			}
HXDLIN(1476)			ret->zpp_inner = ret1;
HXDLIN(1476)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE(1476)			bool _hx_tmp;
HXDLIN(1476)			{
HXLINE(1476)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN(1476)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1476)					_this2->_validate();
            				}
            			}
HXDLIN(1476)			if ((ret->zpp_inner->x == x)) {
HXLINE(1476)				{
HXLINE(1476)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN(1476)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE(1476)						_this3->_validate();
            					}
            				}
HXDLIN(1476)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE(1476)				_hx_tmp = false;
            			}
HXDLIN(1476)			if (!(_hx_tmp)) {
HXLINE(1476)				{
HXLINE(1476)					ret->zpp_inner->x = x;
HXDLIN(1476)					ret->zpp_inner->y = y;
            				}
HXDLIN(1476)				{
HXLINE(1476)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN(1476)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE(1476)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN(1476)		ret->zpp_inner->weak = weak;
HXDLIN(1476)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec2_obj,perp,return )

::String Vec2_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_1481_toString)
            	HX_STACK_THIS(this)
HXLINE(1487)		{
HXLINE(1487)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = this->zpp_inner;
HXDLIN(1487)			if (hx::IsNotNull( _this->_validate )) {
HXLINE(1487)				_this->_validate();
            			}
            		}
HXLINE(1488)		return this->zpp_inner->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec2_obj,toString,return )

 ::nape::geom::Vec2 Vec2_obj::weak(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_257_weak)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE( 257)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 257)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 257)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 257)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 257)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 257)			ret->zpp_pool = null();
            		}
HXDLIN( 257)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 257)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 257)			{
HXLINE( 257)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 257)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 257)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 257)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 257)					ret1->next = null();
            				}
HXDLIN( 257)				ret1->weak = false;
            			}
HXDLIN( 257)			ret1->_immutable = false;
HXDLIN( 257)			{
HXLINE( 257)				ret1->x = x;
HXDLIN( 257)				ret1->y = y;
            			}
HXDLIN( 257)			ret->zpp_inner = ret1;
HXDLIN( 257)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 257)			bool _hx_tmp;
HXDLIN( 257)			{
HXLINE( 257)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = ret->zpp_inner;
HXDLIN( 257)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 257)					_this->_validate();
            				}
            			}
HXDLIN( 257)			if ((ret->zpp_inner->x == x)) {
HXLINE( 257)				{
HXLINE( 257)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN( 257)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 257)						_this1->_validate();
            					}
            				}
HXDLIN( 257)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 257)				_hx_tmp = false;
            			}
HXDLIN( 257)			if (!(_hx_tmp)) {
HXLINE( 257)				{
HXLINE( 257)					ret->zpp_inner->x = x;
HXDLIN( 257)					ret->zpp_inner->y = y;
            				}
HXDLIN( 257)				{
HXLINE( 257)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 257)					if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 257)						_this2->_invalidate(_this2);
            					}
            				}
            			}
            		}
HXDLIN( 257)		ret->zpp_inner->weak = true;
HXDLIN( 257)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,weak,return )

 ::nape::geom::Vec2 Vec2_obj::get(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< bool >  __o_weak){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_273_get)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(weak,"weak")
HXLINE( 279)		HX_VAR(  ::nape::geom::Vec2,ret);
HXLINE( 281)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 282)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 288)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXLINE( 289)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXLINE( 290)			ret->zpp_pool = null();
            		}
HXLINE( 300)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 301)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 301)			{
HXLINE( 301)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 301)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 301)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 301)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 301)					ret1->next = null();
            				}
HXDLIN( 301)				ret1->weak = false;
            			}
HXDLIN( 301)			ret1->_immutable = false;
HXDLIN( 301)			{
HXLINE( 301)				ret1->x = x;
HXDLIN( 301)				ret1->y = y;
            			}
HXDLIN( 301)			ret->zpp_inner = ret1;
HXLINE( 302)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 305)			bool _hx_tmp;
HXDLIN( 305)			{
HXLINE( 305)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = ret->zpp_inner;
HXDLIN( 305)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 305)					_this->_validate();
            				}
            			}
HXDLIN( 305)			if ((ret->zpp_inner->x == x)) {
HXLINE( 305)				{
HXLINE( 305)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN( 305)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 305)						_this1->_validate();
            					}
            				}
HXDLIN( 305)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 305)				_hx_tmp = false;
            			}
HXDLIN( 305)			if (!(_hx_tmp)) {
HXLINE( 305)				{
HXLINE( 305)					ret->zpp_inner->x = x;
HXDLIN( 305)					ret->zpp_inner->y = y;
            				}
HXDLIN( 305)				{
HXLINE( 305)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 305)					if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 305)						_this2->_invalidate(_this2);
            					}
            				}
            			}
            		}
HXLINE( 307)		ret->zpp_inner->weak = weak;
HXLINE( 308)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vec2_obj,get,return )

 ::nape::geom::Vec2 Vec2_obj::fromPoint( ::openfl::_legacy::geom::Point point,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_461_fromPoint)
            	HX_STACK_ARG(point,"point")
            	HX_STACK_ARG(weak,"weak")
HXLINE( 461)		HX_VARI( Float,x) = point->x;
HXDLIN( 461)		HX_VARI( Float,y) = point->y;
HXDLIN( 461)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 461)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 461)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 461)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 461)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 461)			ret->zpp_pool = null();
            		}
HXDLIN( 461)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 461)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 461)			{
HXLINE( 461)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 461)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 461)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 461)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 461)					ret1->next = null();
            				}
HXDLIN( 461)				ret1->weak = false;
            			}
HXDLIN( 461)			ret1->_immutable = false;
HXDLIN( 461)			{
HXLINE( 461)				ret1->x = x;
HXDLIN( 461)				ret1->y = y;
            			}
HXDLIN( 461)			ret->zpp_inner = ret1;
HXDLIN( 461)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 461)			bool _hx_tmp;
HXDLIN( 461)			{
HXLINE( 461)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = ret->zpp_inner;
HXDLIN( 461)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 461)					_this->_validate();
            				}
            			}
HXDLIN( 461)			if ((ret->zpp_inner->x == x)) {
HXLINE( 461)				{
HXLINE( 461)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN( 461)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 461)						_this1->_validate();
            					}
            				}
HXDLIN( 461)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 461)				_hx_tmp = false;
            			}
HXDLIN( 461)			if (!(_hx_tmp)) {
HXLINE( 461)				{
HXLINE( 461)					ret->zpp_inner->x = x;
HXDLIN( 461)					ret->zpp_inner->y = y;
            				}
HXDLIN( 461)				{
HXLINE( 461)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 461)					if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 461)						_this2->_invalidate(_this2);
            					}
            				}
            			}
            		}
HXDLIN( 461)		ret->zpp_inner->weak = weak;
HXDLIN( 461)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,fromPoint,return )

 ::nape::geom::Vec2 Vec2_obj::fromPolar(Float length,Float angle,hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_514_fromPolar)
            	HX_STACK_ARG(length,"length")
            	HX_STACK_ARG(angle,"angle")
            	HX_STACK_ARG(weak,"weak")
HXLINE( 514)		HX_VARI( Float,x) = (length * ::Math_obj::cos(angle));
HXDLIN( 514)		HX_VARI( Float,y) = (length * ::Math_obj::sin(angle));
HXDLIN( 514)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 514)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 514)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 514)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 514)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 514)			ret->zpp_pool = null();
            		}
HXDLIN( 514)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 514)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 514)			{
HXLINE( 514)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 514)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 514)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 514)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 514)					ret1->next = null();
            				}
HXDLIN( 514)				ret1->weak = false;
            			}
HXDLIN( 514)			ret1->_immutable = false;
HXDLIN( 514)			{
HXLINE( 514)				ret1->x = x;
HXDLIN( 514)				ret1->y = y;
            			}
HXDLIN( 514)			ret->zpp_inner = ret1;
HXDLIN( 514)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 514)			bool _hx_tmp;
HXDLIN( 514)			{
HXLINE( 514)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = ret->zpp_inner;
HXDLIN( 514)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 514)					_this->_validate();
            				}
            			}
HXDLIN( 514)			if ((ret->zpp_inner->x == x)) {
HXLINE( 514)				{
HXLINE( 514)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN( 514)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 514)						_this1->_validate();
            					}
            				}
HXDLIN( 514)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 514)				_hx_tmp = false;
            			}
HXDLIN( 514)			if (!(_hx_tmp)) {
HXLINE( 514)				{
HXLINE( 514)					ret->zpp_inner->x = x;
HXDLIN( 514)					ret->zpp_inner->y = y;
            				}
HXDLIN( 514)				{
HXLINE( 514)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 514)					if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 514)						_this2->_invalidate(_this2);
            					}
            				}
            			}
            		}
HXDLIN( 514)		ret->zpp_inner->weak = weak;
HXDLIN( 514)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vec2_obj,fromPolar,return )

Float Vec2_obj::dsq( ::nape::geom::Vec2 a, ::nape::geom::Vec2 b){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_711_dsq)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 725)		{
HXLINE( 725)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = a->zpp_inner;
HXDLIN( 725)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 725)				_this->_validate();
            			}
            		}
HXDLIN( 725)		Float ax = a->zpp_inner->x;
HXDLIN( 725)		{
HXLINE( 725)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = a->zpp_inner;
HXDLIN( 725)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 725)				_this1->_validate();
            			}
            		}
HXDLIN( 725)		Float ay = a->zpp_inner->y;
HXDLIN( 725)		{
HXLINE( 725)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = b->zpp_inner;
HXDLIN( 725)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 725)				_this2->_validate();
            			}
            		}
HXDLIN( 725)		Float bx = b->zpp_inner->x;
HXDLIN( 725)		{
HXLINE( 725)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = b->zpp_inner;
HXDLIN( 725)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 725)				_this3->_validate();
            			}
            		}
HXDLIN( 725)		HX_VARI( Float,dx) = ((Float)0.0);
HXDLIN( 725)		HX_VARI( Float,dy) = ((Float)0.0);
HXDLIN( 725)		{
HXLINE( 725)			dx = (ax - bx);
HXDLIN( 725)			dy = (ay - b->zpp_inner->y);
            		}
HXLINE( 726)		if (a->zpp_inner->weak) {
HXLINE( 730)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = a->zpp_inner;
HXDLIN( 730)			a->zpp_inner->outer = null();
HXDLIN( 730)			a->zpp_inner = null();
HXDLIN( 730)			{
HXLINE( 730)				a->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 730)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = a;
            			}
HXDLIN( 730)			{
HXLINE( 730)				{
HXLINE( 730)					if (hx::IsNotNull( inner->outer )) {
HXLINE( 730)						inner->outer->zpp_inner = null();
HXDLIN( 730)						inner->outer = null();
            					}
HXDLIN( 730)					inner->_isimmutable = null();
HXDLIN( 730)					inner->_validate = null();
HXDLIN( 730)					inner->_invalidate = null();
            				}
HXDLIN( 730)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 730)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE( 737)		if (b->zpp_inner->weak) {
HXLINE( 741)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner1,"inner") = b->zpp_inner;
HXDLIN( 741)			b->zpp_inner->outer = null();
HXDLIN( 741)			b->zpp_inner = null();
HXDLIN( 741)			{
HXLINE( 741)				b->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 741)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = b;
            			}
HXDLIN( 741)			{
HXLINE( 741)				{
HXLINE( 741)					if (hx::IsNotNull( inner1->outer )) {
HXLINE( 741)						inner1->outer->zpp_inner = null();
HXDLIN( 741)						inner1->outer = null();
            					}
HXDLIN( 741)					inner1->_isimmutable = null();
HXDLIN( 741)					inner1->_validate = null();
HXDLIN( 741)					inner1->_invalidate = null();
            				}
HXDLIN( 741)				inner1->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 741)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner1;
            			}
            		}
HXLINE( 748)		return ((dx * dx) + (dy * dy));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,dsq,return )

Float Vec2_obj::distance( ::nape::geom::Vec2 a, ::nape::geom::Vec2 b){
            	HX_STACKFRAME(&_hx_pos_7b41e6298c0d3dcf_759_distance)
            	HX_STACK_ARG(a,"a")
            	HX_STACK_ARG(b,"b")
HXLINE( 773)		{
HXLINE( 773)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = a->zpp_inner;
HXDLIN( 773)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 773)				_this->_validate();
            			}
            		}
HXDLIN( 773)		Float ax = a->zpp_inner->x;
HXDLIN( 773)		{
HXLINE( 773)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = a->zpp_inner;
HXDLIN( 773)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 773)				_this1->_validate();
            			}
            		}
HXDLIN( 773)		Float ay = a->zpp_inner->y;
HXDLIN( 773)		{
HXLINE( 773)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = b->zpp_inner;
HXDLIN( 773)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 773)				_this2->_validate();
            			}
            		}
HXDLIN( 773)		Float bx = b->zpp_inner->x;
HXDLIN( 773)		{
HXLINE( 773)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = b->zpp_inner;
HXDLIN( 773)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 773)				_this3->_validate();
            			}
            		}
HXDLIN( 773)		HX_VARI( Float,dx) = ((Float)0.0);
HXDLIN( 773)		HX_VARI( Float,dy) = ((Float)0.0);
HXDLIN( 773)		{
HXLINE( 773)			dx = (ax - bx);
HXDLIN( 773)			dy = (ay - b->zpp_inner->y);
            		}
HXDLIN( 773)		HX_VARI( Float,ret) = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXLINE( 774)		if (a->zpp_inner->weak) {
HXLINE( 778)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = a->zpp_inner;
HXDLIN( 778)			a->zpp_inner->outer = null();
HXDLIN( 778)			a->zpp_inner = null();
HXDLIN( 778)			{
HXLINE( 778)				a->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 778)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = a;
            			}
HXDLIN( 778)			{
HXLINE( 778)				{
HXLINE( 778)					if (hx::IsNotNull( inner->outer )) {
HXLINE( 778)						inner->outer->zpp_inner = null();
HXDLIN( 778)						inner->outer = null();
            					}
HXDLIN( 778)					inner->_isimmutable = null();
HXDLIN( 778)					inner->_validate = null();
HXDLIN( 778)					inner->_invalidate = null();
            				}
HXDLIN( 778)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 778)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
HXLINE( 785)		if (b->zpp_inner->weak) {
HXLINE( 789)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner1,"inner") = b->zpp_inner;
HXDLIN( 789)			b->zpp_inner->outer = null();
HXDLIN( 789)			b->zpp_inner = null();
HXDLIN( 789)			{
HXLINE( 789)				b->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 789)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = b;
            			}
HXDLIN( 789)			{
HXLINE( 789)				{
HXLINE( 789)					if (hx::IsNotNull( inner1->outer )) {
HXLINE( 789)						inner1->outer->zpp_inner = null();
HXDLIN( 789)						inner1->outer = null();
            					}
HXDLIN( 789)					inner1->_isimmutable = null();
HXDLIN( 789)					inner1->_validate = null();
HXDLIN( 789)					inner1->_invalidate = null();
            				}
HXDLIN( 789)				inner1->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 789)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner1;
            			}
            		}
HXLINE( 796)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vec2_obj,distance,return )


hx::ObjectPtr< Vec2_obj > Vec2_obj::__new(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y) {
	hx::ObjectPtr< Vec2_obj > __this = new Vec2_obj();
	__this->__construct(__o_x,__o_y);
	return __this;
}

hx::ObjectPtr< Vec2_obj > Vec2_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_x,hx::Null< Float >  __o_y) {
	Vec2_obj *__this = (Vec2_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Vec2_obj), true, "nape.geom.Vec2"));
	*(void **)__this = Vec2_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y);
	return __this;
}

Vec2_obj::Vec2_obj()
{
}

void Vec2_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Vec2);
	HX_MARK_MEMBER_NAME(zpp_inner,"zpp_inner");
	HX_MARK_MEMBER_NAME(zpp_pool,"zpp_pool");
	HX_MARK_END_CLASS();
}

void Vec2_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner,"zpp_inner");
	HX_VISIT_MEMBER_NAME(zpp_pool,"zpp_pool");
}

hx::Val Vec2_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_x()); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_y()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"lsq") ) { return hx::Val( lsq_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn()); }
		if (HX_FIELD_EQ(inName,"mul") ) { return hx::Val( mul_dyn()); }
		if (HX_FIELD_EQ(inName,"dot") ) { return hx::Val( dot_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn()); }
		if (HX_FIELD_EQ(inName,"unit") ) { return hx::Val( unit_dyn()); }
		if (HX_FIELD_EQ(inName,"perp") ) { return hx::Val( perp_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_x") ) { return hx::Val( get_x_dyn()); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return hx::Val( set_x_dyn()); }
		if (HX_FIELD_EQ(inName,"get_y") ) { return hx::Val( get_y_dyn()); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return hx::Val( set_y_dyn()); }
		if (HX_FIELD_EQ(inName,"setxy") ) { return hx::Val( setxy_dyn()); }
		if (HX_FIELD_EQ(inName,"angle") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_angle()); }
		if (HX_FIELD_EQ(inName,"addeq") ) { return hx::Val( addeq_dyn()); }
		if (HX_FIELD_EQ(inName,"subeq") ) { return hx::Val( subeq_dyn()); }
		if (HX_FIELD_EQ(inName,"muleq") ) { return hx::Val( muleq_dyn()); }
		if (HX_FIELD_EQ(inName,"cross") ) { return hx::Val( cross_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_length()); }
		if (HX_FIELD_EQ(inName,"rotate") ) { return hx::Val( rotate_dyn()); }
		if (HX_FIELD_EQ(inName,"addMul") ) { return hx::Val( addMul_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"dispose") ) { return hx::Val( dispose_dyn()); }
		if (HX_FIELD_EQ(inName,"toPoint") ) { return hx::Val( toPoint_dyn()); }
		if (HX_FIELD_EQ(inName,"reflect") ) { return hx::Val( reflect_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { return hx::Val( zpp_pool); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { return hx::Val( zpp_inner); }
		if (HX_FIELD_EQ(inName,"get_angle") ) { return hx::Val( get_angle_dyn()); }
		if (HX_FIELD_EQ(inName,"set_angle") ) { return hx::Val( set_angle_dyn()); }
		if (HX_FIELD_EQ(inName,"normalise") ) { return hx::Val( normalise_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn()); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return hx::Val( set_length_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Vec2_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dsq") ) { outValue = dsq_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"weak") ) { outValue = weak_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"distance") ) { outValue = distance_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromPoint") ) { outValue = fromPoint_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromPolar") ) { outValue = fromPolar_dyn(); return true; }
	}
	return false;
}

hx::Val Vec2_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_x(inValue) ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_y(inValue) ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"angle") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_angle(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_length(inValue) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { zpp_pool=inValue.Cast<  ::nape::geom::Vec2 >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { zpp_inner=inValue.Cast<  ::zpp_nape::geom::ZPP_Vec2 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Vec2_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"));
	outFields->push(HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("angle","\xd3","\x43","\xe2","\x22"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Vec2_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::geom::ZPP_Vec2*/ ,(int)offsetof(Vec2_obj,zpp_inner),HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78")},
	{hx::fsObject /*::nape::geom::Vec2*/ ,(int)offsetof(Vec2_obj,zpp_pool),HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Vec2_obj_sStaticStorageInfo = 0;
#endif

static ::String Vec2_obj_sMemberFields[] = {
	HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"),
	HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38"),
	HX_HCSTRING("dispose","\x9f","\x80","\x4c","\xbb"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("toPoint","\xd5","\x00","\x14","\x93"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("set_x","\x5b","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("set_y","\x5c","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("set_length","\x23","\xa3","\x0c","\x93"),
	HX_HCSTRING("lsq","\x0a","\x58","\x52","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("setxy","\x23","\xb1","\x2f","\x7a"),
	HX_HCSTRING("get_angle","\x2a","\xa0","\x8b","\x66"),
	HX_HCSTRING("set_angle","\x36","\x8c","\xdc","\x49"),
	HX_HCSTRING("rotate","\x5b","\x46","\x20","\xcb"),
	HX_HCSTRING("reflect","\x3d","\x84","\x29","\xe9"),
	HX_HCSTRING("normalise","\x74","\x31","\xa1","\xab"),
	HX_HCSTRING("unit","\x84","\xca","\xa9","\x4d"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("addMul","\x63","\x2c","\x04","\x9f"),
	HX_HCSTRING("sub","\x80","\xa9","\x57","\x00"),
	HX_HCSTRING("mul","\x04","\x1c","\x53","\x00"),
	HX_HCSTRING("addeq","\xcd","\xd4","\x43","\x1c"),
	HX_HCSTRING("subeq","\xec","\x61","\xb5","\x84"),
	HX_HCSTRING("muleq","\x70","\x7d","\x55","\x10"),
	HX_HCSTRING("dot","\x89","\x42","\x4c","\x00"),
	HX_HCSTRING("cross","\x80","\x5f","\x5a","\x4c"),
	HX_HCSTRING("perp","\xf3","\xec","\x54","\x4a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Vec2_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Vec2_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Vec2_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Vec2_obj::__mClass,"__mClass");
};

#endif

hx::Class Vec2_obj::__mClass;

static ::String Vec2_obj_sStaticFields[] = {
	HX_HCSTRING("weak","\x78","\x5c","\xf5","\x4e"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("fromPoint","\x86","\x9e","\x18","\x7b"),
	HX_HCSTRING("fromPolar","\xf4","\xd9","\x1a","\x7b"),
	HX_HCSTRING("dsq","\x02","\x46","\x4c","\x00"),
	HX_HCSTRING("distance","\x35","\x93","\xf9","\x6b"),
	::String(null())
};

void Vec2_obj::__register()
{
	hx::Object *dummy = new Vec2_obj;
	Vec2_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("nape.geom.Vec2","\x6a","\x4b","\x9c","\xff");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vec2_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Vec2_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Vec2_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Vec2_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Vec2_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Vec2_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vec2_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vec2_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace geom
