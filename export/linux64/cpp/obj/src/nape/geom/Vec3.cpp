// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_nape_geom_Vec3
#include <nape/geom/Vec3.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec3
#include <zpp_nape/geom/ZPP_Vec3.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_PubPool
#include <zpp_nape/util/ZPP_PubPool.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_181_new,"nape.geom.Vec3","new",0xc5b97ddd,"nape.geom.Vec3.new","nape/geom/Vec3.hx",181,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_225_get_x,"nape.geom.Vec3","get_x",0xbdaa6c0c,"nape.geom.Vec3.get_x","nape/geom/Vec3.hx",225,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_234_set_x,"nape.geom.Vec3","set_x",0xa6796218,"nape.geom.Vec3.set_x","nape/geom/Vec3.hx",234,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_256_get_y,"nape.geom.Vec3","get_y",0xbdaa6c0d,"nape.geom.Vec3.get_y","nape/geom/Vec3.hx",256,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_265_set_y,"nape.geom.Vec3","set_y",0xa6796219,"nape.geom.Vec3.set_y","nape/geom/Vec3.hx",265,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_287_get_z,"nape.geom.Vec3","get_z",0xbdaa6c0e,"nape.geom.Vec3.get_z","nape/geom/Vec3.hx",287,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_296_set_z,"nape.geom.Vec3","set_z",0xa679621a,"nape.geom.Vec3.set_z","nape/geom/Vec3.hx",296,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_417_dispose,"nape.geom.Vec3","dispose",0xe2a3309c,"nape.geom.Vec3.dispose","nape/geom/Vec3.hx",417,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_463_get_length,"nape.geom.Vec3","get_length",0x758ab0d2,"nape.geom.Vec3.get_length","nape/geom/Vec3.hx",463,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_465_set_length,"nape.geom.Vec3","set_length",0x79084f46,"nape.geom.Vec3.set_length","nape/geom/Vec3.hx",465,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_513_lsq,"nape.geom.Vec3","lsq",0xc5b80587,"nape.geom.Vec3.lsq","nape/geom/Vec3.hx",513,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_540_set,"nape.geom.Vec3","set",0xc5bd491f,"nape.geom.Vec3.set","nape/geom/Vec3.hx",540,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_552_setxyz,"nape.geom.Vec3","setxyz",0x03cf6c9a,"nape.geom.Vec3.setxyz","nape/geom/Vec3.hx",552,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_603_xy,"nape.geom.Vec3","xy",0x83c1ba24,"nape.geom.Vec3.xy","nape/geom/Vec3.hx",603,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_614_toString,"nape.geom.Vec3","toString",0x7cf21e0f,"nape.geom.Vec3.toString","nape/geom/Vec3.hx",614,0x02b49bd3)
HX_DEFINE_STACK_FRAME(_hx_pos_d61f69a7c0e91333_322_get,"nape.geom.Vec3","get",0xc5b42e13,"nape.geom.Vec3.get","nape/geom/Vec3.hx",322,0x02b49bd3)
namespace nape{
namespace geom{

void Vec3_obj::__construct(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
Float z = __o_z.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_d61f69a7c0e91333_181_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE( 189)		this->zpp_pool = null();
HXLINE( 185)		this->zpp_inner = null();
HXLINE( 361)		this->zpp_inner =  ::zpp_nape::geom::ZPP_Vec3_obj::__alloc( HX_CTX );
HXLINE( 362)		this->zpp_inner->outer = hx::ObjectPtr<OBJ_>(this);
HXLINE( 363)		{
HXLINE( 364)			{
HXLINE( 365)				{
HXLINE( 365)					this->zpp_inner->x = x;
HXDLIN( 365)					{
HXLINE( 365)						HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 365)						if (hx::IsNotNull( _this->_validate )) {
HXLINE( 365)							_this->_validate();
            						}
            					}
            				}
HXLINE( 366)				{
HXLINE( 366)					this->zpp_inner->y = y;
HXDLIN( 366)					{
HXLINE( 366)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 366)						if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 366)							_this1->_validate();
            						}
            					}
            				}
            			}
HXLINE( 384)			{
HXLINE( 384)				this->zpp_inner->z = z;
HXDLIN( 384)				{
HXLINE( 384)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 384)					if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 384)						_this2->_validate();
            					}
            				}
            			}
            		}
            	}

Dynamic Vec3_obj::__CreateEmpty() { return new Vec3_obj; }

void *Vec3_obj::_hx_vtable = 0;

Dynamic Vec3_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Vec3_obj > _hx_result = new Vec3_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool Vec3_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x08dbfe6b;
}

Float Vec3_obj::get_x(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_225_get_x)
            	HX_STACK_THIS(this)
HXLINE( 231)		{
HXLINE( 231)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 231)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 231)				_this->_validate();
            			}
            		}
HXLINE( 232)		return this->zpp_inner->x;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,get_x,return )

Float Vec3_obj::set_x(Float x){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_234_set_x)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE( 246)		this->zpp_inner->x = x;
HXLINE( 248)		{
HXLINE( 248)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 248)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 248)				_this->_validate();
            			}
            		}
HXDLIN( 248)		return this->zpp_inner->x;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,set_x,return )

Float Vec3_obj::get_y(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_256_get_y)
            	HX_STACK_THIS(this)
HXLINE( 262)		{
HXLINE( 262)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 262)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 262)				_this->_validate();
            			}
            		}
HXLINE( 263)		return this->zpp_inner->y;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,get_y,return )

Float Vec3_obj::set_y(Float y){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_265_set_y)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(y,"y")
HXLINE( 277)		this->zpp_inner->y = y;
HXLINE( 279)		{
HXLINE( 279)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 279)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 279)				_this->_validate();
            			}
            		}
HXDLIN( 279)		return this->zpp_inner->y;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,set_y,return )

Float Vec3_obj::get_z(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_287_get_z)
            	HX_STACK_THIS(this)
HXLINE( 293)		{
HXLINE( 293)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 293)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 293)				_this->_validate();
            			}
            		}
HXLINE( 294)		return this->zpp_inner->z;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,get_z,return )

Float Vec3_obj::set_z(Float z){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_296_set_z)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(z,"z")
HXLINE( 308)		this->zpp_inner->z = z;
HXLINE( 310)		{
HXLINE( 310)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 310)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 310)				_this->_validate();
            			}
            		}
HXDLIN( 310)		return this->zpp_inner->z;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,set_z,return )

void Vec3_obj::dispose(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_417_dispose)
            	HX_STACK_THIS(this)
HXLINE( 418)		HX_VARI(  ::nape::geom::Vec3,o) = hx::ObjectPtr<OBJ_>(this);
HXLINE( 434)		o->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec3;
HXLINE( 435)		::zpp_nape::util::ZPP_PubPool_obj::poolVec3 = o;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,dispose,(void))

Float Vec3_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_463_get_length)
            	HX_STACK_THIS(this)
HXLINE( 463)		{
HXLINE( 463)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 463)				_this->_validate();
            			}
            		}
HXDLIN( 463)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 463)		{
HXLINE( 463)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 463)				_this1->_validate();
            			}
            		}
HXDLIN( 463)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 463)		{
HXLINE( 463)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 463)				_this2->_validate();
            			}
            		}
HXDLIN( 463)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 463)		{
HXLINE( 463)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this3,"_this") = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 463)				_this3->_validate();
            			}
            		}
HXDLIN( 463)		Float _hx_tmp3 = (_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y));
HXDLIN( 463)		{
HXLINE( 463)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this4,"_this") = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 463)				_this4->_validate();
            			}
            		}
HXDLIN( 463)		Float _hx_tmp4 = this->zpp_inner->z;
HXDLIN( 463)		{
HXLINE( 463)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this5,"_this") = this->zpp_inner;
HXDLIN( 463)			if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 463)				_this5->_validate();
            			}
            		}
HXDLIN( 463)		return ::Math_obj::sqrt((_hx_tmp3 + (_hx_tmp4 * this->zpp_inner->z)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,get_length,return )

Float Vec3_obj::set_length(Float length){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_465_set_length)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(length,"length")
HXLINE( 480)		{
HXLINE( 481)			{
HXLINE( 481)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 481)					_this->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI( Float,t) = this->zpp_inner->x;
HXDLIN( 481)			{
HXLINE( 481)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 481)					_this1->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI_NAME( Float,t1,"t") = (t * this->zpp_inner->x);
HXDLIN( 481)			{
HXLINE( 481)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 481)					_this2->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI_NAME( Float,t2,"t") = this->zpp_inner->y;
HXDLIN( 481)			{
HXLINE( 481)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this3,"_this") = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 481)					_this3->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI_NAME( Float,t3,"t") = (t1 + (t2 * this->zpp_inner->y));
HXDLIN( 481)			{
HXLINE( 481)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this4,"_this") = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 481)					_this4->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI_NAME( Float,t4,"t") = this->zpp_inner->z;
HXDLIN( 481)			{
HXLINE( 481)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this5,"_this") = this->zpp_inner;
HXDLIN( 481)				if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 481)					_this5->_validate();
            				}
            			}
HXDLIN( 481)			HX_VARI_NAME( Float,t5,"t") = ((Float)length / (Float)::Math_obj::sqrt((t3 + (t4 * this->zpp_inner->z))));
HXLINE( 482)			{
HXLINE( 492)				{
HXLINE( 492)					HX_VARI(  ::nape::geom::Vec3,_g) = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 492)					{
HXLINE( 492)						{
HXLINE( 492)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this6,"_this") = _g->zpp_inner;
HXDLIN( 492)							if (hx::IsNotNull( _this6->_validate )) {
HXLINE( 492)								_this6->_validate();
            							}
            						}
HXDLIN( 492)						_g->zpp_inner->x = (_g->zpp_inner->x * t5);
HXDLIN( 492)						{
HXLINE( 492)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this7,"_this") = _g->zpp_inner;
HXDLIN( 492)							if (hx::IsNotNull( _this7->_validate )) {
HXLINE( 492)								_this7->_validate();
            							}
            						}
            					}
            				}
HXLINE( 493)				{
HXLINE( 493)					HX_VARI_NAME(  ::nape::geom::Vec3,_g1,"_g") = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 493)					{
HXLINE( 493)						{
HXLINE( 493)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this8,"_this") = _g1->zpp_inner;
HXDLIN( 493)							if (hx::IsNotNull( _this8->_validate )) {
HXLINE( 493)								_this8->_validate();
            							}
            						}
HXDLIN( 493)						_g1->zpp_inner->y = (_g1->zpp_inner->y * t5);
HXDLIN( 493)						{
HXLINE( 493)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this9,"_this") = _g1->zpp_inner;
HXDLIN( 493)							if (hx::IsNotNull( _this9->_validate )) {
HXLINE( 493)								_this9->_validate();
            							}
            						}
            					}
            				}
            			}
HXLINE( 495)			{
HXLINE( 495)				HX_VARI_NAME(  ::nape::geom::Vec3,_g2,"_g") = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 495)				{
HXLINE( 495)					{
HXLINE( 495)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this10,"_this") = _g2->zpp_inner;
HXDLIN( 495)						if (hx::IsNotNull( _this10->_validate )) {
HXLINE( 495)							_this10->_validate();
            						}
            					}
HXDLIN( 495)					_g2->zpp_inner->z = (_g2->zpp_inner->z * t5);
HXDLIN( 495)					{
HXLINE( 495)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this11,"_this") = _g2->zpp_inner;
HXDLIN( 495)						if (hx::IsNotNull( _this11->_validate )) {
HXLINE( 495)							_this11->_validate();
            						}
            					}
            				}
            			}
            		}
HXLINE( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this12,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this12->_validate )) {
HXLINE( 498)				_this12->_validate();
            			}
            		}
HXDLIN( 498)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this13,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this13->_validate )) {
HXLINE( 498)				_this13->_validate();
            			}
            		}
HXDLIN( 498)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this14,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this14->_validate )) {
HXLINE( 498)				_this14->_validate();
            			}
            		}
HXDLIN( 498)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this15,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this15->_validate )) {
HXLINE( 498)				_this15->_validate();
            			}
            		}
HXDLIN( 498)		Float _hx_tmp3 = (_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y));
HXDLIN( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this16,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this16->_validate )) {
HXLINE( 498)				_this16->_validate();
            			}
            		}
HXDLIN( 498)		Float _hx_tmp4 = this->zpp_inner->z;
HXDLIN( 498)		{
HXLINE( 498)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this17,"_this") = this->zpp_inner;
HXDLIN( 498)			if (hx::IsNotNull( _this17->_validate )) {
HXLINE( 498)				_this17->_validate();
            			}
            		}
HXDLIN( 498)		return ::Math_obj::sqrt((_hx_tmp3 + (_hx_tmp4 * this->zpp_inner->z)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,set_length,return )

Float Vec3_obj::lsq(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_513_lsq)
            	HX_STACK_THIS(this)
HXLINE( 513)		{
HXLINE( 513)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 513)				_this->_validate();
            			}
            		}
HXDLIN( 513)		Float _hx_tmp = this->zpp_inner->x;
HXDLIN( 513)		{
HXLINE( 513)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 513)				_this1->_validate();
            			}
            		}
HXDLIN( 513)		Float _hx_tmp1 = (_hx_tmp * this->zpp_inner->x);
HXDLIN( 513)		{
HXLINE( 513)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 513)				_this2->_validate();
            			}
            		}
HXDLIN( 513)		Float _hx_tmp2 = this->zpp_inner->y;
HXDLIN( 513)		{
HXLINE( 513)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this3,"_this") = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 513)				_this3->_validate();
            			}
            		}
HXDLIN( 513)		Float _hx_tmp3 = (_hx_tmp1 + (_hx_tmp2 * this->zpp_inner->y));
HXDLIN( 513)		{
HXLINE( 513)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this4,"_this") = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this4->_validate )) {
HXLINE( 513)				_this4->_validate();
            			}
            		}
HXDLIN( 513)		Float _hx_tmp4 = this->zpp_inner->z;
HXDLIN( 513)		{
HXLINE( 513)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this5,"_this") = this->zpp_inner;
HXDLIN( 513)			if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 513)				_this5->_validate();
            			}
            		}
HXDLIN( 513)		return (_hx_tmp3 + (_hx_tmp4 * this->zpp_inner->z));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,lsq,return )

 ::nape::geom::Vec3 Vec3_obj::set( ::nape::geom::Vec3 vector){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_540_set)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(vector,"vector")
HXLINE( 540)		{
HXLINE( 540)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = vector->zpp_inner;
HXDLIN( 540)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 540)				_this->_validate();
            			}
            		}
HXDLIN( 540)		Float _hx_tmp = vector->zpp_inner->x;
HXDLIN( 540)		{
HXLINE( 540)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = vector->zpp_inner;
HXDLIN( 540)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 540)				_this1->_validate();
            			}
            		}
HXDLIN( 540)		Float _hx_tmp1 = vector->zpp_inner->y;
HXDLIN( 540)		{
HXLINE( 540)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = vector->zpp_inner;
HXDLIN( 540)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 540)				_this2->_validate();
            			}
            		}
HXDLIN( 540)		return this->setxyz(_hx_tmp,_hx_tmp1,vector->zpp_inner->z);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,set,return )

 ::nape::geom::Vec3 Vec3_obj::setxyz(Float x,Float y,Float z){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_552_setxyz)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE( 558)		{
HXLINE( 559)			{
HXLINE( 560)				{
HXLINE( 560)					this->zpp_inner->x = x;
HXDLIN( 560)					{
HXLINE( 560)						HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 560)						if (hx::IsNotNull( _this->_validate )) {
HXLINE( 560)							_this->_validate();
            						}
            					}
            				}
HXLINE( 561)				{
HXLINE( 561)					this->zpp_inner->y = y;
HXDLIN( 561)					{
HXLINE( 561)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 561)						if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 561)							_this1->_validate();
            						}
            					}
            				}
            			}
HXLINE( 579)			{
HXLINE( 579)				this->zpp_inner->z = z;
HXDLIN( 579)				{
HXLINE( 579)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 579)					if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 579)						_this2->_validate();
            					}
            				}
            			}
            		}
HXLINE( 581)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Vec3_obj,setxyz,return )

 ::nape::geom::Vec2 Vec3_obj::xy(hx::Null< bool >  __o_weak){
bool weak = __o_weak.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_d61f69a7c0e91333_603_xy)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(weak,"weak")
HXLINE( 603)		{
HXLINE( 603)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 603)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 603)				_this->_validate();
            			}
            		}
HXDLIN( 603)		HX_VARI( Float,x) = this->zpp_inner->x;
HXDLIN( 603)		{
HXLINE( 603)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 603)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 603)				_this1->_validate();
            			}
            		}
HXDLIN( 603)		HX_VARI( Float,y) = this->zpp_inner->y;
HXDLIN( 603)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 603)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 603)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 603)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 603)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 603)			ret->zpp_pool = null();
            		}
HXDLIN( 603)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 603)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 603)			{
HXLINE( 603)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 603)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 603)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 603)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 603)					ret1->next = null();
            				}
HXDLIN( 603)				ret1->weak = false;
            			}
HXDLIN( 603)			ret1->_immutable = false;
HXDLIN( 603)			{
HXLINE( 603)				ret1->x = x;
HXDLIN( 603)				ret1->y = y;
            			}
HXDLIN( 603)			ret->zpp_inner = ret1;
HXDLIN( 603)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 603)			bool _hx_tmp;
HXDLIN( 603)			{
HXLINE( 603)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 603)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 603)					_this2->_validate();
            				}
            			}
HXDLIN( 603)			if ((ret->zpp_inner->x == x)) {
HXLINE( 603)				{
HXLINE( 603)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN( 603)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 603)						_this3->_validate();
            					}
            				}
HXDLIN( 603)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 603)				_hx_tmp = false;
            			}
HXDLIN( 603)			if (!(_hx_tmp)) {
HXLINE( 603)				{
HXLINE( 603)					ret->zpp_inner->x = x;
HXDLIN( 603)					ret->zpp_inner->y = y;
            				}
HXDLIN( 603)				{
HXLINE( 603)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN( 603)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 603)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN( 603)		ret->zpp_inner->weak = weak;
HXDLIN( 603)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec3_obj,xy,return )

::String Vec3_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_d61f69a7c0e91333_614_toString)
            	HX_STACK_THIS(this)
HXLINE( 614)		{
HXLINE( 614)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec3,_this) = this->zpp_inner;
HXDLIN( 614)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 614)				_this->_validate();
            			}
            		}
HXDLIN( 614)		::String _hx_tmp = ((HX_("{ x: ",f9,6e,cb,e7) + this->zpp_inner->x) + HX_(" y: ",3f,d7,82,15));
HXDLIN( 614)		{
HXLINE( 614)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this1,"_this") = this->zpp_inner;
HXDLIN( 614)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 614)				_this1->_validate();
            			}
            		}
HXDLIN( 614)		::String _hx_tmp1 = ((_hx_tmp + this->zpp_inner->y) + HX_(" z: ",80,99,83,15));
HXDLIN( 614)		{
HXLINE( 614)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec3,_this2,"_this") = this->zpp_inner;
HXDLIN( 614)			if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 614)				_this2->_validate();
            			}
            		}
HXDLIN( 614)		return ((_hx_tmp1 + this->zpp_inner->z) + HX_(" }",5d,1c,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec3_obj,toString,return )

 ::nape::geom::Vec3 Vec3_obj::get(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
Float z = __o_z.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_d61f69a7c0e91333_322_get)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE( 323)		HX_VAR(  ::nape::geom::Vec3,ret);
HXLINE( 325)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec3 )) {
HXLINE( 326)			ret =  ::nape::geom::Vec3_obj::__alloc( HX_CTX ,null(),null(),null());
            		}
            		else {
HXLINE( 332)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec3;
HXLINE( 333)			::zpp_nape::util::ZPP_PubPool_obj::poolVec3 = ret->zpp_pool;
HXLINE( 334)			ret->zpp_pool = null();
            		}
HXLINE( 344)		ret->setxyz(x,y,z);
HXLINE( 345)		ret->zpp_inner->immutable = false;
HXLINE( 346)		ret->zpp_inner->_validate = null();
HXLINE( 347)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vec3_obj,get,return )


hx::ObjectPtr< Vec3_obj > Vec3_obj::__new(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z) {
	hx::ObjectPtr< Vec3_obj > __this = new Vec3_obj();
	__this->__construct(__o_x,__o_y,__o_z);
	return __this;
}

hx::ObjectPtr< Vec3_obj > Vec3_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z) {
	Vec3_obj *__this = (Vec3_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Vec3_obj), true, "nape.geom.Vec3"));
	*(void **)__this = Vec3_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y,__o_z);
	return __this;
}

Vec3_obj::Vec3_obj()
{
}

void Vec3_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Vec3);
	HX_MARK_MEMBER_NAME(zpp_inner,"zpp_inner");
	HX_MARK_MEMBER_NAME(zpp_pool,"zpp_pool");
	HX_MARK_END_CLASS();
}

void Vec3_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(zpp_inner,"zpp_inner");
	HX_VISIT_MEMBER_NAME(zpp_pool,"zpp_pool");
}

hx::Val Vec3_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_x()); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_y()); }
		if (HX_FIELD_EQ(inName,"z") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_z()); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"xy") ) { return hx::Val( xy_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"lsq") ) { return hx::Val( lsq_dyn()); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_x") ) { return hx::Val( get_x_dyn()); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return hx::Val( set_x_dyn()); }
		if (HX_FIELD_EQ(inName,"get_y") ) { return hx::Val( get_y_dyn()); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return hx::Val( set_y_dyn()); }
		if (HX_FIELD_EQ(inName,"get_z") ) { return hx::Val( get_z_dyn()); }
		if (HX_FIELD_EQ(inName,"set_z") ) { return hx::Val( set_z_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_length()); }
		if (HX_FIELD_EQ(inName,"setxyz") ) { return hx::Val( setxyz_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"dispose") ) { return hx::Val( dispose_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { return hx::Val( zpp_pool); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { return hx::Val( zpp_inner); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn()); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return hx::Val( set_length_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Vec3_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
	}
	return false;
}

hx::Val Vec3_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_x(inValue) ); }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_y(inValue) ); }
		if (HX_FIELD_EQ(inName,"z") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_z(inValue) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_length(inValue) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { zpp_pool=inValue.Cast<  ::nape::geom::Vec3 >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"zpp_inner") ) { zpp_inner=inValue.Cast<  ::zpp_nape::geom::ZPP_Vec3 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Vec3_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"));
	outFields->push(HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("z","\x7a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Vec3_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::geom::ZPP_Vec3*/ ,(int)offsetof(Vec3_obj,zpp_inner),HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78")},
	{hx::fsObject /*::nape::geom::Vec3*/ ,(int)offsetof(Vec3_obj,zpp_pool),HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Vec3_obj_sStaticStorageInfo = 0;
#endif

static ::String Vec3_obj_sMemberFields[] = {
	HX_HCSTRING("zpp_inner","\x51","\x65","\x85","\x78"),
	HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38"),
	HX_HCSTRING("get_x","\x4f","\xa5","\x60","\x91"),
	HX_HCSTRING("set_x","\x5b","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_y","\x50","\xa5","\x60","\x91"),
	HX_HCSTRING("set_y","\x5c","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_z","\x51","\xa5","\x60","\x91"),
	HX_HCSTRING("set_z","\x5d","\x9b","\x2f","\x7a"),
	HX_HCSTRING("dispose","\x9f","\x80","\x4c","\xbb"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("set_length","\x23","\xa3","\x0c","\x93"),
	HX_HCSTRING("lsq","\x0a","\x58","\x52","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("setxyz","\xf7","\x4d","\x8b","\x6f"),
	HX_HCSTRING("xy","\x01","\x69","\x00","\x00"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Vec3_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Vec3_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Vec3_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Vec3_obj::__mClass,"__mClass");
};

#endif

hx::Class Vec3_obj::__mClass;

static ::String Vec3_obj_sStaticFields[] = {
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	::String(null())
};

void Vec3_obj::__register()
{
	hx::Object *dummy = new Vec3_obj;
	Vec3_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("nape.geom.Vec3","\x6b","\x4b","\x9c","\xff");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vec3_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Vec3_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Vec3_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Vec3_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Vec3_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Vec3_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vec3_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vec3_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace nape
} // end namespace geom
