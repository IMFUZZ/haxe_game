// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_nape_Config
#include <nape/Config.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_nape_util_Debug
#include <nape/util/Debug.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_AngleDraw
#include <zpp_nape/constraint/ZPP_AngleDraw.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_PubPool
#include <zpp_nape/util/ZPP_PubPool.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_211c7dad3b57b17f_652_indicator,"zpp_nape.constraint.ZPP_AngleDraw","indicator",0xbd951c03,"zpp_nape.constraint.ZPP_AngleDraw.indicator","zpp_nape/constraint/AngleJoint.hx",652,0x575b2617)
HX_DEFINE_STACK_FRAME(_hx_pos_211c7dad3b57b17f_658_drawSpiralSpring,"zpp_nape.constraint.ZPP_AngleDraw","drawSpiralSpring",0xd52ba24e,"zpp_nape.constraint.ZPP_AngleDraw.drawSpiralSpring","zpp_nape/constraint/AngleJoint.hx",658,0x575b2617)
HX_DEFINE_STACK_FRAME(_hx_pos_211c7dad3b57b17f_736_drawSpiral,"zpp_nape.constraint.ZPP_AngleDraw","drawSpiral",0x7fd3a8a1,"zpp_nape.constraint.ZPP_AngleDraw.drawSpiral","zpp_nape/constraint/AngleJoint.hx",736,0x575b2617)
HX_DEFINE_STACK_FRAME(_hx_pos_211c7dad3b57b17f_657_boot,"zpp_nape.constraint.ZPP_AngleDraw","boot",0x7f68bc7e,"zpp_nape.constraint.ZPP_AngleDraw.boot","zpp_nape/constraint/AngleJoint.hx",657,0x575b2617)
namespace zpp_nape{
namespace constraint{

void ZPP_AngleDraw_obj::__construct() { }

Dynamic ZPP_AngleDraw_obj::__CreateEmpty() { return new ZPP_AngleDraw_obj; }

void *ZPP_AngleDraw_obj::_hx_vtable = 0;

Dynamic ZPP_AngleDraw_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZPP_AngleDraw_obj > _hx_result = new ZPP_AngleDraw_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZPP_AngleDraw_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5f4e02c8;
}

void ZPP_AngleDraw_obj::indicator( ::nape::util::Debug g, ::nape::geom::Vec2 c,Float ang,Float rad,int col){
            	HX_GC_STACKFRAME(&_hx_pos_211c7dad3b57b17f_652_indicator)
            	HX_STACK_ARG(g,"g")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(ang,"ang")
            	HX_STACK_ARG(rad,"rad")
            	HX_STACK_ARG(col,"col")
HXLINE( 653)		HX_VARI( Float,x) = ::Math_obj::cos(ang);
HXDLIN( 653)		HX_VARI( Float,y) = ::Math_obj::sin(ang);
HXDLIN( 653)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 653)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 653)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 653)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 653)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 653)			ret->zpp_pool = null();
            		}
HXDLIN( 653)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 653)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 653)			{
HXLINE( 653)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 653)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 653)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 653)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 653)					ret1->next = null();
            				}
HXDLIN( 653)				ret1->weak = false;
            			}
HXDLIN( 653)			ret1->_immutable = false;
HXDLIN( 653)			{
HXLINE( 653)				ret1->x = x;
HXDLIN( 653)				ret1->y = y;
            			}
HXDLIN( 653)			ret->zpp_inner = ret1;
HXDLIN( 653)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 653)			bool _hx_tmp;
HXDLIN( 653)			{
HXLINE( 653)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = ret->zpp_inner;
HXDLIN( 653)				if (hx::IsNotNull( _this->_validate )) {
HXLINE( 653)					_this->_validate();
            				}
            			}
HXDLIN( 653)			if ((ret->zpp_inner->x == x)) {
HXLINE( 653)				{
HXLINE( 653)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN( 653)					if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 653)						_this1->_validate();
            					}
            				}
HXDLIN( 653)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 653)				_hx_tmp = false;
            			}
HXDLIN( 653)			if (!(_hx_tmp)) {
HXLINE( 653)				{
HXLINE( 653)					ret->zpp_inner->x = x;
HXDLIN( 653)					ret->zpp_inner->y = y;
            				}
HXDLIN( 653)				{
HXLINE( 653)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 653)					if (hx::IsNotNull( _this2->_invalidate )) {
HXLINE( 653)						_this2->_invalidate(_this2);
            					}
            				}
            			}
            		}
HXDLIN( 653)		ret->zpp_inner->weak = false;
HXDLIN( 653)		HX_VARI(  ::nape::geom::Vec2,dir) = ret;
HXLINE( 654)		g->drawFilledCircle(c->add(dir->mul(rad,true),true),(int)2,col);
HXLINE( 655)		{
HXLINE( 655)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = dir->zpp_inner;
HXDLIN( 655)			dir->zpp_inner->outer = null();
HXDLIN( 655)			dir->zpp_inner = null();
HXDLIN( 655)			{
HXLINE( 655)				dir->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 655)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = dir;
            			}
HXDLIN( 655)			{
HXLINE( 655)				{
HXLINE( 655)					if (hx::IsNotNull( inner->outer )) {
HXLINE( 655)						inner->outer->zpp_inner = null();
HXDLIN( 655)						inner->outer = null();
            					}
HXDLIN( 655)					inner->_isimmutable = null();
HXDLIN( 655)					inner->_validate = null();
HXDLIN( 655)					inner->_invalidate = null();
            				}
HXDLIN( 655)				inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 655)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(ZPP_AngleDraw_obj,indicator,(void))

Float ZPP_AngleDraw_obj::maxarc;

void ZPP_AngleDraw_obj::drawSpiralSpring( ::nape::util::Debug g, ::nape::geom::Vec2 c,Float a0,Float a1,Float r0,Float r1,int col,hx::Null< int >  __o_coils){
int coils = __o_coils.Default(4);
            	HX_GC_STACKFRAME(&_hx_pos_211c7dad3b57b17f_658_drawSpiralSpring)
            	HX_STACK_ARG(g,"g")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(a0,"a0")
            	HX_STACK_ARG(a1,"a1")
            	HX_STACK_ARG(r0,"r0")
            	HX_STACK_ARG(r1,"r1")
            	HX_STACK_ARG(col,"col")
            	HX_STACK_ARG(coils,"coils")
HXLINE( 659)		if ((a0 > a1)) {
HXLINE( 660)			{
HXLINE( 661)				HX_VARI( Float,t) = a0;
HXLINE( 662)				a0 = a1;
HXLINE( 663)				a1 = t;
            			}
HXLINE( 665)			{
HXLINE( 666)				HX_VARI_NAME( Float,t1,"t") = r0;
HXLINE( 667)				r0 = r1;
HXLINE( 668)				r1 = t1;
            			}
            		}
HXLINE( 671)		if ((a0 == a1)) {
HXLINE( 671)			return;
            		}
HXLINE( 672)		HX_VARI( Float,dr) = (r1 - r0);
HXLINE( 673)		HX_VARI( Float,da) = (a1 - a0);
HXLINE( 675)		HX_VARI( Float,x) = ((Float)(((int)2 * ::Math_obj::PI) * dr) / (Float)da);
HXLINE( 674)		HX_VAR( Float,Delta);
HXLINE( 676)		if ((x < (int)0)) {
HXLINE( 674)			Delta = -(x);
            		}
            		else {
HXLINE( 674)			Delta = x;
            		}
HXLINE( 679)		HX_VARI_NAME( int,x1,"x") = ::Math_obj::ceil((((Float)da / (Float)::zpp_nape::constraint::ZPP_AngleDraw_obj::maxarc) * (int)3));
HXLINE( 680)		HX_VARI( int,y) = ((int)4 * coils);
HXLINE( 678)		HX_VAR( int,dcnt);
HXLINE( 681)		if ((x1 > y)) {
HXLINE( 678)			dcnt = x1;
            		}
            		else {
HXLINE( 678)			dcnt = y;
            		}
HXLINE( 684)		HX_VARI( Float,dang) = ((Float)da / (Float)dcnt);
HXLINE( 685)		HX_VARI( Float,dtime) = ((Float)(int)1 / (Float)dcnt);
HXLINE( 686)		HX_VARI( Float,c0) = ::Math_obj::cos(a0);
HXLINE( 687)		HX_VARI( Float,s0) = ::Math_obj::sin(a0);
HXLINE( 688)		HX_VARI( Float,R0) = ((r0 + (dr * (int)0)) + ((((Float)0.75) * Delta) * ::Math_obj::sin(((((int)2 * coils) * ::Math_obj::PI) * (int)0))));
HXLINE( 692)		{
HXLINE( 692)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = c->zpp_inner;
HXDLIN( 692)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 692)				_this->_validate();
            			}
            		}
HXDLIN( 692)		HX_VARI_NAME( Float,x2,"x") = (c->zpp_inner->x + (R0 * c0));
HXDLIN( 692)		{
HXLINE( 692)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = c->zpp_inner;
HXDLIN( 692)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 692)				_this1->_validate();
            			}
            		}
HXDLIN( 692)		HX_VARI_NAME( Float,y1,"y") = (c->zpp_inner->y + (R0 * s0));
HXDLIN( 692)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 692)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 692)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 692)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 692)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 692)			ret->zpp_pool = null();
            		}
HXDLIN( 692)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 692)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 692)			{
HXLINE( 692)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 692)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 692)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 692)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 692)					ret1->next = null();
            				}
HXDLIN( 692)				ret1->weak = false;
            			}
HXDLIN( 692)			ret1->_immutable = false;
HXDLIN( 692)			{
HXLINE( 692)				ret1->x = x2;
HXDLIN( 692)				ret1->y = y1;
            			}
HXDLIN( 692)			ret->zpp_inner = ret1;
HXDLIN( 692)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 692)			bool _hx_tmp;
HXDLIN( 692)			{
HXLINE( 692)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 692)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 692)					_this2->_validate();
            				}
            			}
HXDLIN( 692)			if ((ret->zpp_inner->x == x2)) {
HXLINE( 692)				{
HXLINE( 692)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN( 692)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 692)						_this3->_validate();
            					}
            				}
HXDLIN( 692)				_hx_tmp = (ret->zpp_inner->y == y1);
            			}
            			else {
HXLINE( 692)				_hx_tmp = false;
            			}
HXDLIN( 692)			if (!(_hx_tmp)) {
HXLINE( 692)				{
HXLINE( 692)					ret->zpp_inner->x = x2;
HXDLIN( 692)					ret->zpp_inner->y = y1;
            				}
HXDLIN( 692)				{
HXLINE( 692)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN( 692)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 692)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN( 692)		ret->zpp_inner->weak = false;
HXDLIN( 692)		HX_VARI(  ::nape::geom::Vec2,p0) = ret;
HXLINE( 693)		HX_VARI( Float,DR) = (dr + ((((((Float)1.5) * coils) * Delta) * ::Math_obj::PI) * ::Math_obj::cos(((((int)2 * coils) * ::Math_obj::PI) * (int)0))));
HXLINE( 696)		HX_VARI( Float,ux) = ((DR * c0) - ((R0 * da) * s0));
HXLINE( 697)		HX_VARI( Float,uy) = ((DR * s0) + ((R0 * da) * c0));
HXLINE( 698)		HX_VARI_NAME( Float,x3,"x") = (int)0;
HXDLIN( 698)		HX_VARI_NAME( Float,y2,"y") = (int)0;
HXDLIN( 698)		HX_VAR_NAME(  ::nape::geom::Vec2,ret2,"ret");
HXDLIN( 698)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 698)			ret2 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 698)			ret2 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 698)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret2->zpp_pool;
HXDLIN( 698)			ret2->zpp_pool = null();
            		}
HXDLIN( 698)		if (hx::IsNull( ret2->zpp_inner )) {
HXLINE( 698)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret3,"ret");
HXDLIN( 698)			{
HXLINE( 698)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 698)					ret3 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 698)					ret3 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 698)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret3->next;
HXDLIN( 698)					ret3->next = null();
            				}
HXDLIN( 698)				ret3->weak = false;
            			}
HXDLIN( 698)			ret3->_immutable = false;
HXDLIN( 698)			{
HXLINE( 698)				ret3->x = x3;
HXDLIN( 698)				ret3->y = y2;
            			}
HXDLIN( 698)			ret2->zpp_inner = ret3;
HXDLIN( 698)			ret2->zpp_inner->outer = ret2;
            		}
            		else {
HXLINE( 698)			bool _hx_tmp1;
HXDLIN( 698)			{
HXLINE( 698)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = ret2->zpp_inner;
HXDLIN( 698)				if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 698)					_this5->_validate();
            				}
            			}
HXDLIN( 698)			if ((ret2->zpp_inner->x == x3)) {
HXLINE( 698)				{
HXLINE( 698)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret2->zpp_inner;
HXDLIN( 698)					if (hx::IsNotNull( _this6->_validate )) {
HXLINE( 698)						_this6->_validate();
            					}
            				}
HXDLIN( 698)				_hx_tmp1 = (ret2->zpp_inner->y == y2);
            			}
            			else {
HXLINE( 698)				_hx_tmp1 = false;
            			}
HXDLIN( 698)			if (!(_hx_tmp1)) {
HXLINE( 698)				{
HXLINE( 698)					ret2->zpp_inner->x = x3;
HXDLIN( 698)					ret2->zpp_inner->y = y2;
            				}
HXDLIN( 698)				{
HXLINE( 698)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = ret2->zpp_inner;
HXDLIN( 698)					if (hx::IsNotNull( _this7->_invalidate )) {
HXLINE( 698)						_this7->_invalidate(_this7);
            					}
            				}
            			}
            		}
HXDLIN( 698)		ret2->zpp_inner->weak = false;
HXDLIN( 698)		HX_VARI(  ::nape::geom::Vec2,p1) = ret2;
HXLINE( 699)		HX_VARI_NAME( Float,x4,"x") = (int)0;
HXDLIN( 699)		HX_VARI_NAME( Float,y3,"y") = (int)0;
HXDLIN( 699)		HX_VAR_NAME(  ::nape::geom::Vec2,ret4,"ret");
HXDLIN( 699)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 699)			ret4 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 699)			ret4 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 699)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret4->zpp_pool;
HXDLIN( 699)			ret4->zpp_pool = null();
            		}
HXDLIN( 699)		if (hx::IsNull( ret4->zpp_inner )) {
HXLINE( 699)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret5,"ret");
HXDLIN( 699)			{
HXLINE( 699)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 699)					ret5 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 699)					ret5 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 699)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret5->next;
HXDLIN( 699)					ret5->next = null();
            				}
HXDLIN( 699)				ret5->weak = false;
            			}
HXDLIN( 699)			ret5->_immutable = false;
HXDLIN( 699)			{
HXLINE( 699)				ret5->x = x4;
HXDLIN( 699)				ret5->y = y3;
            			}
HXDLIN( 699)			ret4->zpp_inner = ret5;
HXDLIN( 699)			ret4->zpp_inner->outer = ret4;
            		}
            		else {
HXLINE( 699)			bool _hx_tmp2;
HXDLIN( 699)			{
HXLINE( 699)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = ret4->zpp_inner;
HXDLIN( 699)				if (hx::IsNotNull( _this8->_validate )) {
HXLINE( 699)					_this8->_validate();
            				}
            			}
HXDLIN( 699)			if ((ret4->zpp_inner->x == x4)) {
HXLINE( 699)				{
HXLINE( 699)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = ret4->zpp_inner;
HXDLIN( 699)					if (hx::IsNotNull( _this9->_validate )) {
HXLINE( 699)						_this9->_validate();
            					}
            				}
HXDLIN( 699)				_hx_tmp2 = (ret4->zpp_inner->y == y3);
            			}
            			else {
HXLINE( 699)				_hx_tmp2 = false;
            			}
HXDLIN( 699)			if (!(_hx_tmp2)) {
HXLINE( 699)				{
HXLINE( 699)					ret4->zpp_inner->x = x4;
HXDLIN( 699)					ret4->zpp_inner->y = y3;
            				}
HXDLIN( 699)				{
HXLINE( 699)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this10,"_this") = ret4->zpp_inner;
HXDLIN( 699)					if (hx::IsNotNull( _this10->_invalidate )) {
HXLINE( 699)						_this10->_invalidate(_this10);
            					}
            				}
            			}
            		}
HXDLIN( 699)		ret4->zpp_inner->weak = false;
HXDLIN( 699)		HX_VARI(  ::nape::geom::Vec2,ct) = ret4;
HXLINE( 700)		{
HXLINE( 700)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 700)			HX_VARI( int,_g) = dcnt;
HXDLIN( 700)			while((_g1 < _g)){
HXLINE( 700)				_g1 = (_g1 + (int)1);
HXDLIN( 700)				HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 701)				HX_VARI_NAME( Float,a11,"a1") = (a0 + dang);
HXLINE( 702)				HX_VARI( Float,c1) = ::Math_obj::cos(a11);
HXLINE( 703)				HX_VARI( Float,s1) = ::Math_obj::sin(a11);
HXLINE( 704)				HX_VARI( Float,R1) = ((r0 + ((dr * (i + (int)1)) * dtime)) + ((((Float)0.75) * Delta) * ::Math_obj::sin((((((int)2 * coils) * ::Math_obj::PI) * (i + (int)1)) * dtime))));
HXLINE( 708)				{
HXLINE( 708)					{
HXLINE( 708)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = c->zpp_inner;
HXDLIN( 708)						if (hx::IsNotNull( _this11->_validate )) {
HXLINE( 708)							_this11->_validate();
            						}
            					}
HXDLIN( 708)					HX_VARI_NAME( Float,x5,"x") = (c->zpp_inner->x + (R1 * c1));
HXDLIN( 708)					{
HXLINE( 708)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this12,"_this") = c->zpp_inner;
HXDLIN( 708)						if (hx::IsNotNull( _this12->_validate )) {
HXLINE( 708)							_this12->_validate();
            						}
            					}
HXDLIN( 708)					HX_VARI_NAME( Float,y4,"y") = (c->zpp_inner->y + (R1 * s1));
HXDLIN( 708)					bool _hx_tmp3;
HXDLIN( 708)					{
HXLINE( 708)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this13,"_this") = p1->zpp_inner;
HXDLIN( 708)						if (hx::IsNotNull( _this13->_validate )) {
HXLINE( 708)							_this13->_validate();
            						}
            					}
HXDLIN( 708)					if ((p1->zpp_inner->x == x5)) {
HXLINE( 708)						{
HXLINE( 708)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this14,"_this") = p1->zpp_inner;
HXDLIN( 708)							if (hx::IsNotNull( _this14->_validate )) {
HXLINE( 708)								_this14->_validate();
            							}
            						}
HXDLIN( 708)						_hx_tmp3 = (p1->zpp_inner->y == y4);
            					}
            					else {
HXLINE( 708)						_hx_tmp3 = false;
            					}
HXDLIN( 708)					if (!(_hx_tmp3)) {
HXLINE( 708)						{
HXLINE( 708)							p1->zpp_inner->x = x5;
HXDLIN( 708)							p1->zpp_inner->y = y4;
            						}
HXDLIN( 708)						{
HXLINE( 708)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this15,"_this") = p1->zpp_inner;
HXDLIN( 708)							if (hx::IsNotNull( _this15->_invalidate )) {
HXLINE( 708)								_this15->_invalidate(_this15);
            							}
            						}
            					}
            				}
HXLINE( 709)				HX_VARI_NAME( Float,DR1,"DR") = (dr + ((((((Float)1.5) * coils) * Delta) * ::Math_obj::PI) * ::Math_obj::cos((((((int)2 * coils) * ::Math_obj::PI) * (i + (int)1)) * dtime))));
HXLINE( 712)				HX_VARI( Float,vx) = ((DR1 * c1) - ((R1 * da) * s1));
HXLINE( 713)				HX_VARI( Float,vy) = ((DR1 * s1) + ((R1 * da) * c1));
HXLINE( 714)				HX_VARI( Float,den) = ((ux * vy) - (uy * vx));
HXLINE( 715)				bool _hx_tmp4;
HXDLIN( 715)				bool _hx_tmp5;
HXDLIN( 715)				if (!(((den * den) < ::nape::Config_obj::epsilon))) {
HXLINE( 715)					_hx_tmp5 = (((ux * vx) + (uy * vy)) <= (int)0);
            				}
            				else {
HXLINE( 715)					_hx_tmp5 = true;
            				}
HXDLIN( 715)				if (!(_hx_tmp5)) {
HXLINE( 715)					_hx_tmp4 = (((ux * vx) + (uy * vy)) > ((Float)0.999));
            				}
            				else {
HXLINE( 715)					_hx_tmp4 = true;
            				}
HXDLIN( 715)				if (_hx_tmp4) {
HXLINE( 715)					g->drawLine(p0,p1,col);
            				}
            				else {
HXLINE( 717)					{
HXLINE( 717)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this16,"_this") = p1->zpp_inner;
HXDLIN( 717)						if (hx::IsNotNull( _this16->_validate )) {
HXLINE( 717)							_this16->_validate();
            						}
            					}
HXDLIN( 717)					HX_VARI_NAME( Float,t2,"t") = p1->zpp_inner->x;
HXDLIN( 717)					{
HXLINE( 717)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this17,"_this") = p0->zpp_inner;
HXDLIN( 717)						if (hx::IsNotNull( _this17->_validate )) {
HXLINE( 717)							_this17->_validate();
            						}
            					}
HXDLIN( 717)					HX_VARI_NAME( Float,t3,"t") = ((t2 - p0->zpp_inner->x) * vy);
HXDLIN( 717)					{
HXLINE( 717)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this18,"_this") = p0->zpp_inner;
HXDLIN( 717)						if (hx::IsNotNull( _this18->_validate )) {
HXLINE( 717)							_this18->_validate();
            						}
            					}
HXDLIN( 717)					HX_VARI_NAME( Float,t4,"t") = p0->zpp_inner->y;
HXDLIN( 717)					{
HXLINE( 717)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this19,"_this") = p1->zpp_inner;
HXDLIN( 717)						if (hx::IsNotNull( _this19->_validate )) {
HXLINE( 717)							_this19->_validate();
            						}
            					}
HXDLIN( 717)					HX_VARI_NAME( Float,t5,"t") = ((Float)(t3 + ((t4 - p1->zpp_inner->y) * vx)) / (Float)den);
HXLINE( 718)					if ((t5 <= (int)0)) {
HXLINE( 718)						g->drawLine(p0,p1,col);
            					}
            					else {
HXLINE( 720)						{
HXLINE( 720)							{
HXLINE( 720)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this20,"_this") = p0->zpp_inner;
HXDLIN( 720)								if (hx::IsNotNull( _this20->_validate )) {
HXLINE( 720)									_this20->_validate();
            								}
            							}
HXDLIN( 720)							HX_VARI_NAME( Float,x6,"x") = (p0->zpp_inner->x + (ux * t5));
HXDLIN( 720)							{
HXLINE( 720)								{
HXLINE( 720)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this21,"_this") = ct->zpp_inner;
HXDLIN( 720)									if (hx::IsNotNull( _this21->_validate )) {
HXLINE( 720)										_this21->_validate();
            									}
            								}
HXDLIN( 720)								if ((ct->zpp_inner->x != x6)) {
HXLINE( 720)									ct->zpp_inner->x = x6;
HXDLIN( 720)									{
HXLINE( 720)										HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this22,"_this") = ct->zpp_inner;
HXDLIN( 720)										if (hx::IsNotNull( _this22->_invalidate )) {
HXLINE( 720)											_this22->_invalidate(_this22);
            										}
            									}
            								}
            							}
HXDLIN( 720)							{
HXLINE( 720)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this23,"_this") = ct->zpp_inner;
HXDLIN( 720)								if (hx::IsNotNull( _this23->_validate )) {
HXLINE( 720)									_this23->_validate();
            								}
            							}
            						}
HXLINE( 721)						{
HXLINE( 721)							{
HXLINE( 721)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this24,"_this") = p0->zpp_inner;
HXDLIN( 721)								if (hx::IsNotNull( _this24->_validate )) {
HXLINE( 721)									_this24->_validate();
            								}
            							}
HXDLIN( 721)							HX_VARI_NAME( Float,y5,"y") = (p0->zpp_inner->y + (uy * t5));
HXDLIN( 721)							{
HXLINE( 721)								{
HXLINE( 721)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this25,"_this") = ct->zpp_inner;
HXDLIN( 721)									if (hx::IsNotNull( _this25->_validate )) {
HXLINE( 721)										_this25->_validate();
            									}
            								}
HXDLIN( 721)								if ((ct->zpp_inner->y != y5)) {
HXLINE( 721)									ct->zpp_inner->y = y5;
HXDLIN( 721)									{
HXLINE( 721)										HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this26,"_this") = ct->zpp_inner;
HXDLIN( 721)										if (hx::IsNotNull( _this26->_invalidate )) {
HXLINE( 721)											_this26->_invalidate(_this26);
            										}
            									}
            								}
            							}
HXDLIN( 721)							{
HXLINE( 721)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this27,"_this") = ct->zpp_inner;
HXDLIN( 721)								if (hx::IsNotNull( _this27->_validate )) {
HXLINE( 721)									_this27->_validate();
            								}
            							}
            						}
HXLINE( 722)						g->drawCurve(p0,ct,p1,col);
            					}
            				}
HXLINE( 725)				a0 = a11;
HXLINE( 726)				c0 = c1;
HXLINE( 727)				s0 = s1;
HXLINE( 728)				ux = vx;
HXLINE( 729)				uy = vy;
HXLINE( 730)				{
HXLINE( 730)					{
HXLINE( 730)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this28,"_this") = p1->zpp_inner;
HXDLIN( 730)						if (hx::IsNotNull( _this28->_validate )) {
HXLINE( 730)							_this28->_validate();
            						}
            					}
HXDLIN( 730)					HX_VARI_NAME( Float,x7,"x") = p1->zpp_inner->x;
HXDLIN( 730)					{
HXLINE( 730)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this29,"_this") = p1->zpp_inner;
HXDLIN( 730)						if (hx::IsNotNull( _this29->_validate )) {
HXLINE( 730)							_this29->_validate();
            						}
            					}
HXDLIN( 730)					HX_VARI_NAME( Float,y6,"y") = p1->zpp_inner->y;
HXDLIN( 730)					bool _hx_tmp6;
HXDLIN( 730)					{
HXLINE( 730)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this30,"_this") = p0->zpp_inner;
HXDLIN( 730)						if (hx::IsNotNull( _this30->_validate )) {
HXLINE( 730)							_this30->_validate();
            						}
            					}
HXDLIN( 730)					if ((p0->zpp_inner->x == x7)) {
HXLINE( 730)						{
HXLINE( 730)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this31,"_this") = p0->zpp_inner;
HXDLIN( 730)							if (hx::IsNotNull( _this31->_validate )) {
HXLINE( 730)								_this31->_validate();
            							}
            						}
HXDLIN( 730)						_hx_tmp6 = (p0->zpp_inner->y == y6);
            					}
            					else {
HXLINE( 730)						_hx_tmp6 = false;
            					}
HXDLIN( 730)					if (!(_hx_tmp6)) {
HXLINE( 730)						{
HXLINE( 730)							p0->zpp_inner->x = x7;
HXDLIN( 730)							p0->zpp_inner->y = y6;
            						}
HXDLIN( 730)						{
HXLINE( 730)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this32,"_this") = p0->zpp_inner;
HXDLIN( 730)							if (hx::IsNotNull( _this32->_invalidate )) {
HXLINE( 730)								_this32->_invalidate(_this32);
            							}
            						}
            					}
HXDLIN( 730)					if (p1->zpp_inner->weak) {
HXLINE( 730)						HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = p1->zpp_inner;
HXDLIN( 730)						p1->zpp_inner->outer = null();
HXDLIN( 730)						p1->zpp_inner = null();
HXDLIN( 730)						{
HXLINE( 730)							p1->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 730)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p1;
            						}
HXDLIN( 730)						{
HXLINE( 730)							{
HXLINE( 730)								if (hx::IsNotNull( inner->outer )) {
HXLINE( 730)									inner->outer->zpp_inner = null();
HXDLIN( 730)									inner->outer = null();
            								}
HXDLIN( 730)								inner->_isimmutable = null();
HXDLIN( 730)								inner->_validate = null();
HXDLIN( 730)								inner->_invalidate = null();
            							}
HXDLIN( 730)							inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 730)							::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            						}
            					}
            				}
            			}
            		}
HXLINE( 732)		{
HXLINE( 732)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner1,"inner") = p0->zpp_inner;
HXDLIN( 732)			p0->zpp_inner->outer = null();
HXDLIN( 732)			p0->zpp_inner = null();
HXDLIN( 732)			{
HXLINE( 732)				p0->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 732)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p0;
            			}
HXDLIN( 732)			{
HXLINE( 732)				{
HXLINE( 732)					if (hx::IsNotNull( inner1->outer )) {
HXLINE( 732)						inner1->outer->zpp_inner = null();
HXDLIN( 732)						inner1->outer = null();
            					}
HXDLIN( 732)					inner1->_isimmutable = null();
HXDLIN( 732)					inner1->_validate = null();
HXDLIN( 732)					inner1->_invalidate = null();
            				}
HXDLIN( 732)				inner1->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 732)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner1;
            			}
            		}
HXLINE( 733)		{
HXLINE( 733)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner2,"inner") = p1->zpp_inner;
HXDLIN( 733)			p1->zpp_inner->outer = null();
HXDLIN( 733)			p1->zpp_inner = null();
HXDLIN( 733)			{
HXLINE( 733)				p1->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 733)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p1;
            			}
HXDLIN( 733)			{
HXLINE( 733)				{
HXLINE( 733)					if (hx::IsNotNull( inner2->outer )) {
HXLINE( 733)						inner2->outer->zpp_inner = null();
HXDLIN( 733)						inner2->outer = null();
            					}
HXDLIN( 733)					inner2->_isimmutable = null();
HXDLIN( 733)					inner2->_validate = null();
HXDLIN( 733)					inner2->_invalidate = null();
            				}
HXDLIN( 733)				inner2->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 733)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner2;
            			}
            		}
HXLINE( 734)		{
HXLINE( 734)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner3,"inner") = ct->zpp_inner;
HXDLIN( 734)			ct->zpp_inner->outer = null();
HXDLIN( 734)			ct->zpp_inner = null();
HXDLIN( 734)			{
HXLINE( 734)				ct->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 734)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ct;
            			}
HXDLIN( 734)			{
HXLINE( 734)				{
HXLINE( 734)					if (hx::IsNotNull( inner3->outer )) {
HXLINE( 734)						inner3->outer->zpp_inner = null();
HXDLIN( 734)						inner3->outer = null();
            					}
HXDLIN( 734)					inner3->_isimmutable = null();
HXDLIN( 734)					inner3->_validate = null();
HXDLIN( 734)					inner3->_invalidate = null();
            				}
HXDLIN( 734)				inner3->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 734)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner3;
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(ZPP_AngleDraw_obj,drawSpiralSpring,(void))

void ZPP_AngleDraw_obj::drawSpiral( ::nape::util::Debug g, ::nape::geom::Vec2 c,Float a0,Float a1,Float r0,Float r1,int col){
            	HX_GC_STACKFRAME(&_hx_pos_211c7dad3b57b17f_736_drawSpiral)
            	HX_STACK_ARG(g,"g")
            	HX_STACK_ARG(c,"c")
            	HX_STACK_ARG(a0,"a0")
            	HX_STACK_ARG(a1,"a1")
            	HX_STACK_ARG(r0,"r0")
            	HX_STACK_ARG(r1,"r1")
            	HX_STACK_ARG(col,"col")
HXLINE( 737)		if ((a0 > a1)) {
HXLINE( 738)			{
HXLINE( 739)				HX_VARI( Float,t) = a0;
HXLINE( 740)				a0 = a1;
HXLINE( 741)				a1 = t;
            			}
HXLINE( 743)			{
HXLINE( 744)				HX_VARI_NAME( Float,t1,"t") = r0;
HXLINE( 745)				r0 = r1;
HXLINE( 746)				r1 = t1;
            			}
            		}
HXLINE( 749)		if ((a0 == a1)) {
HXLINE( 749)			return;
            		}
HXLINE( 750)		HX_VARI( Float,dr) = (r1 - r0);
HXLINE( 751)		HX_VARI( Float,da) = (a1 - a0);
HXLINE( 752)		HX_VARI( int,dcnt) = ::Math_obj::ceil(((Float)da / (Float)::zpp_nape::constraint::ZPP_AngleDraw_obj::maxarc));
HXLINE( 753)		HX_VARI( Float,drad) = ((Float)dr / (Float)dcnt);
HXLINE( 754)		HX_VARI( Float,dang) = ((Float)da / (Float)dcnt);
HXLINE( 755)		HX_VARI( Float,c0) = ::Math_obj::cos(a0);
HXLINE( 756)		HX_VARI( Float,s0) = ::Math_obj::sin(a0);
HXLINE( 757)		{
HXLINE( 757)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,_this) = c->zpp_inner;
HXDLIN( 757)			if (hx::IsNotNull( _this->_validate )) {
HXLINE( 757)				_this->_validate();
            			}
            		}
HXDLIN( 757)		HX_VARI( Float,x) = (c->zpp_inner->x + (r0 * c0));
HXDLIN( 757)		{
HXLINE( 757)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = c->zpp_inner;
HXDLIN( 757)			if (hx::IsNotNull( _this1->_validate )) {
HXLINE( 757)				_this1->_validate();
            			}
            		}
HXDLIN( 757)		HX_VARI( Float,y) = (c->zpp_inner->y + (r0 * s0));
HXDLIN( 757)		HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN( 757)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 757)			ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 757)			ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 757)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN( 757)			ret->zpp_pool = null();
            		}
HXDLIN( 757)		if (hx::IsNull( ret->zpp_inner )) {
HXLINE( 757)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 757)			{
HXLINE( 757)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 757)					ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 757)					ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 757)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN( 757)					ret1->next = null();
            				}
HXDLIN( 757)				ret1->weak = false;
            			}
HXDLIN( 757)			ret1->_immutable = false;
HXDLIN( 757)			{
HXLINE( 757)				ret1->x = x;
HXDLIN( 757)				ret1->y = y;
            			}
HXDLIN( 757)			ret->zpp_inner = ret1;
HXDLIN( 757)			ret->zpp_inner->outer = ret;
            		}
            		else {
HXLINE( 757)			bool _hx_tmp;
HXDLIN( 757)			{
HXLINE( 757)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN( 757)				if (hx::IsNotNull( _this2->_validate )) {
HXLINE( 757)					_this2->_validate();
            				}
            			}
HXDLIN( 757)			if ((ret->zpp_inner->x == x)) {
HXLINE( 757)				{
HXLINE( 757)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN( 757)					if (hx::IsNotNull( _this3->_validate )) {
HXLINE( 757)						_this3->_validate();
            					}
            				}
HXDLIN( 757)				_hx_tmp = (ret->zpp_inner->y == y);
            			}
            			else {
HXLINE( 757)				_hx_tmp = false;
            			}
HXDLIN( 757)			if (!(_hx_tmp)) {
HXLINE( 757)				{
HXLINE( 757)					ret->zpp_inner->x = x;
HXDLIN( 757)					ret->zpp_inner->y = y;
            				}
HXDLIN( 757)				{
HXLINE( 757)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = ret->zpp_inner;
HXDLIN( 757)					if (hx::IsNotNull( _this4->_invalidate )) {
HXLINE( 757)						_this4->_invalidate(_this4);
            					}
            				}
            			}
            		}
HXDLIN( 757)		ret->zpp_inner->weak = false;
HXDLIN( 757)		HX_VARI(  ::nape::geom::Vec2,p0) = ret;
HXLINE( 758)		HX_VARI( Float,ux) = ((dr * c0) - ((r0 * da) * s0));
HXLINE( 759)		HX_VARI( Float,uy) = ((dr * s0) + ((r0 * da) * c0));
HXLINE( 760)		HX_VARI_NAME( Float,x1,"x") = (int)0;
HXDLIN( 760)		HX_VARI_NAME( Float,y1,"y") = (int)0;
HXDLIN( 760)		HX_VAR_NAME(  ::nape::geom::Vec2,ret2,"ret");
HXDLIN( 760)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 760)			ret2 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 760)			ret2 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 760)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret2->zpp_pool;
HXDLIN( 760)			ret2->zpp_pool = null();
            		}
HXDLIN( 760)		if (hx::IsNull( ret2->zpp_inner )) {
HXLINE( 760)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret3,"ret");
HXDLIN( 760)			{
HXLINE( 760)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 760)					ret3 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 760)					ret3 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 760)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret3->next;
HXDLIN( 760)					ret3->next = null();
            				}
HXDLIN( 760)				ret3->weak = false;
            			}
HXDLIN( 760)			ret3->_immutable = false;
HXDLIN( 760)			{
HXLINE( 760)				ret3->x = x1;
HXDLIN( 760)				ret3->y = y1;
            			}
HXDLIN( 760)			ret2->zpp_inner = ret3;
HXDLIN( 760)			ret2->zpp_inner->outer = ret2;
            		}
            		else {
HXLINE( 760)			bool _hx_tmp1;
HXDLIN( 760)			{
HXLINE( 760)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = ret2->zpp_inner;
HXDLIN( 760)				if (hx::IsNotNull( _this5->_validate )) {
HXLINE( 760)					_this5->_validate();
            				}
            			}
HXDLIN( 760)			if ((ret2->zpp_inner->x == x1)) {
HXLINE( 760)				{
HXLINE( 760)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this6,"_this") = ret2->zpp_inner;
HXDLIN( 760)					if (hx::IsNotNull( _this6->_validate )) {
HXLINE( 760)						_this6->_validate();
            					}
            				}
HXDLIN( 760)				_hx_tmp1 = (ret2->zpp_inner->y == y1);
            			}
            			else {
HXLINE( 760)				_hx_tmp1 = false;
            			}
HXDLIN( 760)			if (!(_hx_tmp1)) {
HXLINE( 760)				{
HXLINE( 760)					ret2->zpp_inner->x = x1;
HXDLIN( 760)					ret2->zpp_inner->y = y1;
            				}
HXDLIN( 760)				{
HXLINE( 760)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = ret2->zpp_inner;
HXDLIN( 760)					if (hx::IsNotNull( _this7->_invalidate )) {
HXLINE( 760)						_this7->_invalidate(_this7);
            					}
            				}
            			}
            		}
HXDLIN( 760)		ret2->zpp_inner->weak = false;
HXDLIN( 760)		HX_VARI(  ::nape::geom::Vec2,p1) = ret2;
HXLINE( 761)		HX_VARI_NAME( Float,x2,"x") = (int)0;
HXDLIN( 761)		HX_VARI_NAME( Float,y2,"y") = (int)0;
HXDLIN( 761)		HX_VAR_NAME(  ::nape::geom::Vec2,ret4,"ret");
HXDLIN( 761)		if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE( 761)			ret4 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            		}
            		else {
HXLINE( 761)			ret4 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 761)			::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret4->zpp_pool;
HXDLIN( 761)			ret4->zpp_pool = null();
            		}
HXDLIN( 761)		if (hx::IsNull( ret4->zpp_inner )) {
HXLINE( 761)			HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret5,"ret");
HXDLIN( 761)			{
HXLINE( 761)				if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 761)					ret5 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            				}
            				else {
HXLINE( 761)					ret5 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 761)					::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret5->next;
HXDLIN( 761)					ret5->next = null();
            				}
HXDLIN( 761)				ret5->weak = false;
            			}
HXDLIN( 761)			ret5->_immutable = false;
HXDLIN( 761)			{
HXLINE( 761)				ret5->x = x2;
HXDLIN( 761)				ret5->y = y2;
            			}
HXDLIN( 761)			ret4->zpp_inner = ret5;
HXDLIN( 761)			ret4->zpp_inner->outer = ret4;
            		}
            		else {
HXLINE( 761)			bool _hx_tmp2;
HXDLIN( 761)			{
HXLINE( 761)				HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = ret4->zpp_inner;
HXDLIN( 761)				if (hx::IsNotNull( _this8->_validate )) {
HXLINE( 761)					_this8->_validate();
            				}
            			}
HXDLIN( 761)			if ((ret4->zpp_inner->x == x2)) {
HXLINE( 761)				{
HXLINE( 761)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = ret4->zpp_inner;
HXDLIN( 761)					if (hx::IsNotNull( _this9->_validate )) {
HXLINE( 761)						_this9->_validate();
            					}
            				}
HXDLIN( 761)				_hx_tmp2 = (ret4->zpp_inner->y == y2);
            			}
            			else {
HXLINE( 761)				_hx_tmp2 = false;
            			}
HXDLIN( 761)			if (!(_hx_tmp2)) {
HXLINE( 761)				{
HXLINE( 761)					ret4->zpp_inner->x = x2;
HXDLIN( 761)					ret4->zpp_inner->y = y2;
            				}
HXDLIN( 761)				{
HXLINE( 761)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this10,"_this") = ret4->zpp_inner;
HXDLIN( 761)					if (hx::IsNotNull( _this10->_invalidate )) {
HXLINE( 761)						_this10->_invalidate(_this10);
            					}
            				}
            			}
            		}
HXDLIN( 761)		ret4->zpp_inner->weak = false;
HXDLIN( 761)		HX_VARI(  ::nape::geom::Vec2,ct) = ret4;
HXLINE( 762)		{
HXLINE( 762)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 762)			while((_g1 < dcnt)){
HXLINE( 762)				_g1 = (_g1 + (int)1);
HXLINE( 763)				HX_VARI_NAME( Float,r11,"r1") = (r0 + drad);
HXLINE( 764)				HX_VARI_NAME( Float,a11,"a1") = (a0 + dang);
HXLINE( 765)				HX_VARI( Float,c1) = ::Math_obj::cos(a11);
HXLINE( 766)				HX_VARI( Float,s1) = ::Math_obj::sin(a11);
HXLINE( 767)				{
HXLINE( 767)					{
HXLINE( 767)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = c->zpp_inner;
HXDLIN( 767)						if (hx::IsNotNull( _this11->_validate )) {
HXLINE( 767)							_this11->_validate();
            						}
            					}
HXDLIN( 767)					HX_VARI_NAME( Float,x3,"x") = (c->zpp_inner->x + (r11 * c1));
HXDLIN( 767)					{
HXLINE( 767)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this12,"_this") = c->zpp_inner;
HXDLIN( 767)						if (hx::IsNotNull( _this12->_validate )) {
HXLINE( 767)							_this12->_validate();
            						}
            					}
HXDLIN( 767)					HX_VARI_NAME( Float,y3,"y") = (c->zpp_inner->y + (r11 * s1));
HXDLIN( 767)					bool _hx_tmp3;
HXDLIN( 767)					{
HXLINE( 767)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this13,"_this") = p1->zpp_inner;
HXDLIN( 767)						if (hx::IsNotNull( _this13->_validate )) {
HXLINE( 767)							_this13->_validate();
            						}
            					}
HXDLIN( 767)					if ((p1->zpp_inner->x == x3)) {
HXLINE( 767)						{
HXLINE( 767)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this14,"_this") = p1->zpp_inner;
HXDLIN( 767)							if (hx::IsNotNull( _this14->_validate )) {
HXLINE( 767)								_this14->_validate();
            							}
            						}
HXDLIN( 767)						_hx_tmp3 = (p1->zpp_inner->y == y3);
            					}
            					else {
HXLINE( 767)						_hx_tmp3 = false;
            					}
HXDLIN( 767)					if (!(_hx_tmp3)) {
HXLINE( 767)						{
HXLINE( 767)							p1->zpp_inner->x = x3;
HXDLIN( 767)							p1->zpp_inner->y = y3;
            						}
HXDLIN( 767)						{
HXLINE( 767)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this15,"_this") = p1->zpp_inner;
HXDLIN( 767)							if (hx::IsNotNull( _this15->_invalidate )) {
HXLINE( 767)								_this15->_invalidate(_this15);
            							}
            						}
            					}
            				}
HXLINE( 768)				HX_VARI( Float,vx) = ((dr * c1) - ((r11 * da) * s1));
HXLINE( 769)				HX_VARI( Float,vy) = ((dr * s1) + ((r11 * da) * c1));
HXLINE( 770)				HX_VARI( Float,den) = ((ux * vy) - (uy * vx));
HXLINE( 771)				if (((den * den) < ::nape::Config_obj::epsilon)) {
HXLINE( 771)					g->drawLine(p0,p1,col);
            				}
            				else {
HXLINE( 773)					{
HXLINE( 773)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this16,"_this") = p1->zpp_inner;
HXDLIN( 773)						if (hx::IsNotNull( _this16->_validate )) {
HXLINE( 773)							_this16->_validate();
            						}
            					}
HXDLIN( 773)					HX_VARI_NAME( Float,t2,"t") = p1->zpp_inner->x;
HXDLIN( 773)					{
HXLINE( 773)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this17,"_this") = p0->zpp_inner;
HXDLIN( 773)						if (hx::IsNotNull( _this17->_validate )) {
HXLINE( 773)							_this17->_validate();
            						}
            					}
HXDLIN( 773)					HX_VARI_NAME( Float,t3,"t") = ((t2 - p0->zpp_inner->x) * vy);
HXDLIN( 773)					{
HXLINE( 773)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this18,"_this") = p0->zpp_inner;
HXDLIN( 773)						if (hx::IsNotNull( _this18->_validate )) {
HXLINE( 773)							_this18->_validate();
            						}
            					}
HXDLIN( 773)					HX_VARI_NAME( Float,t4,"t") = p0->zpp_inner->y;
HXDLIN( 773)					{
HXLINE( 773)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this19,"_this") = p1->zpp_inner;
HXDLIN( 773)						if (hx::IsNotNull( _this19->_validate )) {
HXLINE( 773)							_this19->_validate();
            						}
            					}
HXDLIN( 773)					HX_VARI_NAME( Float,t5,"t") = ((Float)(t3 + ((t4 - p1->zpp_inner->y) * vx)) / (Float)den);
HXLINE( 774)					if ((t5 <= (int)0)) {
HXLINE( 774)						g->drawLine(p0,p1,col);
            					}
            					else {
HXLINE( 776)						{
HXLINE( 776)							{
HXLINE( 776)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this20,"_this") = p0->zpp_inner;
HXDLIN( 776)								if (hx::IsNotNull( _this20->_validate )) {
HXLINE( 776)									_this20->_validate();
            								}
            							}
HXDLIN( 776)							HX_VARI_NAME( Float,x4,"x") = (p0->zpp_inner->x + (ux * t5));
HXDLIN( 776)							{
HXLINE( 776)								{
HXLINE( 776)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this21,"_this") = ct->zpp_inner;
HXDLIN( 776)									if (hx::IsNotNull( _this21->_validate )) {
HXLINE( 776)										_this21->_validate();
            									}
            								}
HXDLIN( 776)								if ((ct->zpp_inner->x != x4)) {
HXLINE( 776)									ct->zpp_inner->x = x4;
HXDLIN( 776)									{
HXLINE( 776)										HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this22,"_this") = ct->zpp_inner;
HXDLIN( 776)										if (hx::IsNotNull( _this22->_invalidate )) {
HXLINE( 776)											_this22->_invalidate(_this22);
            										}
            									}
            								}
            							}
HXDLIN( 776)							{
HXLINE( 776)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this23,"_this") = ct->zpp_inner;
HXDLIN( 776)								if (hx::IsNotNull( _this23->_validate )) {
HXLINE( 776)									_this23->_validate();
            								}
            							}
            						}
HXLINE( 777)						{
HXLINE( 777)							{
HXLINE( 777)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this24,"_this") = p0->zpp_inner;
HXDLIN( 777)								if (hx::IsNotNull( _this24->_validate )) {
HXLINE( 777)									_this24->_validate();
            								}
            							}
HXDLIN( 777)							HX_VARI_NAME( Float,y4,"y") = (p0->zpp_inner->y + (uy * t5));
HXDLIN( 777)							{
HXLINE( 777)								{
HXLINE( 777)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this25,"_this") = ct->zpp_inner;
HXDLIN( 777)									if (hx::IsNotNull( _this25->_validate )) {
HXLINE( 777)										_this25->_validate();
            									}
            								}
HXDLIN( 777)								if ((ct->zpp_inner->y != y4)) {
HXLINE( 777)									ct->zpp_inner->y = y4;
HXDLIN( 777)									{
HXLINE( 777)										HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this26,"_this") = ct->zpp_inner;
HXDLIN( 777)										if (hx::IsNotNull( _this26->_invalidate )) {
HXLINE( 777)											_this26->_invalidate(_this26);
            										}
            									}
            								}
            							}
HXDLIN( 777)							{
HXLINE( 777)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this27,"_this") = ct->zpp_inner;
HXDLIN( 777)								if (hx::IsNotNull( _this27->_validate )) {
HXLINE( 777)									_this27->_validate();
            								}
            							}
            						}
HXLINE( 778)						g->drawCurve(p0,ct,p1,col);
            					}
            				}
HXLINE( 781)				r0 = r11;
HXLINE( 782)				a0 = a11;
HXLINE( 783)				c0 = c1;
HXLINE( 784)				s0 = s1;
HXLINE( 785)				ux = vx;
HXLINE( 786)				uy = vy;
HXLINE( 787)				{
HXLINE( 787)					{
HXLINE( 787)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this28,"_this") = p1->zpp_inner;
HXDLIN( 787)						if (hx::IsNotNull( _this28->_validate )) {
HXLINE( 787)							_this28->_validate();
            						}
            					}
HXDLIN( 787)					HX_VARI_NAME( Float,x5,"x") = p1->zpp_inner->x;
HXDLIN( 787)					{
HXLINE( 787)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this29,"_this") = p1->zpp_inner;
HXDLIN( 787)						if (hx::IsNotNull( _this29->_validate )) {
HXLINE( 787)							_this29->_validate();
            						}
            					}
HXDLIN( 787)					HX_VARI_NAME( Float,y5,"y") = p1->zpp_inner->y;
HXDLIN( 787)					bool _hx_tmp4;
HXDLIN( 787)					{
HXLINE( 787)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this30,"_this") = p0->zpp_inner;
HXDLIN( 787)						if (hx::IsNotNull( _this30->_validate )) {
HXLINE( 787)							_this30->_validate();
            						}
            					}
HXDLIN( 787)					if ((p0->zpp_inner->x == x5)) {
HXLINE( 787)						{
HXLINE( 787)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this31,"_this") = p0->zpp_inner;
HXDLIN( 787)							if (hx::IsNotNull( _this31->_validate )) {
HXLINE( 787)								_this31->_validate();
            							}
            						}
HXDLIN( 787)						_hx_tmp4 = (p0->zpp_inner->y == y5);
            					}
            					else {
HXLINE( 787)						_hx_tmp4 = false;
            					}
HXDLIN( 787)					if (!(_hx_tmp4)) {
HXLINE( 787)						{
HXLINE( 787)							p0->zpp_inner->x = x5;
HXDLIN( 787)							p0->zpp_inner->y = y5;
            						}
HXDLIN( 787)						{
HXLINE( 787)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this32,"_this") = p0->zpp_inner;
HXDLIN( 787)							if (hx::IsNotNull( _this32->_invalidate )) {
HXLINE( 787)								_this32->_invalidate(_this32);
            							}
            						}
            					}
HXDLIN( 787)					if (p1->zpp_inner->weak) {
HXLINE( 787)						HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,inner) = p1->zpp_inner;
HXDLIN( 787)						p1->zpp_inner->outer = null();
HXDLIN( 787)						p1->zpp_inner = null();
HXDLIN( 787)						{
HXLINE( 787)							p1->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 787)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p1;
            						}
HXDLIN( 787)						{
HXLINE( 787)							{
HXLINE( 787)								if (hx::IsNotNull( inner->outer )) {
HXLINE( 787)									inner->outer->zpp_inner = null();
HXDLIN( 787)									inner->outer = null();
            								}
HXDLIN( 787)								inner->_isimmutable = null();
HXDLIN( 787)								inner->_validate = null();
HXDLIN( 787)								inner->_invalidate = null();
            							}
HXDLIN( 787)							inner->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 787)							::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner;
            						}
            					}
            				}
            			}
            		}
HXLINE( 789)		{
HXLINE( 789)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner1,"inner") = p0->zpp_inner;
HXDLIN( 789)			p0->zpp_inner->outer = null();
HXDLIN( 789)			p0->zpp_inner = null();
HXDLIN( 789)			{
HXLINE( 789)				p0->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 789)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p0;
            			}
HXDLIN( 789)			{
HXLINE( 789)				{
HXLINE( 789)					if (hx::IsNotNull( inner1->outer )) {
HXLINE( 789)						inner1->outer->zpp_inner = null();
HXDLIN( 789)						inner1->outer = null();
            					}
HXDLIN( 789)					inner1->_isimmutable = null();
HXDLIN( 789)					inner1->_validate = null();
HXDLIN( 789)					inner1->_invalidate = null();
            				}
HXDLIN( 789)				inner1->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 789)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner1;
            			}
            		}
HXLINE( 790)		{
HXLINE( 790)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner2,"inner") = p1->zpp_inner;
HXDLIN( 790)			p1->zpp_inner->outer = null();
HXDLIN( 790)			p1->zpp_inner = null();
HXDLIN( 790)			{
HXLINE( 790)				p1->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 790)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = p1;
            			}
HXDLIN( 790)			{
HXLINE( 790)				{
HXLINE( 790)					if (hx::IsNotNull( inner2->outer )) {
HXLINE( 790)						inner2->outer->zpp_inner = null();
HXDLIN( 790)						inner2->outer = null();
            					}
HXDLIN( 790)					inner2->_isimmutable = null();
HXDLIN( 790)					inner2->_validate = null();
HXDLIN( 790)					inner2->_invalidate = null();
            				}
HXDLIN( 790)				inner2->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 790)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner2;
            			}
            		}
HXLINE( 791)		{
HXLINE( 791)			HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,inner3,"inner") = ct->zpp_inner;
HXDLIN( 791)			ct->zpp_inner->outer = null();
HXDLIN( 791)			ct->zpp_inner = null();
HXDLIN( 791)			{
HXLINE( 791)				ct->zpp_pool = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN( 791)				::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ct;
            			}
HXDLIN( 791)			{
HXLINE( 791)				{
HXLINE( 791)					if (hx::IsNotNull( inner3->outer )) {
HXLINE( 791)						inner3->outer->zpp_inner = null();
HXDLIN( 791)						inner3->outer = null();
            					}
HXDLIN( 791)					inner3->_isimmutable = null();
HXDLIN( 791)					inner3->_validate = null();
HXDLIN( 791)					inner3->_invalidate = null();
            				}
HXDLIN( 791)				inner3->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 791)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = inner3;
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(ZPP_AngleDraw_obj,drawSpiral,(void))


ZPP_AngleDraw_obj::ZPP_AngleDraw_obj()
{
}

bool ZPP_AngleDraw_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"maxarc") ) { outValue = maxarc; return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"indicator") ) { outValue = indicator_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawSpiral") ) { outValue = drawSpiral_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"drawSpiralSpring") ) { outValue = drawSpiralSpring_dyn(); return true; }
	}
	return false;
}

bool ZPP_AngleDraw_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"maxarc") ) { maxarc=ioValue.Cast< Float >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ZPP_AngleDraw_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ZPP_AngleDraw_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &ZPP_AngleDraw_obj::maxarc,HX_HCSTRING("maxarc","\x2e","\x32","\x60","\xbe")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ZPP_AngleDraw_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZPP_AngleDraw_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ZPP_AngleDraw_obj::maxarc,"maxarc");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZPP_AngleDraw_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZPP_AngleDraw_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ZPP_AngleDraw_obj::maxarc,"maxarc");
};

#endif

hx::Class ZPP_AngleDraw_obj::__mClass;

static ::String ZPP_AngleDraw_obj_sStaticFields[] = {
	HX_HCSTRING("indicator","\xcf","\xe7","\xad","\x93"),
	HX_HCSTRING("maxarc","\x2e","\x32","\x60","\xbe"),
	HX_HCSTRING("drawSpiralSpring","\x02","\x28","\xc5","\x06"),
	HX_HCSTRING("drawSpiral","\x55","\x2f","\x6d","\xff"),
	::String(null())
};

void ZPP_AngleDraw_obj::__register()
{
	hx::Object *dummy = new ZPP_AngleDraw_obj;
	ZPP_AngleDraw_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.constraint.ZPP_AngleDraw","\xa2","\x0b","\xaa","\x48");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ZPP_AngleDraw_obj::__GetStatic;
	__mClass->mSetStaticField = &ZPP_AngleDraw_obj::__SetStatic;
	__mClass->mMarkFunc = ZPP_AngleDraw_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ZPP_AngleDraw_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ZPP_AngleDraw_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZPP_AngleDraw_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZPP_AngleDraw_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZPP_AngleDraw_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ZPP_AngleDraw_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_211c7dad3b57b17f_657_boot)
HXLINE( 657)		maxarc = ((Float)::Math_obj::PI / (Float)(int)4);
            	}
}

} // end namespace zpp_nape
} // end namespace constraint
