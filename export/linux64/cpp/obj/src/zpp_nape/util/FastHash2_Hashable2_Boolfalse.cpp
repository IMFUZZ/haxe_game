// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_util_FastHash2_Hashable2_Boolfalse
#include <zpp_nape/util/FastHash2_Hashable2_Boolfalse.h>
#endif
#ifndef INCLUDED_zpp_nape_util_Hashable2_Boolfalse
#include <zpp_nape/util/Hashable2_Boolfalse.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_256_new,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","new",0x1bb1f814,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.new","zpp_nape/util/FastHash.hx",256,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_269_empty,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","empty",0xbcd8b741,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.empty","zpp_nape/util/FastHash.hx",269,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_273_clear,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","clear",0x9559ee41,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.clear","zpp_nape/util/FastHash.hx",273,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_288_get,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","get",0x1baca84a,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.get","zpp_nape/util/FastHash.hx",288,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_299_ordered_get,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","ordered_get",0xf4af0438,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.ordered_get","zpp_nape/util/FastHash.hx",299,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_307_has,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","has",0x1bad670e,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.has","zpp_nape/util/FastHash.hx",307,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_316_maybeAdd,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","maybeAdd",0x00b5bb25,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.maybeAdd","zpp_nape/util/FastHash.hx",316,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_350_add,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","add",0x1ba819d5,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.add","zpp_nape/util/FastHash.hx",350,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_382_remove,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","remove",0x16373d10,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.remove","zpp_nape/util/FastHash.hx",382,0x5d785189)
HX_DEFINE_STACK_FRAME(_hx_pos_fb34b76d850a7549_417_hash,"zpp_nape.util.FastHash2_Hashable2_Boolfalse","hash",0x1c0cc59a,"zpp_nape.util.FastHash2_Hashable2_Boolfalse.hash","zpp_nape/util/FastHash.hx",417,0x5d785189)
namespace zpp_nape{
namespace util{

void FastHash2_Hashable2_Boolfalse_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_256_new)
            	HX_STACK_THIS(this)
HXLINE( 258)		this->cnt = (int)0;
HXLINE( 257)		this->table = null();
HXLINE( 260)		this->cnt = (int)0;
HXLINE( 262)		this->table = ::Array_obj< ::Dynamic>::__new();
HXLINE( 263)		{
HXLINE( 263)			HX_VARI( int,_g1) = (int)0;
HXDLIN( 263)			while((_g1 < (int)1048576)){
HXLINE( 263)				_g1 = (_g1 + (int)1);
HXDLIN( 263)				this->table->push(null());
            			}
            		}
            	}

Dynamic FastHash2_Hashable2_Boolfalse_obj::__CreateEmpty() { return new FastHash2_Hashable2_Boolfalse_obj; }

void *FastHash2_Hashable2_Boolfalse_obj::_hx_vtable = 0;

Dynamic FastHash2_Hashable2_Boolfalse_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > _hx_result = new FastHash2_Hashable2_Boolfalse_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FastHash2_Hashable2_Boolfalse_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2427c07a;
}

bool FastHash2_Hashable2_Boolfalse_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_269_empty)
            	HX_STACK_THIS(this)
HXLINE( 269)		return (this->cnt == (int)0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(FastHash2_Hashable2_Boolfalse_obj,empty,return )

void FastHash2_Hashable2_Boolfalse_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_273_clear)
            	HX_STACK_THIS(this)
HXLINE( 273)		HX_VARI( int,_g1) = (int)0;
HXDLIN( 273)		HX_VARI( int,_g) = this->table->length;
HXDLIN( 273)		while((_g1 < _g)){
HXLINE( 273)			_g1 = (_g1 + (int)1);
HXDLIN( 273)			HX_VARI( int,i) = (_g1 - (int)1);
HXLINE( 274)			HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(i).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 275)			if (hx::IsNull( n )) {
HXLINE( 275)				continue;
            			}
HXLINE( 276)			while(hx::IsNotNull( n )){
HXLINE( 277)				HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,t) = n->hnext;
HXLINE( 278)				n->hnext = null();
HXLINE( 280)				n = t;
            			}
HXLINE( 282)			this->table[i] = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(FastHash2_Hashable2_Boolfalse_obj,clear,(void))

 ::zpp_nape::util::Hashable2_Boolfalse FastHash2_Hashable2_Boolfalse_obj::get(int id,int di){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_288_get)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(di,"di")
HXLINE( 289)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(((int)((id * (int)106039) + di) & (int)(int)1048575)).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 290)		if (hx::IsNull( n )) {
HXLINE( 290)			return null();
            		}
            		else {
HXLINE( 291)			bool _hx_tmp;
HXDLIN( 291)			if ((n->id == id)) {
HXLINE( 291)				_hx_tmp = (n->di == di);
            			}
            			else {
HXLINE( 291)				_hx_tmp = false;
            			}
HXDLIN( 291)			if (_hx_tmp) {
HXLINE( 291)				return n;
            			}
            			else {
HXLINE( 293)				while(true){
HXLINE( 293)					n = n->hnext;
HXDLIN( 293)					bool _hx_tmp1;
HXDLIN( 293)					if (hx::IsNotNull( n )) {
HXLINE( 293)						if ((n->id == id)) {
HXLINE( 293)							_hx_tmp1 = (n->di != di);
            						}
            						else {
HXLINE( 293)							_hx_tmp1 = true;
            						}
            					}
            					else {
HXLINE( 293)						_hx_tmp1 = false;
            					}
HXDLIN( 293)					if (!(_hx_tmp1)) {
HXLINE( 293)						goto _hx_goto_6;
            					}
            				}
            				_hx_goto_6:;
HXLINE( 294)				return n;
            			}
            		}
HXLINE( 290)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(FastHash2_Hashable2_Boolfalse_obj,get,return )

 ::zpp_nape::util::Hashable2_Boolfalse FastHash2_Hashable2_Boolfalse_obj::ordered_get(int id,int di){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_299_ordered_get)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(di,"di")
HXLINE( 300)		if ((id > di)) {
HXLINE( 301)			HX_VARI( int,t) = id;
HXLINE( 302)			id = di;
HXLINE( 303)			di = t;
            		}
HXLINE( 305)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(((int)((id * (int)106039) + di) & (int)(int)1048575)).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXDLIN( 305)		 ::zpp_nape::util::Hashable2_Boolfalse _hx_tmp;
HXDLIN( 305)		if (hx::IsNull( n )) {
HXLINE( 305)			_hx_tmp = null();
            		}
            		else {
HXLINE( 305)			bool _hx_tmp1;
HXDLIN( 305)			if ((n->id == id)) {
HXLINE( 305)				_hx_tmp1 = (n->di == di);
            			}
            			else {
HXLINE( 305)				_hx_tmp1 = false;
            			}
HXDLIN( 305)			if (_hx_tmp1) {
HXLINE( 305)				_hx_tmp = n;
            			}
            			else {
HXLINE( 305)				while(true){
HXLINE( 305)					n = n->hnext;
HXDLIN( 305)					bool _hx_tmp2;
HXDLIN( 305)					if (hx::IsNotNull( n )) {
HXLINE( 305)						if ((n->id == id)) {
HXLINE( 305)							_hx_tmp2 = (n->di != di);
            						}
            						else {
HXLINE( 305)							_hx_tmp2 = true;
            						}
            					}
            					else {
HXLINE( 305)						_hx_tmp2 = false;
            					}
HXDLIN( 305)					if (!(_hx_tmp2)) {
HXLINE( 305)						goto _hx_goto_8;
            					}
            				}
            				_hx_goto_8:;
HXDLIN( 305)				_hx_tmp = n;
            			}
            		}
HXDLIN( 305)		return _hx_tmp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(FastHash2_Hashable2_Boolfalse_obj,ordered_get,return )

bool FastHash2_Hashable2_Boolfalse_obj::has(int id,int di){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_307_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(di,"di")
HXLINE( 308)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(((int)((id * (int)106039) + di) & (int)(int)1048575)).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 309)		if (hx::IsNull( n )) {
HXLINE( 309)			return false;
            		}
            		else {
HXLINE( 310)			bool _hx_tmp;
HXDLIN( 310)			if ((n->id == id)) {
HXLINE( 310)				_hx_tmp = (n->di == di);
            			}
            			else {
HXLINE( 310)				_hx_tmp = false;
            			}
HXDLIN( 310)			if (_hx_tmp) {
HXLINE( 310)				return true;
            			}
            			else {
HXLINE( 312)				while(true){
HXLINE( 312)					n = n->hnext;
HXDLIN( 312)					bool _hx_tmp1;
HXDLIN( 312)					if (hx::IsNotNull( n )) {
HXLINE( 312)						if ((n->id == id)) {
HXLINE( 312)							_hx_tmp1 = (n->di != di);
            						}
            						else {
HXLINE( 312)							_hx_tmp1 = true;
            						}
            					}
            					else {
HXLINE( 312)						_hx_tmp1 = false;
            					}
HXDLIN( 312)					if (!(_hx_tmp1)) {
HXLINE( 312)						goto _hx_goto_10;
            					}
            				}
            				_hx_goto_10:;
HXLINE( 313)				return hx::IsNotNull( n );
            			}
            		}
HXLINE( 309)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(FastHash2_Hashable2_Boolfalse_obj,has,return )

void FastHash2_Hashable2_Boolfalse_obj::maybeAdd( ::zpp_nape::util::Hashable2_Boolfalse arb){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_316_maybeAdd)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(arb,"arb")
HXLINE( 325)		HX_VARI( int,h) = ((int)((arb->id * (int)106039) + arb->di) & (int)(int)1048575);
HXLINE( 326)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(h).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 328)		if (hx::IsNull( n )) {
HXLINE( 329)			this->table[h] = arb;
HXLINE( 330)			arb->hnext = null();
            		}
            		else {
HXLINE( 344)			arb->hnext = n->hnext;
HXLINE( 345)			n->hnext = arb;
            		}
HXLINE( 348)		this->cnt++;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FastHash2_Hashable2_Boolfalse_obj,maybeAdd,(void))

void FastHash2_Hashable2_Boolfalse_obj::add( ::zpp_nape::util::Hashable2_Boolfalse arb){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_350_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(arb,"arb")
HXLINE( 359)		HX_VARI( int,h) = ((int)((arb->id * (int)106039) + arb->di) & (int)(int)1048575);
HXLINE( 360)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(h).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 361)		if (hx::IsNull( n )) {
HXLINE( 362)			this->table[h] = arb;
HXLINE( 363)			arb->hnext = null();
            		}
            		else {
HXLINE( 373)			arb->hnext = n->hnext;
HXLINE( 374)			n->hnext = arb;
            		}
HXLINE( 380)		this->cnt++;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FastHash2_Hashable2_Boolfalse_obj,add,(void))

void FastHash2_Hashable2_Boolfalse_obj::remove( ::zpp_nape::util::Hashable2_Boolfalse arb){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_382_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(arb,"arb")
HXLINE( 391)		HX_VARI( int,h) = ((int)((arb->id * (int)106039) + arb->di) & (int)(int)1048575);
HXLINE( 392)		HX_VARI(  ::zpp_nape::util::Hashable2_Boolfalse,n) = this->table->__get(h).StaticCast<  ::zpp_nape::util::Hashable2_Boolfalse >();
HXLINE( 393)		if (hx::IsEq( n,arb )) {
HXLINE( 393)			this->table[h] = n->hnext;
            		}
            		else {
HXLINE( 394)			if (hx::IsNotNull( n )) {
HXLINE( 395)				HX_VAR(  ::zpp_nape::util::Hashable2_Boolfalse,pre);
HXLINE( 396)				while(true){
HXLINE( 397)					pre = n;
HXLINE( 398)					n = n->hnext;
HXLINE( 400)					bool _hx_tmp;
HXDLIN( 400)					if (hx::IsNotNull( n )) {
HXLINE( 400)						_hx_tmp = hx::IsNotEq( n,arb );
            					}
            					else {
HXLINE( 400)						_hx_tmp = false;
            					}
HXLINE( 396)					if (!(_hx_tmp)) {
HXLINE( 396)						goto _hx_goto_14;
            					}
            				}
            				_hx_goto_14:;
HXLINE( 409)				pre->hnext = n->hnext;
            			}
            		}
HXLINE( 411)		arb->hnext = null();
HXLINE( 412)		this->cnt--;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FastHash2_Hashable2_Boolfalse_obj,remove,(void))

int FastHash2_Hashable2_Boolfalse_obj::hash(int id,int di){
            	HX_STACKFRAME(&_hx_pos_fb34b76d850a7549_417_hash)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(id,"id")
            	HX_STACK_ARG(di,"di")
HXLINE( 417)		return ((int)((id * (int)106039) + di) & (int)(int)1048575);
            	}


HX_DEFINE_DYNAMIC_FUNC2(FastHash2_Hashable2_Boolfalse_obj,hash,return )


hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > FastHash2_Hashable2_Boolfalse_obj::__new() {
	hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > __this = new FastHash2_Hashable2_Boolfalse_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > FastHash2_Hashable2_Boolfalse_obj::__alloc(hx::Ctx *_hx_ctx) {
	FastHash2_Hashable2_Boolfalse_obj *__this = (FastHash2_Hashable2_Boolfalse_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FastHash2_Hashable2_Boolfalse_obj), true, "zpp_nape.util.FastHash2_Hashable2_Boolfalse"));
	*(void **)__this = FastHash2_Hashable2_Boolfalse_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FastHash2_Hashable2_Boolfalse_obj::FastHash2_Hashable2_Boolfalse_obj()
{
}

void FastHash2_Hashable2_Boolfalse_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FastHash2_Hashable2_Boolfalse);
	HX_MARK_MEMBER_NAME(table,"table");
	HX_MARK_MEMBER_NAME(cnt,"cnt");
	HX_MARK_END_CLASS();
}

void FastHash2_Hashable2_Boolfalse_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(table,"table");
	HX_VISIT_MEMBER_NAME(cnt,"cnt");
}

hx::Val FastHash2_Hashable2_Boolfalse_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"cnt") ) { return hx::Val( cnt); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn()); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn()); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"hash") ) { return hx::Val( hash_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"table") ) { return hx::Val( table); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"maybeAdd") ) { return hx::Val( maybeAdd_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"ordered_get") ) { return hx::Val( ordered_get_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val FastHash2_Hashable2_Boolfalse_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"cnt") ) { cnt=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"table") ) { table=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FastHash2_Hashable2_Boolfalse_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("table","\x0e","\xb8","\xe3","\x0a"));
	outFields->push(HX_HCSTRING("cnt","\x69","\x7f","\x4b","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo FastHash2_Hashable2_Boolfalse_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(FastHash2_Hashable2_Boolfalse_obj,table),HX_HCSTRING("table","\x0e","\xb8","\xe3","\x0a")},
	{hx::fsInt,(int)offsetof(FastHash2_Hashable2_Boolfalse_obj,cnt),HX_HCSTRING("cnt","\x69","\x7f","\x4b","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *FastHash2_Hashable2_Boolfalse_obj_sStaticStorageInfo = 0;
#endif

static ::String FastHash2_Hashable2_Boolfalse_obj_sMemberFields[] = {
	HX_HCSTRING("table","\x0e","\xb8","\xe3","\x0a"),
	HX_HCSTRING("cnt","\x69","\x7f","\x4b","\x00"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("ordered_get","\x84","\x08","\x94","\x32"),
	HX_HCSTRING("has","\x5a","\x3f","\x4f","\x00"),
	HX_HCSTRING("maybeAdd","\x59","\x4f","\x84","\x2d"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("hash","\xce","\x2f","\x08","\x45"),
	::String(null()) };

static void FastHash2_Hashable2_Boolfalse_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FastHash2_Hashable2_Boolfalse_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FastHash2_Hashable2_Boolfalse_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FastHash2_Hashable2_Boolfalse_obj::__mClass,"__mClass");
};

#endif

hx::Class FastHash2_Hashable2_Boolfalse_obj::__mClass;

void FastHash2_Hashable2_Boolfalse_obj::__register()
{
	hx::Object *dummy = new FastHash2_Hashable2_Boolfalse_obj;
	FastHash2_Hashable2_Boolfalse_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.util.FastHash2_Hashable2_Boolfalse","\x22","\x9e","\x2f","\xd6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FastHash2_Hashable2_Boolfalse_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(FastHash2_Hashable2_Boolfalse_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< FastHash2_Hashable2_Boolfalse_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FastHash2_Hashable2_Boolfalse_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FastHash2_Hashable2_Boolfalse_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FastHash2_Hashable2_Boolfalse_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
