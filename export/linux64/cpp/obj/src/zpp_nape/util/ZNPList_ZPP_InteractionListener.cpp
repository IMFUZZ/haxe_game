// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_callbacks_ZPP_InteractionListener
#include <zpp_nape/callbacks/ZPP_InteractionListener.h>
#endif
#ifndef INCLUDED_zpp_nape_callbacks_ZPP_Listener
#include <zpp_nape/callbacks/ZPP_Listener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_InteractionListener
#include <zpp_nape/util/ZNPList_ZPP_InteractionListener.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_InteractionListener
#include <zpp_nape/util/ZNPNode_ZPP_InteractionListener.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3094_new,"zpp_nape.util.ZNPList_ZPP_InteractionListener","new",0x848f65c3,"zpp_nape.util.ZNPList_ZPP_InteractionListener.new","zpp_nape/util/Lists.hx",3094,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3100_begin,"zpp_nape.util.ZNPList_ZPP_InteractionListener","begin",0x6aabde4c,"zpp_nape.util.ZNPList_ZPP_InteractionListener.begin","zpp_nape/util/Lists.hx",3100,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3107_setbegin,"zpp_nape.util.ZNPList_ZPP_InteractionListener","setbegin",0x3359e704,"zpp_nape.util.ZNPList_ZPP_InteractionListener.setbegin","zpp_nape/util/Lists.hx",3107,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3113_add,"zpp_nape.util.ZNPList_ZPP_InteractionListener","add",0x84858784,"zpp_nape.util.ZNPList_ZPP_InteractionListener.add","zpp_nape/util/Lists.hx",3113,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3117_inlined_add,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_add",0xcee27cf0,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_add","zpp_nape/util/Lists.hx",3117,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3163_addAll,"zpp_nape.util.ZNPList_ZPP_InteractionListener","addAll",0xefdab3fd,"zpp_nape.util.ZNPList_ZPP_InteractionListener.addAll","zpp_nape/util/Lists.hx",3163,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3173_insert,"zpp_nape.util.ZNPList_ZPP_InteractionListener","insert",0xeebcedb6,"zpp_nape.util.ZNPList_ZPP_InteractionListener.insert","zpp_nape/util/Lists.hx",3173,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3177_inlined_insert,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_insert",0xbe8a23ca,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_insert","zpp_nape/util/Lists.hx",3177,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3221_pop,"zpp_nape.util.ZNPList_ZPP_InteractionListener","pop",0x8490f2f4,"zpp_nape.util.ZNPList_ZPP_InteractionListener.pop","zpp_nape/util/Lists.hx",3221,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3225_inlined_pop,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_pop",0xceede860,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_pop","zpp_nape/util/Lists.hx",3225,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3259_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_InteractionListener","pop_unsafe",0x39ffa951,"zpp_nape.util.ZNPList_ZPP_InteractionListener.pop_unsafe","zpp_nape/util/Lists.hx",3259,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3263_inlined_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_pop_unsafe",0x9ba37965,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_pop_unsafe","zpp_nape/util/Lists.hx",3263,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3285_remove,"zpp_nape.util.ZNPList_ZPP_InteractionListener","remove",0x556846c1,"zpp_nape.util.ZNPList_ZPP_InteractionListener.remove","zpp_nape/util/Lists.hx",3285,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3287_try_remove,"zpp_nape.util.ZNPList_ZPP_InteractionListener","try_remove",0x5129df05,"zpp_nape.util.ZNPList_ZPP_InteractionListener.try_remove","zpp_nape/util/Lists.hx",3287,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3321_inlined_remove,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_remove",0x25357cd5,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_remove","zpp_nape/util/Lists.hx",3321,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3325_inlined_try_remove,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_try_remove",0xb2cdaf19,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_try_remove","zpp_nape/util/Lists.hx",3325,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3349_erase,"zpp_nape.util.ZNPList_ZPP_InteractionListener","erase",0x2d72dd09,"zpp_nape.util.ZNPList_ZPP_InteractionListener.erase","zpp_nape/util/Lists.hx",3349,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3353_inlined_erase,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_erase",0x81090575,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_erase","zpp_nape/util/Lists.hx",3353,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3399_splice,"zpp_nape.util.ZNPList_ZPP_InteractionListener","splice",0x107e2ff9,"zpp_nape.util.ZNPList_ZPP_InteractionListener.splice","zpp_nape/util/Lists.hx",3399,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3404_clear,"zpp_nape.util.ZNPList_ZPP_InteractionListener","clear",0x02b165b0,"zpp_nape.util.ZNPList_ZPP_InteractionListener.clear","zpp_nape/util/Lists.hx",3404,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3409_inlined_clear,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_clear",0x56478e1c,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_clear","zpp_nape/util/Lists.hx",3409,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3414_reverse,"zpp_nape.util.ZNPList_ZPP_InteractionListener","reverse",0x8dd1bc05,"zpp_nape.util.ZNPList_ZPP_InteractionListener.reverse","zpp_nape/util/Lists.hx",3414,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3430_empty,"zpp_nape.util.ZNPList_ZPP_InteractionListener","empty",0x2a302eb0,"zpp_nape.util.ZNPList_ZPP_InteractionListener.empty","zpp_nape/util/Lists.hx",3430,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3435_size,"zpp_nape.util.ZNPList_ZPP_InteractionListener","size",0x7c3ac1fe,"zpp_nape.util.ZNPList_ZPP_InteractionListener.size","zpp_nape/util/Lists.hx",3435,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3438_has,"zpp_nape.util.ZNPList_ZPP_InteractionListener","has",0x848ad4bd,"zpp_nape.util.ZNPList_ZPP_InteractionListener.has","zpp_nape/util/Lists.hx",3438,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3442_inlined_has,"zpp_nape.util.ZNPList_ZPP_InteractionListener","inlined_has",0xcee7ca29,"zpp_nape.util.ZNPList_ZPP_InteractionListener.inlined_has","zpp_nape/util/Lists.hx",3442,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3473_front,"zpp_nape.util.ZNPList_ZPP_InteractionListener","front",0xc0e40ccc,"zpp_nape.util.ZNPList_ZPP_InteractionListener.front","zpp_nape/util/Lists.hx",3473,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3475_back,"zpp_nape.util.ZNPList_ZPP_InteractionListener","back",0x70f7fb64,"zpp_nape.util.ZNPList_ZPP_InteractionListener.back","zpp_nape/util/Lists.hx",3475,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3484_iterator_at,"zpp_nape.util.ZNPList_ZPP_InteractionListener","iterator_at",0xd386ba47,"zpp_nape.util.ZNPList_ZPP_InteractionListener.iterator_at","zpp_nape/util/Lists.hx",3484,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_5d8e00e26a8043f5_3497_at,"zpp_nape.util.ZNPList_ZPP_InteractionListener","at",0x533fbcf0,"zpp_nape.util.ZNPList_ZPP_InteractionListener.at","zpp_nape/util/Lists.hx",3497,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZNPList_ZPP_InteractionListener_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3094_new)
            	HX_STACK_THIS(this)
HXLINE(3104)		this->length = (int)0;
HXLINE(3103)		this->pushmod = false;
HXLINE(3102)		this->modified = false;
HXLINE(3095)		this->head = null();
            	}

Dynamic ZNPList_ZPP_InteractionListener_obj::__CreateEmpty() { return new ZNPList_ZPP_InteractionListener_obj; }

void *ZNPList_ZPP_InteractionListener_obj::_hx_vtable = 0;

Dynamic ZNPList_ZPP_InteractionListener_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZNPList_ZPP_InteractionListener_obj > _hx_result = new ZNPList_ZPP_InteractionListener_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZNPList_ZPP_InteractionListener_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x00e430fd;
}

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3100_begin)
            	HX_STACK_THIS(this)
HXLINE(3100)		return this->head;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,begin,return )

void ZNPList_ZPP_InteractionListener_obj::setbegin( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener i){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3107_setbegin)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(i,"i")
HXLINE(3108)		this->head = i;
HXLINE(3109)		this->modified = true;
HXLINE(3110)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,setbegin,(void))

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::add( ::zpp_nape::callbacks::ZPP_InteractionListener o){
            	HX_GC_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3113_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE(3113)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXDLIN(3113)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool )) {
HXLINE(3113)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(3113)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3113)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret->next;
HXDLIN(3113)			ret->next = null();
            		}
HXDLIN(3113)		ret->elt = o;
HXDLIN(3113)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,temp) = ret;
HXDLIN(3113)		temp->next = this->head;
HXDLIN(3113)		this->head = temp;
HXDLIN(3113)		this->modified = true;
HXDLIN(3113)		this->length++;
HXDLIN(3113)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,add,return )

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::inlined_add( ::zpp_nape::callbacks::ZPP_InteractionListener o){
            	HX_GC_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3117_inlined_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE(3127)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXLINE(3129)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool )) {
HXLINE(3130)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(3136)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXLINE(3137)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret->next;
HXLINE(3138)			ret->next = null();
            		}
HXLINE(3145)		ret->elt = o;
HXLINE(3126)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,temp) = ret;
HXLINE(3148)		temp->next = this->head;
HXLINE(3149)		this->head = temp;
HXLINE(3150)		this->modified = true;
HXLINE(3151)		this->length++;
HXLINE(3152)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,inlined_add,return )

void ZNPList_ZPP_InteractionListener_obj::addAll( ::zpp_nape::util::ZNPList_ZPP_InteractionListener x){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3163_addAll)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE(3164)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cx_ite) = x->head;
HXLINE(3165)		while(hx::IsNotNull( cx_ite )){
HXLINE(3167)			this->add(cx_ite->elt);
HXLINE(3168)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,addAll,(void))

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::insert( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener cur, ::zpp_nape::callbacks::ZPP_InteractionListener o){
            	HX_GC_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3173_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE(3173)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXDLIN(3173)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool )) {
HXLINE(3173)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(3173)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3173)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret->next;
HXDLIN(3173)			ret->next = null();
            		}
HXDLIN(3173)		ret->elt = o;
HXDLIN(3173)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,temp) = ret;
HXDLIN(3173)		if (hx::IsNull( cur )) {
HXLINE(3173)			temp->next = this->head;
HXDLIN(3173)			this->head = temp;
            		}
            		else {
HXLINE(3173)			temp->next = cur->next;
HXDLIN(3173)			cur->next = temp;
            		}
HXDLIN(3173)		this->pushmod = (this->modified = true);
HXDLIN(3173)		this->length++;
HXDLIN(3173)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionListener_obj,insert,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::inlined_insert( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener cur, ::zpp_nape::callbacks::ZPP_InteractionListener o){
            	HX_GC_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3177_inlined_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE(3187)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXLINE(3189)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool )) {
HXLINE(3190)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(3196)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXLINE(3197)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret->next;
HXLINE(3198)			ret->next = null();
            		}
HXLINE(3205)		ret->elt = o;
HXLINE(3186)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,temp) = ret;
HXLINE(3208)		if (hx::IsNull( cur )) {
HXLINE(3209)			temp->next = this->head;
HXLINE(3210)			this->head = temp;
            		}
            		else {
HXLINE(3213)			temp->next = cur->next;
HXLINE(3214)			cur->next = temp;
            		}
HXLINE(3216)		this->pushmod = (this->modified = true);
HXLINE(3217)		this->length++;
HXLINE(3218)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionListener_obj,inlined_insert,return )

void ZNPList_ZPP_InteractionListener_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3221_pop)
            	HX_STACK_THIS(this)
HXLINE(3221)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXDLIN(3221)		this->head = ret->next;
HXDLIN(3221)		{
HXLINE(3221)			ret->elt = null();
HXDLIN(3221)			ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3221)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret;
            		}
HXDLIN(3221)		if (hx::IsNull( this->head )) {
HXLINE(3221)			this->pushmod = true;
            		}
HXDLIN(3221)		this->modified = true;
HXDLIN(3221)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,pop,(void))

void ZNPList_ZPP_InteractionListener_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3225_inlined_pop)
            	HX_STACK_THIS(this)
HXLINE(3234)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXLINE(3235)		this->head = ret->next;
HXLINE(3237)		{
HXLINE(3247)			ret->elt = null();
HXLINE(3248)			ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXLINE(3249)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret;
            		}
HXLINE(3254)		if (hx::IsNull( this->head )) {
HXLINE(3254)			this->pushmod = true;
            		}
HXLINE(3255)		this->modified = true;
HXLINE(3256)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,inlined_pop,(void))

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3259_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE(3259)		HX_VARI(  ::zpp_nape::callbacks::ZPP_InteractionListener,ret) = this->head->elt;
HXDLIN(3259)		this->pop();
HXDLIN(3259)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,pop_unsafe,return )

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3263_inlined_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE(3272)		HX_VARI(  ::zpp_nape::callbacks::ZPP_InteractionListener,ret) = this->head->elt;
HXLINE(3273)		this->pop();
HXLINE(3274)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,inlined_pop_unsafe,return )

void ZNPList_ZPP_InteractionListener_obj::remove( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3285_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3285)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,pre) = null();
HXDLIN(3285)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = this->head;
HXDLIN(3285)		while(hx::IsNotNull( cur )){
HXLINE(3285)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(3285)				{
HXLINE(3285)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,old);
HXDLIN(3285)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXDLIN(3285)					if (hx::IsNull( pre )) {
HXLINE(3285)						old = this->head;
HXDLIN(3285)						ret = old->next;
HXDLIN(3285)						this->head = ret;
HXDLIN(3285)						if (hx::IsNull( this->head )) {
HXLINE(3285)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(3285)						old = pre->next;
HXDLIN(3285)						ret = old->next;
HXDLIN(3285)						pre->next = ret;
HXDLIN(3285)						if (hx::IsNull( ret )) {
HXLINE(3285)							this->pushmod = true;
            						}
            					}
HXDLIN(3285)					{
HXLINE(3285)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,o) = old;
HXDLIN(3285)						o->elt = null();
HXDLIN(3285)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3285)						::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = o;
            					}
HXDLIN(3285)					this->modified = true;
HXDLIN(3285)					this->length--;
HXDLIN(3285)					this->pushmod = true;
            				}
HXDLIN(3285)				goto _hx_goto_13;
            			}
HXDLIN(3285)			pre = cur;
HXDLIN(3285)			cur = cur->next;
            		}
            		_hx_goto_13:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,remove,(void))

bool ZNPList_ZPP_InteractionListener_obj::try_remove( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3287_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3296)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,pre) = null();
HXLINE(3297)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = this->head;
HXLINE(3298)		HX_VARI( bool,ret) = false;
HXLINE(3299)		while(hx::IsNotNull( cur )){
HXLINE(3300)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(3301)				this->erase(pre);
HXLINE(3302)				ret = true;
HXLINE(3303)				goto _hx_goto_15;
            			}
HXLINE(3305)			pre = cur;
HXLINE(3306)			cur = cur->next;
            		}
            		_hx_goto_15:;
HXLINE(3308)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,try_remove,return )

void ZNPList_ZPP_InteractionListener_obj::inlined_remove( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3321_inlined_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3321)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,pre) = null();
HXDLIN(3321)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = this->head;
HXDLIN(3321)		while(hx::IsNotNull( cur )){
HXLINE(3321)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(3321)				{
HXLINE(3321)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,old);
HXDLIN(3321)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXDLIN(3321)					if (hx::IsNull( pre )) {
HXLINE(3321)						old = this->head;
HXDLIN(3321)						ret = old->next;
HXDLIN(3321)						this->head = ret;
HXDLIN(3321)						if (hx::IsNull( this->head )) {
HXLINE(3321)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(3321)						old = pre->next;
HXDLIN(3321)						ret = old->next;
HXDLIN(3321)						pre->next = ret;
HXDLIN(3321)						if (hx::IsNull( ret )) {
HXLINE(3321)							this->pushmod = true;
            						}
            					}
HXDLIN(3321)					{
HXLINE(3321)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,o) = old;
HXDLIN(3321)						o->elt = null();
HXDLIN(3321)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3321)						::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = o;
            					}
HXDLIN(3321)					this->modified = true;
HXDLIN(3321)					this->length--;
HXDLIN(3321)					this->pushmod = true;
            				}
HXDLIN(3321)				goto _hx_goto_17;
            			}
HXDLIN(3321)			pre = cur;
HXDLIN(3321)			cur = cur->next;
            		}
            		_hx_goto_17:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,inlined_remove,(void))

bool ZNPList_ZPP_InteractionListener_obj::inlined_try_remove( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3325_inlined_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3334)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,pre) = null();
HXLINE(3335)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = this->head;
HXLINE(3336)		HX_VARI( bool,ret) = false;
HXLINE(3337)		while(hx::IsNotNull( cur )){
HXLINE(3338)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(3339)				{
HXLINE(3339)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,old);
HXDLIN(3339)					HX_VAR_NAME(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret1,"ret");
HXDLIN(3339)					if (hx::IsNull( pre )) {
HXLINE(3339)						old = this->head;
HXDLIN(3339)						ret1 = old->next;
HXDLIN(3339)						this->head = ret1;
HXDLIN(3339)						if (hx::IsNull( this->head )) {
HXLINE(3339)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(3339)						old = pre->next;
HXDLIN(3339)						ret1 = old->next;
HXDLIN(3339)						pre->next = ret1;
HXDLIN(3339)						if (hx::IsNull( ret1 )) {
HXLINE(3339)							this->pushmod = true;
            						}
            					}
HXDLIN(3339)					{
HXLINE(3339)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,o) = old;
HXDLIN(3339)						o->elt = null();
HXDLIN(3339)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3339)						::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = o;
            					}
HXDLIN(3339)					this->modified = true;
HXDLIN(3339)					this->length--;
HXDLIN(3339)					this->pushmod = true;
            				}
HXLINE(3340)				ret = true;
HXLINE(3341)				goto _hx_goto_19;
            			}
HXLINE(3343)			pre = cur;
HXLINE(3344)			cur = cur->next;
            		}
            		_hx_goto_19:;
HXLINE(3346)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,inlined_try_remove,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::erase( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener pre){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3349_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE(3349)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,old);
HXDLIN(3349)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXDLIN(3349)		if (hx::IsNull( pre )) {
HXLINE(3349)			old = this->head;
HXDLIN(3349)			ret = old->next;
HXDLIN(3349)			this->head = ret;
HXDLIN(3349)			if (hx::IsNull( this->head )) {
HXLINE(3349)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(3349)			old = pre->next;
HXDLIN(3349)			ret = old->next;
HXDLIN(3349)			pre->next = ret;
HXDLIN(3349)			if (hx::IsNull( ret )) {
HXLINE(3349)				this->pushmod = true;
            			}
            		}
HXDLIN(3349)		{
HXLINE(3349)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,o) = old;
HXDLIN(3349)			o->elt = null();
HXDLIN(3349)			o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3349)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = o;
            		}
HXDLIN(3349)		this->modified = true;
HXDLIN(3349)		this->length--;
HXDLIN(3349)		this->pushmod = true;
HXDLIN(3349)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::inlined_erase( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener pre){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3353_inlined_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE(3362)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,old);
HXLINE(3363)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret);
HXLINE(3364)		if (hx::IsNull( pre )) {
HXLINE(3365)			old = this->head;
HXLINE(3366)			ret = old->next;
HXLINE(3367)			this->head = ret;
HXLINE(3368)			if (hx::IsNull( this->head )) {
HXLINE(3368)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(3371)			old = pre->next;
HXLINE(3372)			ret = old->next;
HXLINE(3373)			pre->next = ret;
HXLINE(3374)			if (hx::IsNull( ret )) {
HXLINE(3374)				this->pushmod = true;
            			}
            		}
HXLINE(3377)		{
HXLINE(3378)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,o) = old;
HXLINE(3387)			o->elt = null();
HXLINE(3388)			o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXLINE(3389)			::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = o;
            		}
HXLINE(3394)		this->modified = true;
HXLINE(3395)		this->length--;
HXLINE(3396)		this->pushmod = true;
HXLINE(3397)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,inlined_erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::splice( ::zpp_nape::util::ZNPNode_ZPP_InteractionListener pre,int n){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3399_splice)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
            	HX_STACK_ARG(n,"n")
HXLINE(3400)		while(true){
HXLINE(3400)			bool _hx_tmp;
HXDLIN(3400)			n = (n - (int)1);
HXDLIN(3400)			if (((n + (int)1) > (int)0)) {
HXLINE(3400)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE(3400)				_hx_tmp = false;
            			}
HXDLIN(3400)			if (!(_hx_tmp)) {
HXLINE(3400)				goto _hx_goto_23;
            			}
HXDLIN(3400)			this->erase(pre);
            		}
            		_hx_goto_23:;
HXLINE(3401)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionListener_obj,splice,return )

void ZNPList_ZPP_InteractionListener_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3404_clear)
            	HX_STACK_THIS(this)
HXLINE(3404)		while(hx::IsNotNull( this->head )){
HXLINE(3404)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXDLIN(3404)			this->head = ret->next;
HXDLIN(3404)			{
HXLINE(3404)				ret->elt = null();
HXDLIN(3404)				ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3404)				::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret;
            			}
HXDLIN(3404)			if (hx::IsNull( this->head )) {
HXLINE(3404)				this->pushmod = true;
            			}
HXDLIN(3404)			this->modified = true;
HXDLIN(3404)			this->length--;
            		}
HXDLIN(3404)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,clear,(void))

void ZNPList_ZPP_InteractionListener_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3409_inlined_clear)
            	HX_STACK_THIS(this)
HXLINE(3410)		while(hx::IsNotNull( this->head )){
HXLINE(3410)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXDLIN(3410)			this->head = ret->next;
HXDLIN(3410)			{
HXLINE(3410)				ret->elt = null();
HXDLIN(3410)				ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool;
HXDLIN(3410)				::zpp_nape::util::ZNPNode_ZPP_InteractionListener_obj::zpp_pool = ret;
            			}
HXDLIN(3410)			if (hx::IsNull( this->head )) {
HXLINE(3410)				this->pushmod = true;
            			}
HXDLIN(3410)			this->modified = true;
HXDLIN(3410)			this->length--;
            		}
HXLINE(3411)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,inlined_clear,(void))

void ZNPList_ZPP_InteractionListener_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3414_reverse)
            	HX_STACK_THIS(this)
HXLINE(3415)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = this->head;
HXLINE(3416)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,pre) = null();
HXLINE(3417)		while(hx::IsNotNull( cur )){
HXLINE(3418)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,nx) = cur->next;
HXLINE(3419)			cur->next = pre;
HXLINE(3420)			this->head = cur;
HXLINE(3421)			pre = cur;
HXLINE(3422)			cur = nx;
            		}
HXLINE(3424)		this->modified = true;
HXLINE(3425)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,reverse,(void))

bool ZNPList_ZPP_InteractionListener_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3430_empty)
            	HX_STACK_THIS(this)
HXLINE(3430)		return hx::IsNull( this->head );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,empty,return )

int ZNPList_ZPP_InteractionListener_obj::size(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3435_size)
            	HX_STACK_THIS(this)
HXLINE(3435)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,size,return )

bool ZNPList_ZPP_InteractionListener_obj::has( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3438_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3438)		HX_VAR( bool,ret);
HXDLIN(3438)		{
HXLINE(3438)			ret = false;
HXDLIN(3438)			{
HXLINE(3438)				HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cx_ite) = this->head;
HXDLIN(3438)				while(hx::IsNotNull( cx_ite )){
HXLINE(3438)					if (hx::IsEq( cx_ite->elt,obj )) {
HXLINE(3438)						ret = true;
HXDLIN(3438)						goto _hx_goto_33;
            					}
HXDLIN(3438)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_33:;
            			}
            		}
HXDLIN(3438)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,has,return )

bool ZNPList_ZPP_InteractionListener_obj::inlined_has( ::zpp_nape::callbacks::ZPP_InteractionListener obj){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3442_inlined_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(3451)		HX_VAR( bool,ret);
HXLINE(3452)		{
HXLINE(3453)			ret = false;
HXLINE(3454)			{
HXLINE(3455)				HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cx_ite) = this->head;
HXLINE(3456)				while(hx::IsNotNull( cx_ite )){
HXLINE(3459)					if (hx::IsEq( cx_ite->elt,obj )) {
HXLINE(3460)						ret = true;
HXLINE(3461)						goto _hx_goto_35;
            					}
HXLINE(3464)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE(3468)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,inlined_has,return )

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::front(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3473_front)
            	HX_STACK_THIS(this)
HXLINE(3473)		return this->head->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,front,return )

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::back(){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3475_back)
            	HX_STACK_THIS(this)
HXLINE(3476)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXLINE(3477)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,cur) = ret;
HXLINE(3478)		while(hx::IsNotNull( cur )){
HXLINE(3479)			ret = cur;
HXLINE(3480)			cur = cur->next;
            		}
HXLINE(3482)		return ret->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionListener_obj,back,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3484_iterator_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE(3493)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,ret) = this->head;
HXLINE(3494)		while(true){
HXLINE(3494)			bool _hx_tmp;
HXDLIN(3494)			ind = (ind - (int)1);
HXDLIN(3494)			if (((ind + (int)1) > (int)0)) {
HXLINE(3494)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE(3494)				_hx_tmp = false;
            			}
HXDLIN(3494)			if (!(_hx_tmp)) {
HXLINE(3494)				goto _hx_goto_40;
            			}
HXDLIN(3494)			ret = ret->next;
            		}
            		_hx_goto_40:;
HXLINE(3495)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,iterator_at,return )

 ::zpp_nape::callbacks::ZPP_InteractionListener ZNPList_ZPP_InteractionListener_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_5d8e00e26a8043f5_3497_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE(3506)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener,it) = this->iterator_at(ind);
HXLINE(3507)		if (hx::IsNotNull( it )) {
HXLINE(3507)			return it->elt;
            		}
            		else {
HXLINE(3507)			return null();
            		}
HXDLIN(3507)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionListener_obj,at,return )


hx::ObjectPtr< ZNPList_ZPP_InteractionListener_obj > ZNPList_ZPP_InteractionListener_obj::__new() {
	hx::ObjectPtr< ZNPList_ZPP_InteractionListener_obj > __this = new ZNPList_ZPP_InteractionListener_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZNPList_ZPP_InteractionListener_obj > ZNPList_ZPP_InteractionListener_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZNPList_ZPP_InteractionListener_obj *__this = (ZNPList_ZPP_InteractionListener_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPList_ZPP_InteractionListener_obj), true, "zpp_nape.util.ZNPList_ZPP_InteractionListener"));
	*(void **)__this = ZNPList_ZPP_InteractionListener_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZNPList_ZPP_InteractionListener_obj::ZNPList_ZPP_InteractionListener_obj()
{
}

void ZNPList_ZPP_InteractionListener_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZNPList_ZPP_InteractionListener);
	HX_MARK_MEMBER_NAME(head,"head");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void ZNPList_ZPP_InteractionListener_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(head,"head");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val ZNPList_ZPP_InteractionListener_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn()); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { return hx::Val( head); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn()); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn()); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn()); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn()); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn()); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZNPList_ZPP_InteractionListener_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { head=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_InteractionListener >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZNPList_ZPP_InteractionListener_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("head","\x20","\x29","\x0b","\x45"));
	outFields->push(HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"));
	outFields->push(HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ZNPList_ZPP_InteractionListener_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::util::ZNPNode_ZPP_InteractionListener*/ ,(int)offsetof(ZNPList_ZPP_InteractionListener_obj,head),HX_HCSTRING("head","\x20","\x29","\x0b","\x45")},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_InteractionListener_obj,modified),HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16")},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_InteractionListener_obj,pushmod),HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75")},
	{hx::fsInt,(int)offsetof(ZNPList_ZPP_InteractionListener_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZNPList_ZPP_InteractionListener_obj_sStaticStorageInfo = 0;
#endif

static ::String ZNPList_ZPP_InteractionListener_obj_sMemberFields[] = {
	HX_HCSTRING("head","\x20","\x29","\x0b","\x45"),
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"),
	HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("setbegin","\x47","\xe3","\x5c","\x2b"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("inlined_add","\x8d","\x4c","\x2e","\x02"),
	HX_HCSTRING("addAll","\x80","\x09","\xfb","\x9e"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("inlined_insert","\x4d","\x34","\x10","\xa7"),
	HX_HCSTRING("pop","\x91","\x5d","\x55","\x00"),
	HX_HCSTRING("inlined_pop","\xfd","\xb7","\x39","\x02"),
	HX_HCSTRING("pop_unsafe","\x54","\x7c","\xec","\x75"),
	HX_HCSTRING("inlined_pop_unsafe","\x68","\x87","\xef","\x15"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("try_remove","\x08","\xb2","\x16","\x8d"),
	HX_HCSTRING("inlined_remove","\x58","\x8d","\xbb","\x0d"),
	HX_HCSTRING("inlined_try_remove","\x1c","\xbd","\x19","\x2d"),
	HX_HCSTRING("erase","\xe6","\xe8","\x1c","\x73"),
	HX_HCSTRING("inlined_erase","\x52","\xb6","\x9d","\xfa"),
	HX_HCSTRING("splice","\x7c","\x85","\x9e","\xbf"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("inlined_clear","\xf9","\x3e","\xdc","\xcf"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("size","\xc1","\xa0","\x53","\x4c"),
	HX_HCSTRING("has","\x5a","\x3f","\x4f","\x00"),
	HX_HCSTRING("inlined_has","\xc6","\x99","\x33","\x02"),
	HX_HCSTRING("front","\xa9","\x18","\x8e","\x06"),
	HX_HCSTRING("back","\x27","\xda","\x10","\x41"),
	HX_HCSTRING("iterator_at","\xe4","\x89","\xd2","\x06"),
	HX_HCSTRING("at","\xf3","\x54","\x00","\x00"),
	::String(null()) };

static void ZNPList_ZPP_InteractionListener_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZNPList_ZPP_InteractionListener_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZNPList_ZPP_InteractionListener_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZNPList_ZPP_InteractionListener_obj::__mClass,"__mClass");
};

#endif

hx::Class ZNPList_ZPP_InteractionListener_obj::__mClass;

void ZNPList_ZPP_InteractionListener_obj::__register()
{
	hx::Object *dummy = new ZNPList_ZPP_InteractionListener_obj;
	ZNPList_ZPP_InteractionListener_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.util.ZNPList_ZPP_InteractionListener","\x51","\xc8","\x5a","\xe9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ZNPList_ZPP_InteractionListener_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZNPList_ZPP_InteractionListener_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZNPList_ZPP_InteractionListener_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZNPList_ZPP_InteractionListener_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZNPList_ZPP_InteractionListener_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZNPList_ZPP_InteractionListener_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
