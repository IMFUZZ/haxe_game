// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionGroup
#include <zpp_nape/dynamics/ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_InteractionGroup
#include <zpp_nape/util/ZNPList_ZPP_InteractionGroup.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_InteractionGroup
#include <zpp_nape/util/ZNPNode_ZPP_InteractionGroup.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12685_new,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","new",0x154a7934,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.new","zpp_nape/util/Lists.hx",12685,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12691_begin,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","begin",0xeee76ffd,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.begin","zpp_nape/util/Lists.hx",12691,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12698_setbegin,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","setbegin",0x12edb9f3,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.setbegin","zpp_nape/util/Lists.hx",12698,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12704_add,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","add",0x15409af5,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.add","zpp_nape/util/Lists.hx",12704,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12708_inlined_add,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_add",0x19f7e961,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_add","zpp_nape/util/Lists.hx",12708,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12754_addAll,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","addAll",0x1fbe9d2c,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.addAll","zpp_nape/util/Lists.hx",12754,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12764_insert,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","insert",0x1ea0d6e5,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.insert","zpp_nape/util/Lists.hx",12764,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12768_inlined_insert,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_insert",0x7c5153f9,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_insert","zpp_nape/util/Lists.hx",12768,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12812_pop,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","pop",0x154c0665,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.pop","zpp_nape/util/Lists.hx",12812,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12816_inlined_pop,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_pop",0x1a0354d1,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_pop","zpp_nape/util/Lists.hx",12816,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12850_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","pop_unsafe",0x04615600,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.pop_unsafe","zpp_nape/util/Lists.hx",12850,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12854_inlined_pop_unsafe,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_pop_unsafe",0x9497ed14,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_pop_unsafe","zpp_nape/util/Lists.hx",12854,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12876_remove,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","remove",0x854c2ff0,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.remove","zpp_nape/util/Lists.hx",12876,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12878_try_remove,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","try_remove",0x1b8b8bb4,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.try_remove","zpp_nape/util/Lists.hx",12878,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12912_inlined_remove,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_remove",0xe2fcad04,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_remove","zpp_nape/util/Lists.hx",12912,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12916_inlined_try_remove,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_try_remove",0xabc222c8,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_try_remove","zpp_nape/util/Lists.hx",12916,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12940_erase,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","erase",0xb1ae6eba,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.erase","zpp_nape/util/Lists.hx",12940,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12944_inlined_erase,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_erase",0xcda73026,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_erase","zpp_nape/util/Lists.hx",12944,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12990_splice,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","splice",0x40621928,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.splice","zpp_nape/util/Lists.hx",12990,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_12995_clear,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","clear",0x86ecf761,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.clear","zpp_nape/util/Lists.hx",12995,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13000_inlined_clear,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_clear",0xa2e5b8cd,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_clear","zpp_nape/util/Lists.hx",13000,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13005_reverse,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","reverse",0x4559dbf6,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.reverse","zpp_nape/util/Lists.hx",13005,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13021_empty,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","empty",0xae6bc061,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.empty","zpp_nape/util/Lists.hx",13021,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13026_size,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","size",0x8f30b16d,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.size","zpp_nape/util/Lists.hx",13026,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13029_has,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","has",0x1545e82e,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.has","zpp_nape/util/Lists.hx",13029,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13033_inlined_has,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","inlined_has",0x19fd369a,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.inlined_has","zpp_nape/util/Lists.hx",13033,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13064_front,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","front",0x451f9e7d,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.front","zpp_nape/util/Lists.hx",13064,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13066_back,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","back",0x83edead3,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.back","zpp_nape/util/Lists.hx",13066,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13075_iterator_at,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","iterator_at",0x1e9c26b8,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.iterator_at","zpp_nape/util/Lists.hx",13075,0x9f4e6754)
HX_DEFINE_STACK_FRAME(_hx_pos_dbd726255778db80_13088_at,"zpp_nape.util.ZNPList_ZPP_InteractionGroup","at",0x42ada29f,"zpp_nape.util.ZNPList_ZPP_InteractionGroup.at","zpp_nape/util/Lists.hx",13088,0x9f4e6754)
namespace zpp_nape{
namespace util{

void ZNPList_ZPP_InteractionGroup_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12685_new)
            	HX_STACK_THIS(this)
HXLINE(12695)		this->length = (int)0;
HXLINE(12694)		this->pushmod = false;
HXLINE(12693)		this->modified = false;
HXLINE(12686)		this->head = null();
            	}

Dynamic ZNPList_ZPP_InteractionGroup_obj::__CreateEmpty() { return new ZNPList_ZPP_InteractionGroup_obj; }

void *ZNPList_ZPP_InteractionGroup_obj::_hx_vtable = 0;

Dynamic ZNPList_ZPP_InteractionGroup_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZNPList_ZPP_InteractionGroup_obj > _hx_result = new ZNPList_ZPP_InteractionGroup_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZNPList_ZPP_InteractionGroup_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4ffe6986;
}

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12691_begin)
            	HX_STACK_THIS(this)
HXLINE(12691)		return this->head;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,begin,return )

void ZNPList_ZPP_InteractionGroup_obj::setbegin( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup i){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12698_setbegin)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(i,"i")
HXLINE(12699)		this->head = i;
HXLINE(12700)		this->modified = true;
HXLINE(12701)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,setbegin,(void))

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::add( ::zpp_nape::dynamics::ZPP_InteractionGroup o){
            	HX_GC_STACKFRAME(&_hx_pos_dbd726255778db80_12704_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE(12704)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXDLIN(12704)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool )) {
HXLINE(12704)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(12704)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12704)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret->next;
HXDLIN(12704)			ret->next = null();
            		}
HXDLIN(12704)		ret->elt = o;
HXDLIN(12704)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,temp) = ret;
HXDLIN(12704)		temp->next = this->head;
HXDLIN(12704)		this->head = temp;
HXDLIN(12704)		this->modified = true;
HXDLIN(12704)		this->length++;
HXDLIN(12704)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,add,return )

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::inlined_add( ::zpp_nape::dynamics::ZPP_InteractionGroup o){
            	HX_GC_STACKFRAME(&_hx_pos_dbd726255778db80_12708_inlined_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE(12718)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXLINE(12720)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool )) {
HXLINE(12721)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(12727)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXLINE(12728)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret->next;
HXLINE(12729)			ret->next = null();
            		}
HXLINE(12736)		ret->elt = o;
HXLINE(12717)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,temp) = ret;
HXLINE(12739)		temp->next = this->head;
HXLINE(12740)		this->head = temp;
HXLINE(12741)		this->modified = true;
HXLINE(12742)		this->length++;
HXLINE(12743)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,inlined_add,return )

void ZNPList_ZPP_InteractionGroup_obj::addAll( ::zpp_nape::util::ZNPList_ZPP_InteractionGroup x){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12754_addAll)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE(12755)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cx_ite) = x->head;
HXLINE(12756)		while(hx::IsNotNull( cx_ite )){
HXLINE(12758)			this->add(cx_ite->elt);
HXLINE(12759)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,addAll,(void))

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::insert( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup cur, ::zpp_nape::dynamics::ZPP_InteractionGroup o){
            	HX_GC_STACKFRAME(&_hx_pos_dbd726255778db80_12764_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE(12764)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXDLIN(12764)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool )) {
HXLINE(12764)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(12764)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12764)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret->next;
HXDLIN(12764)			ret->next = null();
            		}
HXDLIN(12764)		ret->elt = o;
HXDLIN(12764)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,temp) = ret;
HXDLIN(12764)		if (hx::IsNull( cur )) {
HXLINE(12764)			temp->next = this->head;
HXDLIN(12764)			this->head = temp;
            		}
            		else {
HXLINE(12764)			temp->next = cur->next;
HXDLIN(12764)			cur->next = temp;
            		}
HXDLIN(12764)		this->pushmod = (this->modified = true);
HXDLIN(12764)		this->length++;
HXDLIN(12764)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionGroup_obj,insert,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::inlined_insert( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup cur, ::zpp_nape::dynamics::ZPP_InteractionGroup o){
            	HX_GC_STACKFRAME(&_hx_pos_dbd726255778db80_12768_inlined_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE(12778)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXLINE(12780)		if (hx::IsNull( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool )) {
HXLINE(12781)			ret =  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE(12787)			ret = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXLINE(12788)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret->next;
HXLINE(12789)			ret->next = null();
            		}
HXLINE(12796)		ret->elt = o;
HXLINE(12777)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,temp) = ret;
HXLINE(12799)		if (hx::IsNull( cur )) {
HXLINE(12800)			temp->next = this->head;
HXLINE(12801)			this->head = temp;
            		}
            		else {
HXLINE(12804)			temp->next = cur->next;
HXLINE(12805)			cur->next = temp;
            		}
HXLINE(12807)		this->pushmod = (this->modified = true);
HXLINE(12808)		this->length++;
HXLINE(12809)		return temp;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionGroup_obj,inlined_insert,return )

void ZNPList_ZPP_InteractionGroup_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12812_pop)
            	HX_STACK_THIS(this)
HXLINE(12812)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXDLIN(12812)		this->head = ret->next;
HXDLIN(12812)		{
HXLINE(12812)			ret->elt = null();
HXDLIN(12812)			ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12812)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret;
            		}
HXDLIN(12812)		if (hx::IsNull( this->head )) {
HXLINE(12812)			this->pushmod = true;
            		}
HXDLIN(12812)		this->modified = true;
HXDLIN(12812)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,pop,(void))

void ZNPList_ZPP_InteractionGroup_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12816_inlined_pop)
            	HX_STACK_THIS(this)
HXLINE(12825)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXLINE(12826)		this->head = ret->next;
HXLINE(12828)		{
HXLINE(12838)			ret->elt = null();
HXLINE(12839)			ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXLINE(12840)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret;
            		}
HXLINE(12845)		if (hx::IsNull( this->head )) {
HXLINE(12845)			this->pushmod = true;
            		}
HXLINE(12846)		this->modified = true;
HXLINE(12847)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,inlined_pop,(void))

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12850_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE(12850)		HX_VARI(  ::zpp_nape::dynamics::ZPP_InteractionGroup,ret) = this->head->elt;
HXDLIN(12850)		this->pop();
HXDLIN(12850)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,pop_unsafe,return )

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12854_inlined_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE(12863)		HX_VARI(  ::zpp_nape::dynamics::ZPP_InteractionGroup,ret) = this->head->elt;
HXLINE(12864)		this->pop();
HXLINE(12865)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,inlined_pop_unsafe,return )

void ZNPList_ZPP_InteractionGroup_obj::remove( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12876_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(12876)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,pre) = null();
HXDLIN(12876)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = this->head;
HXDLIN(12876)		while(hx::IsNotNull( cur )){
HXLINE(12876)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(12876)				{
HXLINE(12876)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,old);
HXDLIN(12876)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXDLIN(12876)					if (hx::IsNull( pre )) {
HXLINE(12876)						old = this->head;
HXDLIN(12876)						ret = old->next;
HXDLIN(12876)						this->head = ret;
HXDLIN(12876)						if (hx::IsNull( this->head )) {
HXLINE(12876)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(12876)						old = pre->next;
HXDLIN(12876)						ret = old->next;
HXDLIN(12876)						pre->next = ret;
HXDLIN(12876)						if (hx::IsNull( ret )) {
HXLINE(12876)							this->pushmod = true;
            						}
            					}
HXDLIN(12876)					{
HXLINE(12876)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,o) = old;
HXDLIN(12876)						o->elt = null();
HXDLIN(12876)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12876)						::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = o;
            					}
HXDLIN(12876)					this->modified = true;
HXDLIN(12876)					this->length--;
HXDLIN(12876)					this->pushmod = true;
            				}
HXDLIN(12876)				goto _hx_goto_13;
            			}
HXDLIN(12876)			pre = cur;
HXDLIN(12876)			cur = cur->next;
            		}
            		_hx_goto_13:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,remove,(void))

bool ZNPList_ZPP_InteractionGroup_obj::try_remove( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12878_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(12887)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,pre) = null();
HXLINE(12888)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = this->head;
HXLINE(12889)		HX_VARI( bool,ret) = false;
HXLINE(12890)		while(hx::IsNotNull( cur )){
HXLINE(12891)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(12892)				this->erase(pre);
HXLINE(12893)				ret = true;
HXLINE(12894)				goto _hx_goto_15;
            			}
HXLINE(12896)			pre = cur;
HXLINE(12897)			cur = cur->next;
            		}
            		_hx_goto_15:;
HXLINE(12899)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,try_remove,return )

void ZNPList_ZPP_InteractionGroup_obj::inlined_remove( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12912_inlined_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(12912)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,pre) = null();
HXDLIN(12912)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = this->head;
HXDLIN(12912)		while(hx::IsNotNull( cur )){
HXLINE(12912)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(12912)				{
HXLINE(12912)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,old);
HXDLIN(12912)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXDLIN(12912)					if (hx::IsNull( pre )) {
HXLINE(12912)						old = this->head;
HXDLIN(12912)						ret = old->next;
HXDLIN(12912)						this->head = ret;
HXDLIN(12912)						if (hx::IsNull( this->head )) {
HXLINE(12912)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(12912)						old = pre->next;
HXDLIN(12912)						ret = old->next;
HXDLIN(12912)						pre->next = ret;
HXDLIN(12912)						if (hx::IsNull( ret )) {
HXLINE(12912)							this->pushmod = true;
            						}
            					}
HXDLIN(12912)					{
HXLINE(12912)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,o) = old;
HXDLIN(12912)						o->elt = null();
HXDLIN(12912)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12912)						::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = o;
            					}
HXDLIN(12912)					this->modified = true;
HXDLIN(12912)					this->length--;
HXDLIN(12912)					this->pushmod = true;
            				}
HXDLIN(12912)				goto _hx_goto_17;
            			}
HXDLIN(12912)			pre = cur;
HXDLIN(12912)			cur = cur->next;
            		}
            		_hx_goto_17:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,inlined_remove,(void))

bool ZNPList_ZPP_InteractionGroup_obj::inlined_try_remove( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12916_inlined_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(12925)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,pre) = null();
HXLINE(12926)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = this->head;
HXLINE(12927)		HX_VARI( bool,ret) = false;
HXLINE(12928)		while(hx::IsNotNull( cur )){
HXLINE(12929)			if (hx::IsEq( cur->elt,obj )) {
HXLINE(12930)				{
HXLINE(12930)					HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,old);
HXDLIN(12930)					HX_VAR_NAME(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret1,"ret");
HXDLIN(12930)					if (hx::IsNull( pre )) {
HXLINE(12930)						old = this->head;
HXDLIN(12930)						ret1 = old->next;
HXDLIN(12930)						this->head = ret1;
HXDLIN(12930)						if (hx::IsNull( this->head )) {
HXLINE(12930)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE(12930)						old = pre->next;
HXDLIN(12930)						ret1 = old->next;
HXDLIN(12930)						pre->next = ret1;
HXDLIN(12930)						if (hx::IsNull( ret1 )) {
HXLINE(12930)							this->pushmod = true;
            						}
            					}
HXDLIN(12930)					{
HXLINE(12930)						HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,o) = old;
HXDLIN(12930)						o->elt = null();
HXDLIN(12930)						o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12930)						::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = o;
            					}
HXDLIN(12930)					this->modified = true;
HXDLIN(12930)					this->length--;
HXDLIN(12930)					this->pushmod = true;
            				}
HXLINE(12931)				ret = true;
HXLINE(12932)				goto _hx_goto_19;
            			}
HXLINE(12934)			pre = cur;
HXLINE(12935)			cur = cur->next;
            		}
            		_hx_goto_19:;
HXLINE(12937)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,inlined_try_remove,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::erase( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup pre){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12940_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE(12940)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,old);
HXDLIN(12940)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXDLIN(12940)		if (hx::IsNull( pre )) {
HXLINE(12940)			old = this->head;
HXDLIN(12940)			ret = old->next;
HXDLIN(12940)			this->head = ret;
HXDLIN(12940)			if (hx::IsNull( this->head )) {
HXLINE(12940)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(12940)			old = pre->next;
HXDLIN(12940)			ret = old->next;
HXDLIN(12940)			pre->next = ret;
HXDLIN(12940)			if (hx::IsNull( ret )) {
HXLINE(12940)				this->pushmod = true;
            			}
            		}
HXDLIN(12940)		{
HXLINE(12940)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,o) = old;
HXDLIN(12940)			o->elt = null();
HXDLIN(12940)			o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12940)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = o;
            		}
HXDLIN(12940)		this->modified = true;
HXDLIN(12940)		this->length--;
HXDLIN(12940)		this->pushmod = true;
HXDLIN(12940)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::inlined_erase( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup pre){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12944_inlined_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE(12953)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,old);
HXLINE(12954)		HX_VAR(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret);
HXLINE(12955)		if (hx::IsNull( pre )) {
HXLINE(12956)			old = this->head;
HXLINE(12957)			ret = old->next;
HXLINE(12958)			this->head = ret;
HXLINE(12959)			if (hx::IsNull( this->head )) {
HXLINE(12959)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE(12962)			old = pre->next;
HXLINE(12963)			ret = old->next;
HXLINE(12964)			pre->next = ret;
HXLINE(12965)			if (hx::IsNull( ret )) {
HXLINE(12965)				this->pushmod = true;
            			}
            		}
HXLINE(12968)		{
HXLINE(12969)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,o) = old;
HXLINE(12978)			o->elt = null();
HXLINE(12979)			o->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXLINE(12980)			::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = o;
            		}
HXLINE(12985)		this->modified = true;
HXLINE(12986)		this->length--;
HXLINE(12987)		this->pushmod = true;
HXLINE(12988)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,inlined_erase,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::splice( ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup pre,int n){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12990_splice)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
            	HX_STACK_ARG(n,"n")
HXLINE(12991)		while(true){
HXLINE(12991)			bool _hx_tmp;
HXDLIN(12991)			n = (n - (int)1);
HXDLIN(12991)			if (((n + (int)1) > (int)0)) {
HXLINE(12991)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE(12991)				_hx_tmp = false;
            			}
HXDLIN(12991)			if (!(_hx_tmp)) {
HXLINE(12991)				goto _hx_goto_23;
            			}
HXDLIN(12991)			this->erase(pre);
            		}
            		_hx_goto_23:;
HXLINE(12992)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZNPList_ZPP_InteractionGroup_obj,splice,return )

void ZNPList_ZPP_InteractionGroup_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_12995_clear)
            	HX_STACK_THIS(this)
HXLINE(12995)		while(hx::IsNotNull( this->head )){
HXLINE(12995)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXDLIN(12995)			this->head = ret->next;
HXDLIN(12995)			{
HXLINE(12995)				ret->elt = null();
HXDLIN(12995)				ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(12995)				::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret;
            			}
HXDLIN(12995)			if (hx::IsNull( this->head )) {
HXLINE(12995)				this->pushmod = true;
            			}
HXDLIN(12995)			this->modified = true;
HXDLIN(12995)			this->length--;
            		}
HXDLIN(12995)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,clear,(void))

void ZNPList_ZPP_InteractionGroup_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13000_inlined_clear)
            	HX_STACK_THIS(this)
HXLINE(13001)		while(hx::IsNotNull( this->head )){
HXLINE(13001)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXDLIN(13001)			this->head = ret->next;
HXDLIN(13001)			{
HXLINE(13001)				ret->elt = null();
HXDLIN(13001)				ret->next = ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool;
HXDLIN(13001)				::zpp_nape::util::ZNPNode_ZPP_InteractionGroup_obj::zpp_pool = ret;
            			}
HXDLIN(13001)			if (hx::IsNull( this->head )) {
HXLINE(13001)				this->pushmod = true;
            			}
HXDLIN(13001)			this->modified = true;
HXDLIN(13001)			this->length--;
            		}
HXLINE(13002)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,inlined_clear,(void))

void ZNPList_ZPP_InteractionGroup_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13005_reverse)
            	HX_STACK_THIS(this)
HXLINE(13006)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = this->head;
HXLINE(13007)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,pre) = null();
HXLINE(13008)		while(hx::IsNotNull( cur )){
HXLINE(13009)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,nx) = cur->next;
HXLINE(13010)			cur->next = pre;
HXLINE(13011)			this->head = cur;
HXLINE(13012)			pre = cur;
HXLINE(13013)			cur = nx;
            		}
HXLINE(13015)		this->modified = true;
HXLINE(13016)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,reverse,(void))

bool ZNPList_ZPP_InteractionGroup_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13021_empty)
            	HX_STACK_THIS(this)
HXLINE(13021)		return hx::IsNull( this->head );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,empty,return )

int ZNPList_ZPP_InteractionGroup_obj::size(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13026_size)
            	HX_STACK_THIS(this)
HXLINE(13026)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,size,return )

bool ZNPList_ZPP_InteractionGroup_obj::has( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13029_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(13029)		HX_VAR( bool,ret);
HXDLIN(13029)		{
HXLINE(13029)			ret = false;
HXDLIN(13029)			{
HXLINE(13029)				HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cx_ite) = this->head;
HXDLIN(13029)				while(hx::IsNotNull( cx_ite )){
HXLINE(13029)					if (hx::IsEq( cx_ite->elt,obj )) {
HXLINE(13029)						ret = true;
HXDLIN(13029)						goto _hx_goto_33;
            					}
HXDLIN(13029)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_33:;
            			}
            		}
HXDLIN(13029)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,has,return )

bool ZNPList_ZPP_InteractionGroup_obj::inlined_has( ::zpp_nape::dynamics::ZPP_InteractionGroup obj){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13033_inlined_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE(13042)		HX_VAR( bool,ret);
HXLINE(13043)		{
HXLINE(13044)			ret = false;
HXLINE(13045)			{
HXLINE(13046)				HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cx_ite) = this->head;
HXLINE(13047)				while(hx::IsNotNull( cx_ite )){
HXLINE(13050)					if (hx::IsEq( cx_ite->elt,obj )) {
HXLINE(13051)						ret = true;
HXLINE(13052)						goto _hx_goto_35;
            					}
HXLINE(13055)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_35:;
            			}
            		}
HXLINE(13059)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,inlined_has,return )

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::front(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13064_front)
            	HX_STACK_THIS(this)
HXLINE(13064)		return this->head->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,front,return )

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::back(){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13066_back)
            	HX_STACK_THIS(this)
HXLINE(13067)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXLINE(13068)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,cur) = ret;
HXLINE(13069)		while(hx::IsNotNull( cur )){
HXLINE(13070)			ret = cur;
HXLINE(13071)			cur = cur->next;
            		}
HXLINE(13073)		return ret->elt;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZNPList_ZPP_InteractionGroup_obj,back,return )

 ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13075_iterator_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE(13084)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,ret) = this->head;
HXLINE(13085)		while(true){
HXLINE(13085)			bool _hx_tmp;
HXDLIN(13085)			ind = (ind - (int)1);
HXDLIN(13085)			if (((ind + (int)1) > (int)0)) {
HXLINE(13085)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE(13085)				_hx_tmp = false;
            			}
HXDLIN(13085)			if (!(_hx_tmp)) {
HXLINE(13085)				goto _hx_goto_40;
            			}
HXDLIN(13085)			ret = ret->next;
            		}
            		_hx_goto_40:;
HXLINE(13086)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,iterator_at,return )

 ::zpp_nape::dynamics::ZPP_InteractionGroup ZNPList_ZPP_InteractionGroup_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_dbd726255778db80_13088_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE(13097)		HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup,it) = this->iterator_at(ind);
HXLINE(13098)		if (hx::IsNotNull( it )) {
HXLINE(13098)			return it->elt;
            		}
            		else {
HXLINE(13098)			return null();
            		}
HXDLIN(13098)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZNPList_ZPP_InteractionGroup_obj,at,return )


hx::ObjectPtr< ZNPList_ZPP_InteractionGroup_obj > ZNPList_ZPP_InteractionGroup_obj::__new() {
	hx::ObjectPtr< ZNPList_ZPP_InteractionGroup_obj > __this = new ZNPList_ZPP_InteractionGroup_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZNPList_ZPP_InteractionGroup_obj > ZNPList_ZPP_InteractionGroup_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZNPList_ZPP_InteractionGroup_obj *__this = (ZNPList_ZPP_InteractionGroup_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPList_ZPP_InteractionGroup_obj), true, "zpp_nape.util.ZNPList_ZPP_InteractionGroup"));
	*(void **)__this = ZNPList_ZPP_InteractionGroup_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZNPList_ZPP_InteractionGroup_obj::ZNPList_ZPP_InteractionGroup_obj()
{
}

void ZNPList_ZPP_InteractionGroup_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZNPList_ZPP_InteractionGroup);
	HX_MARK_MEMBER_NAME(head,"head");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_END_CLASS();
}

void ZNPList_ZPP_InteractionGroup_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(head,"head");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
}

hx::Val ZNPList_ZPP_InteractionGroup_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn()); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { return hx::Val( head); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn()); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn()); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn()); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn()); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn()); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZNPList_ZPP_InteractionGroup_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"head") ) { head=inValue.Cast<  ::zpp_nape::util::ZNPNode_ZPP_InteractionGroup >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZNPList_ZPP_InteractionGroup_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("head","\x20","\x29","\x0b","\x45"));
	outFields->push(HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"));
	outFields->push(HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ZNPList_ZPP_InteractionGroup_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::util::ZNPNode_ZPP_InteractionGroup*/ ,(int)offsetof(ZNPList_ZPP_InteractionGroup_obj,head),HX_HCSTRING("head","\x20","\x29","\x0b","\x45")},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_InteractionGroup_obj,modified),HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16")},
	{hx::fsBool,(int)offsetof(ZNPList_ZPP_InteractionGroup_obj,pushmod),HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75")},
	{hx::fsInt,(int)offsetof(ZNPList_ZPP_InteractionGroup_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZNPList_ZPP_InteractionGroup_obj_sStaticStorageInfo = 0;
#endif

static ::String ZNPList_ZPP_InteractionGroup_obj_sMemberFields[] = {
	HX_HCSTRING("head","\x20","\x29","\x0b","\x45"),
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"),
	HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("setbegin","\x47","\xe3","\x5c","\x2b"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("inlined_add","\x8d","\x4c","\x2e","\x02"),
	HX_HCSTRING("addAll","\x80","\x09","\xfb","\x9e"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("inlined_insert","\x4d","\x34","\x10","\xa7"),
	HX_HCSTRING("pop","\x91","\x5d","\x55","\x00"),
	HX_HCSTRING("inlined_pop","\xfd","\xb7","\x39","\x02"),
	HX_HCSTRING("pop_unsafe","\x54","\x7c","\xec","\x75"),
	HX_HCSTRING("inlined_pop_unsafe","\x68","\x87","\xef","\x15"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("try_remove","\x08","\xb2","\x16","\x8d"),
	HX_HCSTRING("inlined_remove","\x58","\x8d","\xbb","\x0d"),
	HX_HCSTRING("inlined_try_remove","\x1c","\xbd","\x19","\x2d"),
	HX_HCSTRING("erase","\xe6","\xe8","\x1c","\x73"),
	HX_HCSTRING("inlined_erase","\x52","\xb6","\x9d","\xfa"),
	HX_HCSTRING("splice","\x7c","\x85","\x9e","\xbf"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("inlined_clear","\xf9","\x3e","\xdc","\xcf"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("size","\xc1","\xa0","\x53","\x4c"),
	HX_HCSTRING("has","\x5a","\x3f","\x4f","\x00"),
	HX_HCSTRING("inlined_has","\xc6","\x99","\x33","\x02"),
	HX_HCSTRING("front","\xa9","\x18","\x8e","\x06"),
	HX_HCSTRING("back","\x27","\xda","\x10","\x41"),
	HX_HCSTRING("iterator_at","\xe4","\x89","\xd2","\x06"),
	HX_HCSTRING("at","\xf3","\x54","\x00","\x00"),
	::String(null()) };

static void ZNPList_ZPP_InteractionGroup_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZNPList_ZPP_InteractionGroup_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZNPList_ZPP_InteractionGroup_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZNPList_ZPP_InteractionGroup_obj::__mClass,"__mClass");
};

#endif

hx::Class ZNPList_ZPP_InteractionGroup_obj::__mClass;

void ZNPList_ZPP_InteractionGroup_obj::__register()
{
	hx::Object *dummy = new ZNPList_ZPP_InteractionGroup_obj;
	ZNPList_ZPP_InteractionGroup_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.util.ZNPList_ZPP_InteractionGroup","\x42","\x0f","\xe9","\xca");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ZNPList_ZPP_InteractionGroup_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZNPList_ZPP_InteractionGroup_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZNPList_ZPP_InteractionGroup_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZNPList_ZPP_InteractionGroup_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZNPList_ZPP_InteractionGroup_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZNPList_ZPP_InteractionGroup_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
