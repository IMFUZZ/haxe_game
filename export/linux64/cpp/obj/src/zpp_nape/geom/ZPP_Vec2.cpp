// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_174_new,"zpp_nape.geom.ZPP_Vec2","new",0xc50cb486,"zpp_nape.geom.ZPP_Vec2.new","zpp_nape/geom/Vec2.hx",174,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_180_validate,"zpp_nape.geom.ZPP_Vec2","validate",0xb50022b0,"zpp_nape.geom.ZPP_Vec2.validate","zpp_nape/geom/Vec2.hx",180,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_187_invalidate,"zpp_nape.geom.ZPP_Vec2","invalidate",0xb492a615,"zpp_nape.geom.ZPP_Vec2.invalidate","zpp_nape/geom/Vec2.hx",187,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_195_immutable,"zpp_nape.geom.ZPP_Vec2","immutable",0xcf72ace8,"zpp_nape.geom.ZPP_Vec2.immutable","zpp_nape/geom/Vec2.hx",195,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_208_wrapper,"zpp_nape.geom.ZPP_Vec2","wrapper",0xcb99c479,"zpp_nape.geom.ZPP_Vec2.wrapper","zpp_nape/geom/Vec2.hx",208,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_259_free,"zpp_nape.geom.ZPP_Vec2","free",0xa0d159c6,"zpp_nape.geom.ZPP_Vec2.free","zpp_nape/geom/Vec2.hx",259,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_271_alloc,"zpp_nape.geom.ZPP_Vec2","alloc",0x316a5e1b,"zpp_nape.geom.ZPP_Vec2.alloc","zpp_nape/geom/Vec2.hx",271,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_277_elem,"zpp_nape.geom.ZPP_Vec2","elem",0xa02395a9,"zpp_nape.geom.ZPP_Vec2.elem","zpp_nape/geom/Vec2.hx",277,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_282_begin,"zpp_nape.geom.ZPP_Vec2","begin",0xc02ca3cf,"zpp_nape.geom.ZPP_Vec2.begin","zpp_nape/geom/Vec2.hx",282,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_290_setbegin,"zpp_nape.geom.ZPP_Vec2","setbegin",0xdb793561,"zpp_nape.geom.ZPP_Vec2.setbegin","zpp_nape/geom/Vec2.hx",290,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_296_add,"zpp_nape.geom.ZPP_Vec2","add",0xc502d647,"zpp_nape.geom.ZPP_Vec2.add","zpp_nape/geom/Vec2.hx",296,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_300_inlined_add,"zpp_nape.geom.ZPP_Vec2","inlined_add",0x9040c6b3,"zpp_nape.geom.ZPP_Vec2.inlined_add","zpp_nape/geom/Vec2.hx",300,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_328_addAll,"zpp_nape.geom.ZPP_Vec2","addAll",0x6b06c11a,"zpp_nape.geom.ZPP_Vec2.addAll","zpp_nape/geom/Vec2.hx",328,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_338_insert,"zpp_nape.geom.ZPP_Vec2","insert",0x69e8fad3,"zpp_nape.geom.ZPP_Vec2.insert","zpp_nape/geom/Vec2.hx",338,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_342_inlined_insert,"zpp_nape.geom.ZPP_Vec2","inlined_insert",0x6d6415e7,"zpp_nape.geom.ZPP_Vec2.inlined_insert","zpp_nape/geom/Vec2.hx",342,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_368_pop,"zpp_nape.geom.ZPP_Vec2","pop",0xc50e41b7,"zpp_nape.geom.ZPP_Vec2.pop","zpp_nape/geom/Vec2.hx",368,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_372_inlined_pop,"zpp_nape.geom.ZPP_Vec2","inlined_pop",0x904c3223,"zpp_nape.geom.ZPP_Vec2.inlined_pop","zpp_nape/geom/Vec2.hx",372,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_392_pop_unsafe,"zpp_nape.geom.ZPP_Vec2","pop_unsafe",0xa35508ee,"zpp_nape.geom.ZPP_Vec2.pop_unsafe","zpp_nape/geom/Vec2.hx",392,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_396_inlined_pop_unsafe,"zpp_nape.geom.ZPP_Vec2","inlined_pop_unsafe",0xd5fd3e02,"zpp_nape.geom.ZPP_Vec2.inlined_pop_unsafe","zpp_nape/geom/Vec2.hx",396,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_418_remove,"zpp_nape.geom.ZPP_Vec2","remove",0xd09453de,"zpp_nape.geom.ZPP_Vec2.remove","zpp_nape/geom/Vec2.hx",418,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_420_try_remove,"zpp_nape.geom.ZPP_Vec2","try_remove",0xba7f3ea2,"zpp_nape.geom.ZPP_Vec2.try_remove","zpp_nape/geom/Vec2.hx",420,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_454_inlined_remove,"zpp_nape.geom.ZPP_Vec2","inlined_remove",0xd40f6ef2,"zpp_nape.geom.ZPP_Vec2.inlined_remove","zpp_nape/geom/Vec2.hx",454,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_458_inlined_try_remove,"zpp_nape.geom.ZPP_Vec2","inlined_try_remove",0xed2773b6,"zpp_nape.geom.ZPP_Vec2.inlined_try_remove","zpp_nape/geom/Vec2.hx",458,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_482_erase,"zpp_nape.geom.ZPP_Vec2","erase",0x82f3a28c,"zpp_nape.geom.ZPP_Vec2.erase","zpp_nape/geom/Vec2.hx",482,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_486_inlined_erase,"zpp_nape.geom.ZPP_Vec2","inlined_erase",0x0ddf85f8,"zpp_nape.geom.ZPP_Vec2.inlined_erase","zpp_nape/geom/Vec2.hx",486,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_518_splice,"zpp_nape.geom.ZPP_Vec2","splice",0x8baa3d16,"zpp_nape.geom.ZPP_Vec2.splice","zpp_nape/geom/Vec2.hx",518,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_523_clear,"zpp_nape.geom.ZPP_Vec2","clear",0x58322b33,"zpp_nape.geom.ZPP_Vec2.clear","zpp_nape/geom/Vec2.hx",523,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_528_inlined_clear,"zpp_nape.geom.ZPP_Vec2","inlined_clear",0xe31e0e9f,"zpp_nape.geom.ZPP_Vec2.inlined_clear","zpp_nape/geom/Vec2.hx",528,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_533_reverse,"zpp_nape.geom.ZPP_Vec2","reverse",0xd9312848,"zpp_nape.geom.ZPP_Vec2.reverse","zpp_nape/geom/Vec2.hx",533,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_549_empty,"zpp_nape.geom.ZPP_Vec2","empty",0x7fb0f433,"zpp_nape.geom.ZPP_Vec2.empty","zpp_nape/geom/Vec2.hx",549,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_554_size,"zpp_nape.geom.ZPP_Vec2","size",0xa9625ddb,"zpp_nape.geom.ZPP_Vec2.size","zpp_nape/geom/Vec2.hx",554,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_557_has,"zpp_nape.geom.ZPP_Vec2","has",0xc5082380,"zpp_nape.geom.ZPP_Vec2.has","zpp_nape/geom/Vec2.hx",557,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_561_inlined_has,"zpp_nape.geom.ZPP_Vec2","inlined_has",0x904613ec,"zpp_nape.geom.ZPP_Vec2.inlined_has","zpp_nape/geom/Vec2.hx",561,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_592_front,"zpp_nape.geom.ZPP_Vec2","front",0x1664d24f,"zpp_nape.geom.ZPP_Vec2.front","zpp_nape/geom/Vec2.hx",592,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_594_back,"zpp_nape.geom.ZPP_Vec2","back",0x9e1f9741,"zpp_nape.geom.ZPP_Vec2.back","zpp_nape/geom/Vec2.hx",594,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_603_iterator_at,"zpp_nape.geom.ZPP_Vec2","iterator_at",0x94e5040a,"zpp_nape.geom.ZPP_Vec2.iterator_at","zpp_nape/geom/Vec2.hx",603,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_616_at,"zpp_nape.geom.ZPP_Vec2","at",0x18fdb78d,"zpp_nape.geom.ZPP_Vec2.at","zpp_nape/geom/Vec2.hx",616,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_677_copy,"zpp_nape.geom.ZPP_Vec2","copy",0x9ed378cf,"zpp_nape.geom.ZPP_Vec2.copy","zpp_nape/geom/Vec2.hx",677,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_680_toString,"zpp_nape.geom.ZPP_Vec2","toString",0xe88b22c6,"zpp_nape.geom.ZPP_Vec2.toString","zpp_nape/geom/Vec2.hx",680,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_632_get,"zpp_nape.geom.ZPP_Vec2","get",0xc50764bc,"zpp_nape.geom.ZPP_Vec2.get","zpp_nape/geom/Vec2.hx",632,0x8290c56f)
HX_DEFINE_STACK_FRAME(_hx_pos_f8877d11977fa1fe_233_boot,"zpp_nape.geom.ZPP_Vec2","boot",0x9e2a414c,"zpp_nape.geom.ZPP_Vec2.boot","zpp_nape/geom/Vec2.hx",233,0x8290c56f)
namespace zpp_nape{
namespace geom{

void ZPP_Vec2_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_174_new)
            	HX_STACK_THIS(this)
HXLINE( 629)		this->y = ((Float)0.0);
HXLINE( 628)		this->x = ((Float)0.0);
HXLINE( 287)		this->length = (int)0;
HXLINE( 286)		this->pushmod = false;
HXLINE( 285)		this->modified = false;
HXLINE( 284)		this->_inuse = false;
HXLINE( 273)		this->next = null();
HXLINE( 232)		this->weak = false;
HXLINE( 205)		this->outer = null();
HXLINE( 192)		this->_isimmutable = null();
HXLINE( 191)		this->_immutable = false;
HXLINE( 176)		this->_validate = null();
HXLINE( 175)		this->_invalidate = null();
            	}

Dynamic ZPP_Vec2_obj::__CreateEmpty() { return new ZPP_Vec2_obj; }

void *ZPP_Vec2_obj::_hx_vtable = 0;

Dynamic ZPP_Vec2_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZPP_Vec2_obj > _hx_result = new ZPP_Vec2_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ZPP_Vec2_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1c1a4770;
}

void ZPP_Vec2_obj::validate(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_180_validate)
            	HX_STACK_THIS(this)
HXLINE( 180)		if (hx::IsNotNull( this->_validate )) {
HXLINE( 181)			this->_validate();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,validate,(void))

void ZPP_Vec2_obj::invalidate(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_187_invalidate)
            	HX_STACK_THIS(this)
HXLINE( 187)		if (hx::IsNotNull( this->_invalidate )) {
HXLINE( 188)			this->_invalidate(hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,invalidate,(void))

void ZPP_Vec2_obj::immutable(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_195_immutable)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,immutable,(void))

 ::nape::geom::Vec2 ZPP_Vec2_obj::wrapper(){
            	HX_GC_STACKFRAME(&_hx_pos_f8877d11977fa1fe_208_wrapper)
            	HX_STACK_THIS(this)
HXLINE( 209)		if (hx::IsNull( this->outer )) {
HXLINE( 210)			this->outer =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 211)			{
HXLINE( 212)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,o) = this->outer->zpp_inner;
HXLINE( 221)				{
HXLINE( 221)					if (hx::IsNotNull( o->outer )) {
HXLINE( 221)						o->outer->zpp_inner = null();
HXDLIN( 221)						o->outer = null();
            					}
HXDLIN( 221)					o->_isimmutable = null();
HXDLIN( 221)					o->_validate = null();
HXDLIN( 221)					o->_invalidate = null();
            				}
HXLINE( 222)				o->next = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXLINE( 223)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = o;
            			}
HXLINE( 228)			this->outer->zpp_inner = hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 230)		return this->outer;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,wrapper,return )

void ZPP_Vec2_obj::free(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_259_free)
            	HX_STACK_THIS(this)
HXLINE( 260)		if (hx::IsNotNull( this->outer )) {
HXLINE( 261)			this->outer->zpp_inner = null();
HXLINE( 262)			this->outer = null();
            		}
HXLINE( 264)		this->_isimmutable = null();
HXLINE( 265)		this->_validate = null();
HXLINE( 266)		this->_invalidate = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,free,(void))

void ZPP_Vec2_obj::alloc(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_271_alloc)
            	HX_STACK_THIS(this)
HXLINE( 271)		this->weak = false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,alloc,(void))

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::elem(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_277_elem)
            	HX_STACK_THIS(this)
HXLINE( 277)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,elem,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::begin(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_282_begin)
            	HX_STACK_THIS(this)
HXLINE( 282)		return this->next;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,begin,return )

void ZPP_Vec2_obj::setbegin( ::zpp_nape::geom::ZPP_Vec2 i){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_290_setbegin)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(i,"i")
HXLINE( 291)		this->next = i;
HXLINE( 292)		this->modified = true;
HXLINE( 293)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,setbegin,(void))

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::add( ::zpp_nape::geom::ZPP_Vec2 o){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_296_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE( 296)		o->_inuse = true;
HXDLIN( 296)		o->next = this->next;
HXDLIN( 296)		this->next = o;
HXDLIN( 296)		this->modified = true;
HXDLIN( 296)		this->length++;
HXDLIN( 296)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,add,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::inlined_add( ::zpp_nape::geom::ZPP_Vec2 o){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_300_inlined_add)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(o,"o")
HXLINE( 310)		o->_inuse = true;
HXLINE( 313)		o->next = this->next;
HXLINE( 314)		this->next = o;
HXLINE( 315)		this->modified = true;
HXLINE( 316)		this->length++;
HXLINE( 317)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,inlined_add,return )

void ZPP_Vec2_obj::addAll( ::zpp_nape::geom::ZPP_Vec2 x){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_328_addAll)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
HXLINE( 329)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cx_ite) = x->next;
HXLINE( 330)		while(hx::IsNotNull( cx_ite )){
HXLINE( 332)			this->add(cx_ite);
HXLINE( 333)			cx_ite = cx_ite->next;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,addAll,(void))

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::insert( ::zpp_nape::geom::ZPP_Vec2 cur, ::zpp_nape::geom::ZPP_Vec2 o){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_338_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE( 338)		o->_inuse = true;
HXDLIN( 338)		if (hx::IsNull( cur )) {
HXLINE( 338)			o->next = this->next;
HXDLIN( 338)			this->next = o;
            		}
            		else {
HXLINE( 338)			o->next = cur->next;
HXDLIN( 338)			cur->next = o;
            		}
HXDLIN( 338)		this->pushmod = (this->modified = true);
HXDLIN( 338)		this->length++;
HXDLIN( 338)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZPP_Vec2_obj,insert,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::inlined_insert( ::zpp_nape::geom::ZPP_Vec2 cur, ::zpp_nape::geom::ZPP_Vec2 o){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_342_inlined_insert)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(cur,"cur")
            	HX_STACK_ARG(o,"o")
HXLINE( 352)		o->_inuse = true;
HXLINE( 355)		if (hx::IsNull( cur )) {
HXLINE( 356)			o->next = this->next;
HXLINE( 357)			this->next = o;
            		}
            		else {
HXLINE( 360)			o->next = cur->next;
HXLINE( 361)			cur->next = o;
            		}
HXLINE( 363)		this->pushmod = (this->modified = true);
HXLINE( 364)		this->length++;
HXLINE( 365)		return o;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZPP_Vec2_obj,inlined_insert,return )

void ZPP_Vec2_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_368_pop)
            	HX_STACK_THIS(this)
HXLINE( 368)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,ret) = this->next;
HXDLIN( 368)		this->next = ret->next;
HXDLIN( 368)		ret->_inuse = false;
HXDLIN( 368)		if (hx::IsNull( this->next )) {
HXLINE( 368)			this->pushmod = true;
            		}
HXDLIN( 368)		this->modified = true;
HXDLIN( 368)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,pop,(void))

void ZPP_Vec2_obj::inlined_pop(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_372_inlined_pop)
            	HX_STACK_THIS(this)
HXLINE( 381)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,ret) = this->next;
HXLINE( 382)		this->next = ret->next;
HXLINE( 384)		ret->_inuse = false;
HXLINE( 387)		if (hx::IsNull( this->next )) {
HXLINE( 387)			this->pushmod = true;
            		}
HXLINE( 388)		this->modified = true;
HXLINE( 389)		this->length--;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,inlined_pop,(void))

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_392_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE( 392)		 ::zpp_nape::geom::ZPP_Vec2 _this = this->next;
HXDLIN( 392)		this->pop();
HXDLIN( 392)		return _this;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,pop_unsafe,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::inlined_pop_unsafe(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_396_inlined_pop_unsafe)
            	HX_STACK_THIS(this)
HXLINE( 405)		 ::zpp_nape::geom::ZPP_Vec2 _this = this->next;
HXLINE( 406)		this->pop();
HXLINE( 407)		return _this;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,inlined_pop_unsafe,return )

void ZPP_Vec2_obj::remove( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_418_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 418)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,pre) = null();
HXDLIN( 418)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = this->next;
HXDLIN( 418)		while(hx::IsNotNull( cur )){
HXLINE( 418)			if (hx::IsEq( cur,obj )) {
HXLINE( 418)				{
HXLINE( 418)					HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,old);
HXDLIN( 418)					HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXDLIN( 418)					if (hx::IsNull( pre )) {
HXLINE( 418)						old = this->next;
HXDLIN( 418)						ret = old->next;
HXDLIN( 418)						this->next = ret;
HXDLIN( 418)						if (hx::IsNull( this->next )) {
HXLINE( 418)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE( 418)						old = pre->next;
HXDLIN( 418)						ret = old->next;
HXDLIN( 418)						pre->next = ret;
HXDLIN( 418)						if (hx::IsNull( ret )) {
HXLINE( 418)							this->pushmod = true;
            						}
            					}
HXDLIN( 418)					old->_inuse = false;
HXDLIN( 418)					this->modified = true;
HXDLIN( 418)					this->length--;
HXDLIN( 418)					this->pushmod = true;
            				}
HXDLIN( 418)				goto _hx_goto_20;
            			}
HXDLIN( 418)			pre = cur;
HXDLIN( 418)			cur = cur->next;
            		}
            		_hx_goto_20:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,remove,(void))

bool ZPP_Vec2_obj::try_remove( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_420_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 429)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,pre) = null();
HXLINE( 430)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = this->next;
HXLINE( 431)		HX_VARI( bool,ret) = false;
HXLINE( 432)		while(hx::IsNotNull( cur )){
HXLINE( 433)			if (hx::IsEq( cur,obj )) {
HXLINE( 434)				this->erase(pre);
HXLINE( 435)				ret = true;
HXLINE( 436)				goto _hx_goto_22;
            			}
HXLINE( 438)			pre = cur;
HXLINE( 439)			cur = cur->next;
            		}
            		_hx_goto_22:;
HXLINE( 441)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,try_remove,return )

void ZPP_Vec2_obj::inlined_remove( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_454_inlined_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 454)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,pre) = null();
HXDLIN( 454)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = this->next;
HXDLIN( 454)		while(hx::IsNotNull( cur )){
HXLINE( 454)			if (hx::IsEq( cur,obj )) {
HXLINE( 454)				{
HXLINE( 454)					HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,old);
HXDLIN( 454)					HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXDLIN( 454)					if (hx::IsNull( pre )) {
HXLINE( 454)						old = this->next;
HXDLIN( 454)						ret = old->next;
HXDLIN( 454)						this->next = ret;
HXDLIN( 454)						if (hx::IsNull( this->next )) {
HXLINE( 454)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE( 454)						old = pre->next;
HXDLIN( 454)						ret = old->next;
HXDLIN( 454)						pre->next = ret;
HXDLIN( 454)						if (hx::IsNull( ret )) {
HXLINE( 454)							this->pushmod = true;
            						}
            					}
HXDLIN( 454)					old->_inuse = false;
HXDLIN( 454)					this->modified = true;
HXDLIN( 454)					this->length--;
HXDLIN( 454)					this->pushmod = true;
            				}
HXDLIN( 454)				goto _hx_goto_24;
            			}
HXDLIN( 454)			pre = cur;
HXDLIN( 454)			cur = cur->next;
            		}
            		_hx_goto_24:;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,inlined_remove,(void))

bool ZPP_Vec2_obj::inlined_try_remove( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_458_inlined_try_remove)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 467)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,pre) = null();
HXLINE( 468)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = this->next;
HXLINE( 469)		HX_VARI( bool,ret) = false;
HXLINE( 470)		while(hx::IsNotNull( cur )){
HXLINE( 471)			if (hx::IsEq( cur,obj )) {
HXLINE( 472)				{
HXLINE( 472)					HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,old);
HXDLIN( 472)					HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN( 472)					if (hx::IsNull( pre )) {
HXLINE( 472)						old = this->next;
HXDLIN( 472)						ret1 = old->next;
HXDLIN( 472)						this->next = ret1;
HXDLIN( 472)						if (hx::IsNull( this->next )) {
HXLINE( 472)							this->pushmod = true;
            						}
            					}
            					else {
HXLINE( 472)						old = pre->next;
HXDLIN( 472)						ret1 = old->next;
HXDLIN( 472)						pre->next = ret1;
HXDLIN( 472)						if (hx::IsNull( ret1 )) {
HXLINE( 472)							this->pushmod = true;
            						}
            					}
HXDLIN( 472)					old->_inuse = false;
HXDLIN( 472)					this->modified = true;
HXDLIN( 472)					this->length--;
HXDLIN( 472)					this->pushmod = true;
            				}
HXLINE( 473)				ret = true;
HXLINE( 474)				goto _hx_goto_26;
            			}
HXLINE( 476)			pre = cur;
HXLINE( 477)			cur = cur->next;
            		}
            		_hx_goto_26:;
HXLINE( 479)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,inlined_try_remove,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::erase( ::zpp_nape::geom::ZPP_Vec2 pre){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_482_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE( 482)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,old);
HXDLIN( 482)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXDLIN( 482)		if (hx::IsNull( pre )) {
HXLINE( 482)			old = this->next;
HXDLIN( 482)			ret = old->next;
HXDLIN( 482)			this->next = ret;
HXDLIN( 482)			if (hx::IsNull( this->next )) {
HXLINE( 482)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE( 482)			old = pre->next;
HXDLIN( 482)			ret = old->next;
HXDLIN( 482)			pre->next = ret;
HXDLIN( 482)			if (hx::IsNull( ret )) {
HXLINE( 482)				this->pushmod = true;
            			}
            		}
HXDLIN( 482)		old->_inuse = false;
HXDLIN( 482)		this->modified = true;
HXDLIN( 482)		this->length--;
HXDLIN( 482)		this->pushmod = true;
HXDLIN( 482)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,erase,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::inlined_erase( ::zpp_nape::geom::ZPP_Vec2 pre){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_486_inlined_erase)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
HXLINE( 495)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,old);
HXLINE( 496)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXLINE( 497)		if (hx::IsNull( pre )) {
HXLINE( 498)			old = this->next;
HXLINE( 499)			ret = old->next;
HXLINE( 500)			this->next = ret;
HXLINE( 501)			if (hx::IsNull( this->next )) {
HXLINE( 501)				this->pushmod = true;
            			}
            		}
            		else {
HXLINE( 504)			old = pre->next;
HXLINE( 505)			ret = old->next;
HXLINE( 506)			pre->next = ret;
HXLINE( 507)			if (hx::IsNull( ret )) {
HXLINE( 507)				this->pushmod = true;
            			}
            		}
HXLINE( 510)		old->_inuse = false;
HXLINE( 513)		this->modified = true;
HXLINE( 514)		this->length--;
HXLINE( 515)		this->pushmod = true;
HXLINE( 516)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,inlined_erase,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::splice( ::zpp_nape::geom::ZPP_Vec2 pre,int n){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_518_splice)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(pre,"pre")
            	HX_STACK_ARG(n,"n")
HXLINE( 519)		while(true){
HXLINE( 519)			bool _hx_tmp;
HXDLIN( 519)			n = (n - (int)1);
HXDLIN( 519)			if (((n + (int)1) > (int)0)) {
HXLINE( 519)				_hx_tmp = hx::IsNotNull( pre->next );
            			}
            			else {
HXLINE( 519)				_hx_tmp = false;
            			}
HXDLIN( 519)			if (!(_hx_tmp)) {
HXLINE( 519)				goto _hx_goto_30;
            			}
HXDLIN( 519)			this->erase(pre);
            		}
            		_hx_goto_30:;
HXLINE( 520)		return pre->next;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ZPP_Vec2_obj,splice,return )

void ZPP_Vec2_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_523_clear)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,clear,(void))

void ZPP_Vec2_obj::inlined_clear(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_528_inlined_clear)
            	HX_STACK_THIS(this)
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,inlined_clear,(void))

void ZPP_Vec2_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_533_reverse)
            	HX_STACK_THIS(this)
HXLINE( 534)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = this->next;
HXLINE( 535)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,pre) = null();
HXLINE( 536)		while(hx::IsNotNull( cur )){
HXLINE( 537)			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,nx) = cur->next;
HXLINE( 538)			cur->next = pre;
HXLINE( 539)			this->next = cur;
HXLINE( 540)			pre = cur;
HXLINE( 541)			cur = nx;
            		}
HXLINE( 543)		this->modified = true;
HXLINE( 544)		this->pushmod = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,reverse,(void))

bool ZPP_Vec2_obj::empty(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_549_empty)
            	HX_STACK_THIS(this)
HXLINE( 549)		return hx::IsNull( this->next );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,empty,return )

int ZPP_Vec2_obj::size(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_554_size)
            	HX_STACK_THIS(this)
HXLINE( 554)		return this->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,size,return )

bool ZPP_Vec2_obj::has( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_557_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 557)		HX_VAR( bool,ret);
HXDLIN( 557)		{
HXLINE( 557)			ret = false;
HXDLIN( 557)			{
HXLINE( 557)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cx_ite) = this->next;
HXDLIN( 557)				while(hx::IsNotNull( cx_ite )){
HXLINE( 557)					if (hx::IsEq( cx_ite,obj )) {
HXLINE( 557)						ret = true;
HXDLIN( 557)						goto _hx_goto_38;
            					}
HXDLIN( 557)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_38:;
            			}
            		}
HXDLIN( 557)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,has,return )

bool ZPP_Vec2_obj::inlined_has( ::zpp_nape::geom::ZPP_Vec2 obj){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_561_inlined_has)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(obj,"obj")
HXLINE( 570)		HX_VAR( bool,ret);
HXLINE( 571)		{
HXLINE( 572)			ret = false;
HXLINE( 573)			{
HXLINE( 574)				HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cx_ite) = this->next;
HXLINE( 575)				while(hx::IsNotNull( cx_ite )){
HXLINE( 578)					if (hx::IsEq( cx_ite,obj )) {
HXLINE( 579)						ret = true;
HXLINE( 580)						goto _hx_goto_40;
            					}
HXLINE( 583)					cx_ite = cx_ite->next;
            				}
            				_hx_goto_40:;
            			}
            		}
HXLINE( 587)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,inlined_has,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::front(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_592_front)
            	HX_STACK_THIS(this)
HXLINE( 592)		return this->next;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,front,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::back(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_594_back)
            	HX_STACK_THIS(this)
HXLINE( 595)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,ret) = this->next;
HXLINE( 596)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cur) = ret;
HXLINE( 597)		while(hx::IsNotNull( cur )){
HXLINE( 598)			ret = cur;
HXLINE( 599)			cur = cur->next;
            		}
HXLINE( 601)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,back,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::iterator_at(int ind){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_603_iterator_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE( 612)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,ret) = this->next;
HXLINE( 613)		while(true){
HXLINE( 613)			bool _hx_tmp;
HXDLIN( 613)			ind = (ind - (int)1);
HXDLIN( 613)			if (((ind + (int)1) > (int)0)) {
HXLINE( 613)				_hx_tmp = hx::IsNotNull( ret );
            			}
            			else {
HXLINE( 613)				_hx_tmp = false;
            			}
HXDLIN( 613)			if (!(_hx_tmp)) {
HXLINE( 613)				goto _hx_goto_45;
            			}
HXDLIN( 613)			ret = ret->next;
            		}
            		_hx_goto_45:;
HXLINE( 614)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,iterator_at,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::at(int ind){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_616_at)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(ind,"ind")
HXLINE( 625)		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,it) = this->iterator_at(ind);
HXLINE( 626)		if (hx::IsNotNull( it )) {
HXLINE( 626)			return it;
            		}
            		else {
HXLINE( 626)			return null();
            		}
HXDLIN( 626)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_Vec2_obj,at,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_f8877d11977fa1fe_677_copy)
            	HX_STACK_THIS(this)
HXLINE( 677)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXDLIN( 677)		{
HXLINE( 677)			if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 677)				ret =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            			}
            			else {
HXLINE( 677)				ret = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN( 677)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret->next;
HXDLIN( 677)				ret->next = null();
            			}
HXDLIN( 677)			ret->weak = false;
            		}
HXDLIN( 677)		ret->_immutable = false;
HXDLIN( 677)		{
HXLINE( 677)			ret->x = this->x;
HXDLIN( 677)			ret->y = this->y;
            		}
HXDLIN( 677)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,copy,return )

::String ZPP_Vec2_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_680_toString)
            	HX_STACK_THIS(this)
HXLINE( 680)		return ((((HX_("{ x: ",f9,6e,cb,e7) + this->x) + HX_(" y: ",3f,d7,82,15)) + this->y) + HX_(" }",5d,1c,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ZPP_Vec2_obj,toString,return )

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::zpp_pool;

 ::zpp_nape::geom::ZPP_Vec2 ZPP_Vec2_obj::get(Float x,Float y,hx::Null< bool >  __o_immutable){
bool immutable = __o_immutable.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_f8877d11977fa1fe_632_get)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(immutable,"immutable")
HXLINE( 633)		HX_VAR(  ::zpp_nape::geom::ZPP_Vec2,ret);
HXLINE( 634)		{
HXLINE( 635)			if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE( 636)				ret =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            			}
            			else {
HXLINE( 642)				ret = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXLINE( 643)				::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret->next;
HXLINE( 644)				ret->next = null();
            			}
HXLINE( 649)			ret->weak = false;
            		}
HXLINE( 651)		ret->_immutable = immutable;
HXLINE( 652)		{
HXLINE( 653)			ret->x = x;
HXLINE( 654)			ret->y = y;
            		}
HXLINE( 672)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ZPP_Vec2_obj,get,return )


hx::ObjectPtr< ZPP_Vec2_obj > ZPP_Vec2_obj::__new() {
	hx::ObjectPtr< ZPP_Vec2_obj > __this = new ZPP_Vec2_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ZPP_Vec2_obj > ZPP_Vec2_obj::__alloc(hx::Ctx *_hx_ctx) {
	ZPP_Vec2_obj *__this = (ZPP_Vec2_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZPP_Vec2_obj), true, "zpp_nape.geom.ZPP_Vec2"));
	*(void **)__this = ZPP_Vec2_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ZPP_Vec2_obj::ZPP_Vec2_obj()
{
}

void ZPP_Vec2_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZPP_Vec2);
	HX_MARK_MEMBER_NAME(_invalidate,"_invalidate");
	HX_MARK_MEMBER_NAME(_validate,"_validate");
	HX_MARK_MEMBER_NAME(_immutable,"_immutable");
	HX_MARK_MEMBER_NAME(_isimmutable,"_isimmutable");
	HX_MARK_MEMBER_NAME(outer,"outer");
	HX_MARK_MEMBER_NAME(weak,"weak");
	HX_MARK_MEMBER_NAME(next,"next");
	HX_MARK_MEMBER_NAME(_inuse,"_inuse");
	HX_MARK_MEMBER_NAME(modified,"modified");
	HX_MARK_MEMBER_NAME(pushmod,"pushmod");
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_END_CLASS();
}

void ZPP_Vec2_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_invalidate,"_invalidate");
	HX_VISIT_MEMBER_NAME(_validate,"_validate");
	HX_VISIT_MEMBER_NAME(_immutable,"_immutable");
	HX_VISIT_MEMBER_NAME(_isimmutable,"_isimmutable");
	HX_VISIT_MEMBER_NAME(outer,"outer");
	HX_VISIT_MEMBER_NAME(weak,"weak");
	HX_VISIT_MEMBER_NAME(next,"next");
	HX_VISIT_MEMBER_NAME(_inuse,"_inuse");
	HX_VISIT_MEMBER_NAME(modified,"modified");
	HX_VISIT_MEMBER_NAME(pushmod,"pushmod");
	HX_VISIT_MEMBER_NAME(length,"length");
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
}

hx::Val ZPP_Vec2_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"at") ) { return hx::Val( at_dyn()); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn()); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn()); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn()); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"weak") ) { return hx::Val( weak); }
		if (HX_FIELD_EQ(inName,"free") ) { return hx::Val( free_dyn()); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next); }
		if (HX_FIELD_EQ(inName,"elem") ) { return hx::Val( elem_dyn()); }
		if (HX_FIELD_EQ(inName,"size") ) { return hx::Val( size_dyn()); }
		if (HX_FIELD_EQ(inName,"back") ) { return hx::Val( back_dyn()); }
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn()); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"outer") ) { return hx::Val( outer); }
		if (HX_FIELD_EQ(inName,"alloc") ) { return hx::Val( alloc_dyn()); }
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn()); }
		if (HX_FIELD_EQ(inName,"erase") ) { return hx::Val( erase_dyn()); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn()); }
		if (HX_FIELD_EQ(inName,"empty") ) { return hx::Val( empty_dyn()); }
		if (HX_FIELD_EQ(inName,"front") ) { return hx::Val( front_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_inuse") ) { return hx::Val( _inuse); }
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn()); }
		if (HX_FIELD_EQ(inName,"insert") ) { return hx::Val( insert_dyn()); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn()); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"wrapper") ) { return hx::Val( wrapper_dyn()); }
		if (HX_FIELD_EQ(inName,"pushmod") ) { return hx::Val( pushmod); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"validate") ) { return hx::Val( validate_dyn()); }
		if (HX_FIELD_EQ(inName,"modified") ) { return hx::Val( modified); }
		if (HX_FIELD_EQ(inName,"setbegin") ) { return hx::Val( setbegin_dyn()); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_validate") ) { return hx::Val( _validate); }
		if (HX_FIELD_EQ(inName,"immutable") ) { return hx::Val( immutable_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"invalidate") ) { return hx::Val( invalidate_dyn()); }
		if (HX_FIELD_EQ(inName,"_immutable") ) { return hx::Val( _immutable); }
		if (HX_FIELD_EQ(inName,"pop_unsafe") ) { return hx::Val( pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"try_remove") ) { return hx::Val( try_remove_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_invalidate") ) { return hx::Val( _invalidate); }
		if (HX_FIELD_EQ(inName,"inlined_add") ) { return hx::Val( inlined_add_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_pop") ) { return hx::Val( inlined_pop_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_has") ) { return hx::Val( inlined_has_dyn()); }
		if (HX_FIELD_EQ(inName,"iterator_at") ) { return hx::Val( iterator_at_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_isimmutable") ) { return hx::Val( _isimmutable); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"inlined_erase") ) { return hx::Val( inlined_erase_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_clear") ) { return hx::Val( inlined_clear_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inlined_insert") ) { return hx::Val( inlined_insert_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_remove") ) { return hx::Val( inlined_remove_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"inlined_pop_unsafe") ) { return hx::Val( inlined_pop_unsafe_dyn()); }
		if (HX_FIELD_EQ(inName,"inlined_try_remove") ) { return hx::Val( inlined_try_remove_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool ZPP_Vec2_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { outValue = zpp_pool; return true; }
	}
	return false;
}

hx::Val ZPP_Vec2_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"weak") ) { weak=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"next") ) { next=inValue.Cast<  ::zpp_nape::geom::ZPP_Vec2 >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"outer") ) { outer=inValue.Cast<  ::nape::geom::Vec2 >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_inuse") ) { _inuse=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"pushmod") ) { pushmod=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"modified") ) { modified=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_validate") ) { _validate=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_immutable") ) { _immutable=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_invalidate") ) { _invalidate=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_isimmutable") ) { _isimmutable=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ZPP_Vec2_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"zpp_pool") ) { zpp_pool=ioValue.Cast<  ::zpp_nape::geom::ZPP_Vec2 >(); return true; }
	}
	return false;
}

void ZPP_Vec2_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_immutable","\x03","\xa4","\x69","\xc2"));
	outFields->push(HX_HCSTRING("outer","\x7b","\xb8","\x28","\x37"));
	outFields->push(HX_HCSTRING("weak","\x78","\x5c","\xf5","\x4e"));
	outFields->push(HX_HCSTRING("next","\xf3","\x84","\x02","\x49"));
	outFields->push(HX_HCSTRING("_inuse","\xc3","\xd4","\x08","\xba"));
	outFields->push(HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"));
	outFields->push(HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"));
	outFields->push(HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ZPP_Vec2_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ZPP_Vec2_obj,_invalidate),HX_HCSTRING("_invalidate","\x9a","\xe6","\xb3","\x59")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ZPP_Vec2_obj,_validate),HX_HCSTRING("_validate","\xf5","\xc7","\x79","\x4c")},
	{hx::fsBool,(int)offsetof(ZPP_Vec2_obj,_immutable),HX_HCSTRING("_immutable","\x03","\xa4","\x69","\xc2")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ZPP_Vec2_obj,_isimmutable),HX_HCSTRING("_isimmutable","\x19","\xad","\x7e","\x09")},
	{hx::fsObject /*::nape::geom::Vec2*/ ,(int)offsetof(ZPP_Vec2_obj,outer),HX_HCSTRING("outer","\x7b","\xb8","\x28","\x37")},
	{hx::fsBool,(int)offsetof(ZPP_Vec2_obj,weak),HX_HCSTRING("weak","\x78","\x5c","\xf5","\x4e")},
	{hx::fsObject /*::zpp_nape::geom::ZPP_Vec2*/ ,(int)offsetof(ZPP_Vec2_obj,next),HX_HCSTRING("next","\xf3","\x84","\x02","\x49")},
	{hx::fsBool,(int)offsetof(ZPP_Vec2_obj,_inuse),HX_HCSTRING("_inuse","\xc3","\xd4","\x08","\xba")},
	{hx::fsBool,(int)offsetof(ZPP_Vec2_obj,modified),HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16")},
	{hx::fsBool,(int)offsetof(ZPP_Vec2_obj,pushmod),HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75")},
	{hx::fsInt,(int)offsetof(ZPP_Vec2_obj,length),HX_HCSTRING("length","\xe6","\x94","\x07","\x9f")},
	{hx::fsFloat,(int)offsetof(ZPP_Vec2_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(ZPP_Vec2_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ZPP_Vec2_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::zpp_nape::geom::ZPP_Vec2*/ ,(void *) &ZPP_Vec2_obj::zpp_pool,HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ZPP_Vec2_obj_sMemberFields[] = {
	HX_HCSTRING("_invalidate","\x9a","\xe6","\xb3","\x59"),
	HX_HCSTRING("_validate","\xf5","\xc7","\x79","\x4c"),
	HX_HCSTRING("validate","\x96","\xd0","\xe3","\x04"),
	HX_HCSTRING("invalidate","\x7b","\x19","\x2a","\x87"),
	HX_HCSTRING("_immutable","\x03","\xa4","\x69","\xc2"),
	HX_HCSTRING("_isimmutable","\x19","\xad","\x7e","\x09"),
	HX_HCSTRING("immutable","\x42","\x28","\xc7","\x66"),
	HX_HCSTRING("outer","\x7b","\xb8","\x28","\x37"),
	HX_HCSTRING("wrapper","\x53","\xd5","\x64","\x0d"),
	HX_HCSTRING("weak","\x78","\x5c","\xf5","\x4e"),
	HX_HCSTRING("free","\xac","\x9c","\xc2","\x43"),
	HX_HCSTRING("alloc","\x75","\xa4","\x93","\x21"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("elem","\x8f","\xd8","\x14","\x43"),
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("_inuse","\xc3","\xd4","\x08","\xba"),
	HX_HCSTRING("modified","\x49","\xdb","\xc7","\x16"),
	HX_HCSTRING("pushmod","\x28","\x29","\x4b","\x75"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("setbegin","\x47","\xe3","\x5c","\x2b"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("inlined_add","\x8d","\x4c","\x2e","\x02"),
	HX_HCSTRING("addAll","\x80","\x09","\xfb","\x9e"),
	HX_HCSTRING("insert","\x39","\x43","\xdd","\x9d"),
	HX_HCSTRING("inlined_insert","\x4d","\x34","\x10","\xa7"),
	HX_HCSTRING("pop","\x91","\x5d","\x55","\x00"),
	HX_HCSTRING("inlined_pop","\xfd","\xb7","\x39","\x02"),
	HX_HCSTRING("pop_unsafe","\x54","\x7c","\xec","\x75"),
	HX_HCSTRING("inlined_pop_unsafe","\x68","\x87","\xef","\x15"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("try_remove","\x08","\xb2","\x16","\x8d"),
	HX_HCSTRING("inlined_remove","\x58","\x8d","\xbb","\x0d"),
	HX_HCSTRING("inlined_try_remove","\x1c","\xbd","\x19","\x2d"),
	HX_HCSTRING("erase","\xe6","\xe8","\x1c","\x73"),
	HX_HCSTRING("inlined_erase","\x52","\xb6","\x9d","\xfa"),
	HX_HCSTRING("splice","\x7c","\x85","\x9e","\xbf"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("inlined_clear","\xf9","\x3e","\xdc","\xcf"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("empty","\x8d","\x3a","\xda","\x6f"),
	HX_HCSTRING("size","\xc1","\xa0","\x53","\x4c"),
	HX_HCSTRING("has","\x5a","\x3f","\x4f","\x00"),
	HX_HCSTRING("inlined_has","\xc6","\x99","\x33","\x02"),
	HX_HCSTRING("front","\xa9","\x18","\x8e","\x06"),
	HX_HCSTRING("back","\x27","\xda","\x10","\x41"),
	HX_HCSTRING("iterator_at","\xe4","\x89","\xd2","\x06"),
	HX_HCSTRING("at","\xf3","\x54","\x00","\x00"),
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void ZPP_Vec2_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZPP_Vec2_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ZPP_Vec2_obj::zpp_pool,"zpp_pool");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZPP_Vec2_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZPP_Vec2_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ZPP_Vec2_obj::zpp_pool,"zpp_pool");
};

#endif

hx::Class ZPP_Vec2_obj::__mClass;

static ::String ZPP_Vec2_obj_sStaticFields[] = {
	HX_HCSTRING("zpp_pool","\x81","\x5d","\xd4","\x38"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	::String(null())
};

void ZPP_Vec2_obj::__register()
{
	hx::Object *dummy = new ZPP_Vec2_obj;
	ZPP_Vec2_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.geom.ZPP_Vec2","\x94","\xb9","\xb2","\x0c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ZPP_Vec2_obj::__GetStatic;
	__mClass->mSetStaticField = &ZPP_Vec2_obj::__SetStatic;
	__mClass->mMarkFunc = ZPP_Vec2_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ZPP_Vec2_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZPP_Vec2_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZPP_Vec2_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZPP_Vec2_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZPP_Vec2_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZPP_Vec2_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ZPP_Vec2_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_f8877d11977fa1fe_233_boot)
HXLINE( 233)		zpp_pool = null();
            	}
}

} // end namespace zpp_nape
} // end namespace geom
