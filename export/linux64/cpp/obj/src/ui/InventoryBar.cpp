// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Player
#include <Player.h>
#endif
#ifndef INCLUDED_Shared
#include <Shared.h>
#endif
#ifndef INCLUDED_characters_Character
#include <characters/Character.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_nape_FlxNapeSprite
#include <flixel/addons/nape/FlxNapeSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISprite
#include <flixel/addons/ui/FlxUISprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIText
#include <flixel/addons/ui/FlxUIText.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IHasParams
#include <flixel/addons/ui/interfaces/IHasParams.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IResizable
#include <flixel/addons/ui/interfaces/IResizable.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouseEventManager
#include <flixel/input/mouse/FlxMouseEventManager.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_items_Inventory
#include <items/Inventory.h>
#endif
#ifndef INCLUDED_items_Item
#include <items/Item.h>
#endif
#ifndef INCLUDED_ui_InventoryBar
#include <ui/InventoryBar.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_13_new,"ui.InventoryBar","new",0xb4b40883,"ui.InventoryBar.new","ui/InventoryBar.hx",13,0x8a01e16c)
HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_20_update,"ui.InventoryBar","update",0xe9bac5c6,"ui.InventoryBar.update","ui/InventoryBar.hx",20,0x8a01e16c)
HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_34_onMouseDown,"ui.InventoryBar","onMouseDown",0xcb5f272b,"ui.InventoryBar.onMouseDown","ui/InventoryBar.hx",34,0x8a01e16c)
HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_38_onMouseUp,"ui.InventoryBar","onMouseUp",0x35e720e4,"ui.InventoryBar.onMouseUp","ui/InventoryBar.hx",38,0x8a01e16c)
HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_42_onMouseOver,"ui.InventoryBar","onMouseOver",0xd2a9c01d,"ui.InventoryBar.onMouseOver","ui/InventoryBar.hx",42,0x8a01e16c)
HX_DEFINE_STACK_FRAME(_hx_pos_7d7bcb11dc38ebe4_46_onMouseOut,"ui.InventoryBar","onMouseOut",0xf4511de5,"ui.InventoryBar.onMouseOut","ui/InventoryBar.hx",46,0x8a01e16c)
namespace ui{

void InventoryBar_obj::__construct(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic){
Float x = __o_x.Default(0);
Float y = __o_y.Default(0);
            	HX_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_13_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(simpleGraphic,"simpleGraphic")
HXLINE(  14)		super::__construct(x,y,simpleGraphic);
HXLINE(  15)		this->originalImage = simpleGraphic;
HXLINE(  16)		this->screenCenter(::flixel::util::FlxAxes_obj::X_dyn());
HXLINE(  17)		::flixel::input::mouse::FlxMouseEventManager_obj::add(hx::ObjectPtr<OBJ_>(this),this->onMouseDown_dyn(),this->onMouseUp_dyn(),this->onMouseOver_dyn(),this->onMouseOut_dyn(),null(),null(),null(),null());
            	}

Dynamic InventoryBar_obj::__CreateEmpty() { return new InventoryBar_obj; }

void *InventoryBar_obj::_hx_vtable = 0;

Dynamic InventoryBar_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< InventoryBar_obj > _hx_result = new InventoryBar_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool InventoryBar_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x25a685e0) {
		if (inClassId<=(int)0x172dfd93) {
			if (inClassId<=(int)0x0b6ffd77) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0b6ffd77;
			} else {
				return inClassId==(int)0x172dfd93;
			}
		} else {
			return inClassId==(int)0x25a685e0;
		}
	} else {
		return inClassId==(int)0x2e105115 || inClassId==(int)0x7eb12c44;
	}
}

void InventoryBar_obj::update(Float elapsed){
            	HX_GC_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_20_update)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(elapsed,"elapsed")
HXLINE(  21)		this->super::update(elapsed);
HXLINE(  22)		HX_VARI(  ::items::Inventory,inventory) = ::Shared_obj::player->character->inventory;
HXLINE(  23)		if (hx::IsNotNull( inventory )) {
HXLINE(  24)			HX_VARI( int,_g1) = (int)0;
HXDLIN(  24)			HX_VARI( int,_g) = inventory->items->length;
HXDLIN(  24)			while((_g1 < _g)){
HXLINE(  24)				_g1 = (_g1 + (int)1);
HXDLIN(  24)				HX_VARI( int,x) = (_g1 - (int)1);
HXLINE(  25)				HX_VARI(  ::items::Item,item) = ( ( ::items::Item)(_hx_array_unsafe_get(inventory->items,x)) );
HXLINE(  26)				if (hx::IsNotNull( item )) {
HXLINE(  27)					this->stamp(item->icon,((x * (int)34) + (int)1),(int)1);
HXLINE(  28)					this->stamp( ::flixel::addons::ui::FlxUIText_obj::__alloc( HX_CTX ,((x * (int)34) + (int)1),(int)1,(int)34,(HX_("",00,00,00,00) + item->quantity),(int)16,null()),((x * (int)34) + (int)1),(int)1);
            				}
            			}
            		}
            	}


void InventoryBar_obj::onMouseDown( ::flixel::FlxSprite sprite){
            	HX_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_34_onMouseDown)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(sprite,"sprite")
            	}


HX_DEFINE_DYNAMIC_FUNC1(InventoryBar_obj,onMouseDown,(void))

void InventoryBar_obj::onMouseUp( ::flixel::FlxSprite sprite){
            	HX_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_38_onMouseUp)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(sprite,"sprite")
            	}


HX_DEFINE_DYNAMIC_FUNC1(InventoryBar_obj,onMouseUp,(void))

void InventoryBar_obj::onMouseOver( ::flixel::FlxSprite sprite){
            	HX_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_42_onMouseOver)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(sprite,"sprite")
            	}


HX_DEFINE_DYNAMIC_FUNC1(InventoryBar_obj,onMouseOver,(void))

void InventoryBar_obj::onMouseOut( ::flixel::FlxSprite sprite){
            	HX_STACKFRAME(&_hx_pos_7d7bcb11dc38ebe4_46_onMouseOut)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(sprite,"sprite")
            	}


HX_DEFINE_DYNAMIC_FUNC1(InventoryBar_obj,onMouseOut,(void))


hx::ObjectPtr< InventoryBar_obj > InventoryBar_obj::__new(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic) {
	hx::ObjectPtr< InventoryBar_obj > __this = new InventoryBar_obj();
	__this->__construct(__o_x,__o_y,simpleGraphic);
	return __this;
}

hx::ObjectPtr< InventoryBar_obj > InventoryBar_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic) {
	InventoryBar_obj *__this = (InventoryBar_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(InventoryBar_obj), true, "ui.InventoryBar"));
	*(void **)__this = InventoryBar_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y,simpleGraphic);
	return __this;
}

InventoryBar_obj::InventoryBar_obj()
{
}

void InventoryBar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(InventoryBar);
	HX_MARK_MEMBER_NAME(originalImage,"originalImage");
	 ::flixel::addons::ui::FlxUISprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void InventoryBar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(originalImage,"originalImage");
	 ::flixel::addons::ui::FlxUISprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val InventoryBar_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return hx::Val( onMouseUp_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onMouseOut") ) { return hx::Val( onMouseOut_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return hx::Val( onMouseDown_dyn()); }
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return hx::Val( onMouseOver_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"originalImage") ) { return hx::Val( originalImage); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val InventoryBar_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"originalImage") ) { originalImage=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void InventoryBar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("originalImage","\x4a","\x15","\x5a","\x18"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo InventoryBar_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(InventoryBar_obj,originalImage),HX_HCSTRING("originalImage","\x4a","\x15","\x5a","\x18")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *InventoryBar_obj_sStaticStorageInfo = 0;
#endif

static ::String InventoryBar_obj_sMemberFields[] = {
	HX_HCSTRING("originalImage","\x4a","\x15","\x5a","\x18"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("onMouseDown","\x08","\x94","\x05","\x11"),
	HX_HCSTRING("onMouseUp","\x81","\xac","\x1d","\x98"),
	HX_HCSTRING("onMouseOver","\xfa","\x2c","\x50","\x18"),
	HX_HCSTRING("onMouseOut","\xa8","\xbb","\xd4","\x81"),
	::String(null()) };

static void InventoryBar_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InventoryBar_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InventoryBar_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InventoryBar_obj::__mClass,"__mClass");
};

#endif

hx::Class InventoryBar_obj::__mClass;

void InventoryBar_obj::__register()
{
	hx::Object *dummy = new InventoryBar_obj;
	InventoryBar_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("ui.InventoryBar","\x11","\x0b","\x47","\x34");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = InventoryBar_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(InventoryBar_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< InventoryBar_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = InventoryBar_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = InventoryBar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = InventoryBar_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
