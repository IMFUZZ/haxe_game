// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_characters_Character
#include <characters/Character.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_nape_FlxNapeSprite
#include <flixel/addons/nape/FlxNapeSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_BitmapData
#include <openfl/_legacy/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_world_WorldMap
#include <world/WorldMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c7d98979c7301f85_15_new,"world.WorldMap","new",0x8b754118,"world.WorldMap.new","world/WorldMap.hx",15,0x704ad6f7)
HX_DEFINE_STACK_FRAME(_hx_pos_c7d98979c7301f85_21_addCharacterLocation,"world.WorldMap","addCharacterLocation",0xe5dcefe5,"world.WorldMap.addCharacterLocation","world/WorldMap.hx",21,0x704ad6f7)
namespace world{

void WorldMap_obj::__construct(hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y, ::openfl::_legacy::display::BitmapData a_bitmapData){
Float a_x = __o_a_x.Default(0);
Float a_y = __o_a_y.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_c7d98979c7301f85_15_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a_x,"a_x")
            	HX_STACK_ARG(a_y,"a_y")
            	HX_STACK_ARG(a_bitmapData,"a_bitmapData")
HXLINE(  16)		super::__construct(null());
HXLINE(  17)		this->map =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,a_x,a_y,a_bitmapData);
HXLINE(  18)		this->bitmap = a_bitmapData;
            	}

Dynamic WorldMap_obj::__CreateEmpty() { return new WorldMap_obj; }

void *WorldMap_obj::_hx_vtable = 0;

Dynamic WorldMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WorldMap_obj > _hx_result = new WorldMap_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool WorldMap_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3634c52c) {
		if (inClassId<=(int)0x25a685e0) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x25a685e0;
		} else {
			return inClassId==(int)0x3634c52c;
		}
	} else {
		return inClassId==(int)0x76189b38;
	}
}

void WorldMap_obj::addCharacterLocation( ::characters::Character a_character){
            	HX_GC_STACKFRAME(&_hx_pos_c7d98979c7301f85_21_addCharacterLocation)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a_character,"a_character")
HXLINE(  22)		HX_VARI(  ::flixel::FlxSprite,locationDot) =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,a_character->x,a_character->y,null());
HXLINE(  23)		locationDot->makeGraphic((int)1,(int)1,(int)-16776961,null(),null());
HXLINE(  24)		this->add(locationDot);
            	}


HX_DEFINE_DYNAMIC_FUNC1(WorldMap_obj,addCharacterLocation,(void))


hx::ObjectPtr< WorldMap_obj > WorldMap_obj::__new(hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y, ::openfl::_legacy::display::BitmapData a_bitmapData) {
	hx::ObjectPtr< WorldMap_obj > __this = new WorldMap_obj();
	__this->__construct(__o_a_x,__o_a_y,a_bitmapData);
	return __this;
}

hx::ObjectPtr< WorldMap_obj > WorldMap_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y, ::openfl::_legacy::display::BitmapData a_bitmapData) {
	WorldMap_obj *__this = (WorldMap_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(WorldMap_obj), true, "world.WorldMap"));
	*(void **)__this = WorldMap_obj::_hx_vtable;
	__this->__construct(__o_a_x,__o_a_y,a_bitmapData);
	return __this;
}

WorldMap_obj::WorldMap_obj()
{
}

void WorldMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(WorldMap);
	HX_MARK_MEMBER_NAME(bitmap,"bitmap");
	HX_MARK_MEMBER_NAME(map,"map");
	 ::flixel::group::FlxTypedGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void WorldMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bitmap,"bitmap");
	HX_VISIT_MEMBER_NAME(map,"map");
	 ::flixel::group::FlxTypedGroup_obj::__Visit(HX_VISIT_ARG);
}

hx::Val WorldMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bitmap") ) { return hx::Val( bitmap); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"addCharacterLocation") ) { return hx::Val( addCharacterLocation_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val WorldMap_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bitmap") ) { bitmap=inValue.Cast<  ::openfl::_legacy::display::BitmapData >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void WorldMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("bitmap","\xef","\x0f","\x0c","\xf1"));
	outFields->push(HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo WorldMap_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::openfl::_legacy::display::BitmapData*/ ,(int)offsetof(WorldMap_obj,bitmap),HX_HCSTRING("bitmap","\xef","\x0f","\x0c","\xf1")},
	{hx::fsObject /*::flixel::FlxSprite*/ ,(int)offsetof(WorldMap_obj,map),HX_HCSTRING("map","\x9c","\x0a","\x53","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *WorldMap_obj_sStaticStorageInfo = 0;
#endif

static ::String WorldMap_obj_sMemberFields[] = {
	HX_HCSTRING("bitmap","\xef","\x0f","\x0c","\xf1"),
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("addCharacterLocation","\x9d","\xaf","\xc8","\x15"),
	::String(null()) };

static void WorldMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WorldMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WorldMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WorldMap_obj::__mClass,"__mClass");
};

#endif

hx::Class WorldMap_obj::__mClass;

void WorldMap_obj::__register()
{
	hx::Object *dummy = new WorldMap_obj;
	WorldMap_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("world.WorldMap","\x26","\x15","\xd1","\xe4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = WorldMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WorldMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WorldMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WorldMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WorldMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WorldMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace world
