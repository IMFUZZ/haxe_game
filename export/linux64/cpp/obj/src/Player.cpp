// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_InputController
#include <InputController.h>
#endif
#ifndef INCLUDED_Player
#include <Player.h>
#endif
#ifndef INCLUDED_Shared
#include <Shared.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_characters_Character
#include <characters/Character.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxCameraFollowStyle
#include <flixel/FlxCameraFollowStyle.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_IFlxBasic
#include <flixel/IFlxBasic.h>
#endif
#ifndef INCLUDED_flixel_IFlxSprite
#include <flixel/IFlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_nape_FlxNapeSprite
#include <flixel/addons/nape/FlxNapeSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUI
#include <flixel/addons/ui/FlxUI.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIGroup
#include <flixel/addons/ui/FlxUIGroup.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUISubState
#include <flixel/addons/ui/FlxUISubState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIWidget
#include <flixel/addons/ui/interfaces/IFlxUIWidget.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_FlxPointer
#include <flixel/input/FlxPointer.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepad
#include <flixel/input/gamepad/FlxGamepad.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadManager
#include <flixel/input/gamepad/FlxGamepadManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyboard
#include <flixel/input/keyboard/FlxKeyboard.h>
#endif
#ifndef INCLUDED_flixel_input_mouse_FlxMouse
#include <flixel/input/mouse/FlxMouse.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_gametime_Clock
#include <gametime/Clock.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_items_Inventory
#include <items/Inventory.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_nape_phys_Body
#include <nape/phys/Body.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_system_System
#include <openfl/_legacy/system/System.h>
#endif
#ifndef INCLUDED_states_WorldMapUIState
#include <states/WorldMapUIState.h>
#endif
#ifndef INCLUDED_ui_InGameUI
#include <ui/InGameUI.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Body
#include <zpp_nape/phys/ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <zpp_nape/phys/ZPP_Interactor.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_24_new,"Player","new",0x8d5554f3,"Player.new","Player.hx",24,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_28_initUI,"Player","initUI",0x023fc2b1,"Player.initUI","Player.hx",28,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_31_openSubState,"Player","openSubState",0x52b93768,"Player.openSubState","Player.hx",31,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_44_setCharacter,"Player","setCharacter",0x81926cb4,"Player.setCharacter","Player.hx",44,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_58_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",58,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_63_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",63,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_69_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",69,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_76_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",76,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_83_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",83,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_87_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",87,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_91_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",91,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_95_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",95,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_99_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",99,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_103_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",103,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_52_initControls,"Player","initControls",0xf7e3deb3,"Player.initControls","Player.hx",52,0xa27fc9dd)
static const int _hx_array_data_6c4d5f81_15[] = {
	(int)1,(int)2,(int)-1,
};
static const int _hx_array_data_6c4d5f81_16[] = {
	(int)1,(int)2,(int)-1,
};
static const int _hx_array_data_6c4d5f81_17[] = {
	(int)1,(int)2,(int)-1,
};
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_109_updateControls,"Player","updateControls",0xe2f767ec,"Player.updateControls","Player.hx",109,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_117_update,"Player","update",0xf1f8df56,"Player.update","Player.hx",117,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_120_getEvent,"Player","getEvent",0x6711de31,"Player.getEvent","Player.hx",120,0xa27fc9dd)
HX_DEFINE_STACK_FRAME(_hx_pos_9d6b32c958ffa4d3_132_getRequest,"Player","getRequest",0xf3d4e926,"Player.getRequest","Player.hx",132,0xa27fc9dd)

void Player_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_24_new)
            	HX_STACK_THIS(this)
HXLINE(  24)		this->initControls();
            	}

Dynamic Player_obj::__CreateEmpty() { return new Player_obj; }

void *Player_obj::_hx_vtable = 0;

Dynamic Player_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Player_obj > _hx_result = new Player_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Player_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6c4d5f81;
}

static ::flixel::addons::ui::interfaces::IEventGetter_obj _hx_Player__hx_flixel_addons_ui_interfaces_IEventGetter= {
	( void (hx::Object::*)(::String,::Dynamic, ::Dynamic,::cpp::VirtualArray))&::Player_obj::getEvent,
	(  ::Dynamic (hx::Object::*)(::String,::Dynamic, ::Dynamic,::cpp::VirtualArray))&::Player_obj::getRequest,
};

void *Player_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xdcf9e4f9: return &_hx_Player__hx_flixel_addons_ui_interfaces_IEventGetter;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Player_obj::initUI(){
            	HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_28_initUI)
            	HX_STACK_THIS(this)
HXLINE(  28)		this->UI =  ::ui::InGameUI_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Player_obj,initUI,(void))

void Player_obj::openSubState(::String key){
            	HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_31_openSubState)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(key,"key")
HXLINE(  32)		HX_VARI(  ::states::WorldMapUIState,state) = null();
HXLINE(  33)		if ((key == HX_("worldMap",6a,6b,8b,a4))) {
HXLINE(  35)			state =  ::states::WorldMapUIState_obj::__alloc( HX_CTX ,(int)-16777216);
            		}
HXLINE(  37)		if (hx::IsNotNull( state )) {
HXLINE(  38)			::flixel::FlxG_obj::game->_state->openSubState(state);
            		}
            		else {
HXLINE(  40)			::haxe::Log_obj::trace(HX_("Tried to open a null subState",a4,5f,06,e4),hx::SourceInfo(HX_("Player.hx",dd,c9,7f,a2),40,HX_("Player",81,5f,4d,6c),HX_("openSubState",5b,66,48,37)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Player_obj,openSubState,(void))

void Player_obj::setCharacter( ::characters::Character a_character){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_44_setCharacter)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(a_character,"a_character")
HXLINE(  45)		this->character = a_character;
HXLINE(  46)		this->character->setOwner(hx::ObjectPtr<OBJ_>(this));
HXLINE(  48)		this->UI->link(this->character);
HXLINE(  49)		::flixel::FlxG_obj::camera->follow(::Shared_obj::player->character,null(),(int)1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Player_obj,setCharacter,(void))

void Player_obj::initControls(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		int _hx_run( ::Dynamic params){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_58_initControls)
            			HX_STACK_ARG(params,"params")
HXLINE(  59)			::openfl::_legacy::_hx_system::System_obj::exit((int)0);
HXLINE(  60)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		int _hx_run( ::Dynamic params1){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_63_initControls)
            			HX_STACK_ARG(params1,"params1")
HXLINE(  64)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  64)			int _hx_tmp1 = ::Shared_obj::clock->getCurrentHour();
HXDLIN(  64)			_hx_tmp(_hx_tmp1,hx::SourceInfo(HX_("Player.hx",dd,c9,7f,a2),64,HX_("Player",81,5f,4d,6c),HX_("initControls",a6,0d,73,dc)));
HXLINE(  65)			 ::Dynamic _hx_tmp2 = ::haxe::Log_obj::trace;
HXDLIN(  65)			int _hx_tmp3 = ::Shared_obj::clock->getCurrentMinute();
HXDLIN(  65)			_hx_tmp2(_hx_tmp3,hx::SourceInfo(HX_("Player.hx",dd,c9,7f,a2),65,HX_("Player",81,5f,4d,6c),HX_("initControls",a6,0d,73,dc)));
HXLINE(  66)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_2, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params2){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_69_initControls)
            			HX_STACK_ARG(params2,"params2")
HXLINE(  70)			::flixel::FlxG_obj::camera->shake(((Float)0.01),((Float)0.1),null(),null(),null());
HXLINE(  71)			_gthis->character->hurt((int)1);
HXLINE(  72)			::haxe::Log_obj::trace(_gthis->character->health,hx::SourceInfo(HX_("Player.hx",dd,c9,7f,a2),72,HX_("Player",81,5f,4d,6c),HX_("initControls",a6,0d,73,dc)));
HXLINE(  73)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params3){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_76_initControls)
            			HX_STACK_ARG(params3,"params3")
HXLINE(  77)			{
HXLINE(  77)				HX_VARI(  ::nape::phys::Body,_this) = _gthis->character->body;
HXDLIN(  77)				if (hx::IsNull( _this->zpp_inner->wrap_pos )) {
HXLINE(  77)					_this->zpp_inner->setupPosition();
            				}
HXDLIN(  77)				HX_VARI_NAME(  ::nape::geom::Vec2,_this1,"_this") = _this->zpp_inner->wrap_pos;
HXDLIN(  77)				{
HXLINE(  77)					{
HXLINE(  77)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = _this1->zpp_inner;
HXDLIN(  77)						if (hx::IsNotNull( _this2->_validate )) {
HXLINE(  77)							_this2->_validate();
            						}
            					}
HXDLIN(  77)					if ((_this1->zpp_inner->x != (int)100)) {
HXLINE(  77)						_this1->zpp_inner->x = (int)100;
HXDLIN(  77)						{
HXLINE(  77)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = _this1->zpp_inner;
HXDLIN(  77)							if (hx::IsNotNull( _this3->_invalidate )) {
HXLINE(  77)								_this3->_invalidate(_this3);
            							}
            						}
            					}
            				}
HXDLIN(  77)				{
HXLINE(  77)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this4,"_this") = _this1->zpp_inner;
HXDLIN(  77)					if (hx::IsNotNull( _this4->_validate )) {
HXLINE(  77)						_this4->_validate();
            					}
            				}
            			}
HXLINE(  78)			{
HXLINE(  78)				HX_VARI_NAME(  ::nape::phys::Body,_this5,"_this") = _gthis->character->body;
HXDLIN(  78)				if (hx::IsNull( _this5->zpp_inner->wrap_pos )) {
HXLINE(  78)					_this5->zpp_inner->setupPosition();
            				}
HXDLIN(  78)				HX_VARI_NAME(  ::nape::geom::Vec2,_this6,"_this") = _this5->zpp_inner->wrap_pos;
HXDLIN(  78)				{
HXLINE(  78)					{
HXLINE(  78)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = _this6->zpp_inner;
HXDLIN(  78)						if (hx::IsNotNull( _this7->_validate )) {
HXLINE(  78)							_this7->_validate();
            						}
            					}
HXDLIN(  78)					if ((_this6->zpp_inner->y != (int)100)) {
HXLINE(  78)						_this6->zpp_inner->y = (int)100;
HXDLIN(  78)						{
HXLINE(  78)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = _this6->zpp_inner;
HXDLIN(  78)							if (hx::IsNotNull( _this8->_invalidate )) {
HXLINE(  78)								_this8->_invalidate(_this8);
            							}
            						}
            					}
            				}
HXDLIN(  78)				{
HXLINE(  78)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = _this6->zpp_inner;
HXDLIN(  78)					if (hx::IsNotNull( _this9->_validate )) {
HXLINE(  78)						_this9->_validate();
            					}
            				}
            			}
HXLINE(  79)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_4, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params4){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_83_initControls)
            			HX_STACK_ARG(params4,"params4")
HXLINE(  84)			_gthis->character->move((int)0,(int)-1);
HXLINE(  85)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_5, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params5){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_87_initControls)
            			HX_STACK_ARG(params5,"params5")
HXLINE(  88)			_gthis->character->move((int)0,(int)1);
HXLINE(  89)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_6, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params6){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_91_initControls)
            			HX_STACK_ARG(params6,"params6")
HXLINE(  92)			_gthis->character->move((int)-1,(int)0);
HXLINE(  93)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_7, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params7){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_95_initControls)
            			HX_STACK_ARG(params7,"params7")
HXLINE(  96)			_gthis->character->move((int)1,(int)0);
HXLINE(  97)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_8, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params8){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_99_initControls)
            			HX_STACK_ARG(params8,"params8")
HXLINE( 100)			_gthis->character->isRunning = true;
HXLINE( 101)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_9, ::Player,_gthis) HXARGC(1)
            		int _hx_run( ::Dynamic params9){
            			HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_103_initControls)
            			HX_STACK_ARG(params9,"params9")
HXLINE( 104)			_gthis->character->isRunning = false;
HXLINE( 105)			return (int)0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_52_initControls)
            	HX_STACK_THIS(this)
HXLINE(  52)		HX_VARI(  ::Player,_gthis) = hx::ObjectPtr<OBJ_>(this);
HXLINE(  53)		this->_playerIC =  ::InputController_obj::__alloc( HX_CTX ,::Array_obj< int >::fromData( _hx_array_data_6c4d5f81_15,3));
HXLINE(  54)		this->_characterIC =  ::InputController_obj::__alloc( HX_CTX ,::Array_obj< int >::fromData( _hx_array_data_6c4d5f81_16,3));
HXLINE(  55)		this->_menuIC =  ::InputController_obj::__alloc( HX_CTX ,::Array_obj< int >::fromData( _hx_array_data_6c4d5f81_17,3));
HXLINE(  58)		this->_playerIC->addKeyboardEvent((int)2,HX_("ESCAPE",81,ef,5c,8d), ::Dynamic(new _hx_Closure_0()));
HXLINE(  63)		this->_playerIC->addKeyboardEvent((int)2,HX_("T",54,00,00,00), ::Dynamic(new _hx_Closure_1()));
HXLINE(  69)		this->_playerIC->addKeyboardEvent((int)2,HX_("Z",5a,00,00,00), ::Dynamic(new _hx_Closure_2(_gthis)));
HXLINE(  76)		this->_playerIC->addKeyboardEvent((int)2,HX_("L",4c,00,00,00), ::Dynamic(new _hx_Closure_3(_gthis)));
HXLINE(  83)		this->_characterIC->addKeyboardEvent((int)1,HX_("W",57,00,00,00), ::Dynamic(new _hx_Closure_4(_gthis)));
HXLINE(  87)		this->_characterIC->addKeyboardEvent((int)1,HX_("S",53,00,00,00), ::Dynamic(new _hx_Closure_5(_gthis)));
HXLINE(  91)		this->_characterIC->addKeyboardEvent((int)1,HX_("A",41,00,00,00), ::Dynamic(new _hx_Closure_6(_gthis)));
HXLINE(  95)		this->_characterIC->addKeyboardEvent((int)1,HX_("D",44,00,00,00), ::Dynamic(new _hx_Closure_7(_gthis)));
HXLINE(  99)		this->_characterIC->addKeyboardEvent((int)2,HX_("SHIFT",62,24,11,fa), ::Dynamic(new _hx_Closure_8(_gthis)));
HXLINE( 103)		this->_characterIC->addKeyboardEvent((int)-1,HX_("SHIFT",62,24,11,fa), ::Dynamic(new _hx_Closure_9(_gthis)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Player_obj,initControls,(void))

void Player_obj::updateControls(){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_109_updateControls)
            	HX_STACK_THIS(this)
HXLINE( 110)		this->_playerIC->updateControls(::flixel::FlxG_obj::keys,::flixel::FlxG_obj::mouse,::flixel::FlxG_obj::gamepads->firstActive);
HXLINE( 111)		if (hx::IsNotNull( this->character )) {
HXLINE( 112)			this->_characterIC->updateControls(::flixel::FlxG_obj::keys,::flixel::FlxG_obj::mouse,::flixel::FlxG_obj::gamepads->firstActive);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Player_obj,updateControls,(void))

void Player_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_117_update)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(elapsed,"elapsed")
HXLINE( 117)		this->updateControls();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Player_obj,update,(void))

void Player_obj::getEvent(::String event,::Dynamic sender, ::Dynamic data,::cpp::VirtualArray params){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_120_getEvent)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(event,"event")
            	HX_STACK_ARG(sender,"sender")
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(params,"params")
HXLINE( 121)		::haxe::Log_obj::trace(event,hx::SourceInfo(HX_("Player.hx",dd,c9,7f,a2),121,HX_("Player",81,5f,4d,6c),HX_("getEvent",a4,d7,9b,d5)));
HXLINE( 122)		if (::Std_obj::is(data,hx::ClassOf< ::String >())) {
HXLINE( 124)			if ((hx::TCast< ::String >::cast(data) == HX_("SHOW_INVENTORY",7a,fd,af,71))) {
HXLINE( 125)				this->UI->showInventory(this->character->inventory);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Player_obj,getEvent,(void))

 ::Dynamic Player_obj::getRequest(::String name,::Dynamic sender, ::Dynamic data,::cpp::VirtualArray params){
            	HX_STACKFRAME(&_hx_pos_9d6b32c958ffa4d3_132_getRequest)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(name,"name")
            	HX_STACK_ARG(sender,"sender")
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(params,"params")
HXLINE( 132)		return (int)0;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Player_obj,getRequest,return )


hx::ObjectPtr< Player_obj > Player_obj::__new() {
	hx::ObjectPtr< Player_obj > __this = new Player_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Player_obj > Player_obj::__alloc(hx::Ctx *_hx_ctx) {
	Player_obj *__this = (Player_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Player_obj), true, "Player"));
	*(void **)__this = Player_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Player_obj::Player_obj()
{
}

void Player_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Player);
	HX_MARK_MEMBER_NAME(_playerIC,"_playerIC");
	HX_MARK_MEMBER_NAME(_characterIC,"_characterIC");
	HX_MARK_MEMBER_NAME(_menuIC,"_menuIC");
	HX_MARK_MEMBER_NAME(character,"character");
	HX_MARK_MEMBER_NAME(UI,"UI");
	HX_MARK_END_CLASS();
}

void Player_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_playerIC,"_playerIC");
	HX_VISIT_MEMBER_NAME(_characterIC,"_characterIC");
	HX_VISIT_MEMBER_NAME(_menuIC,"_menuIC");
	HX_VISIT_MEMBER_NAME(character,"character");
	HX_VISIT_MEMBER_NAME(UI,"UI");
}

hx::Val Player_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"UI") ) { return hx::Val( UI); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"initUI") ) { return hx::Val( initUI_dyn()); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_menuIC") ) { return hx::Val( _menuIC); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getEvent") ) { return hx::Val( getEvent_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_playerIC") ) { return hx::Val( _playerIC); }
		if (HX_FIELD_EQ(inName,"character") ) { return hx::Val( character); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getRequest") ) { return hx::Val( getRequest_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_characterIC") ) { return hx::Val( _characterIC); }
		if (HX_FIELD_EQ(inName,"openSubState") ) { return hx::Val( openSubState_dyn()); }
		if (HX_FIELD_EQ(inName,"setCharacter") ) { return hx::Val( setCharacter_dyn()); }
		if (HX_FIELD_EQ(inName,"initControls") ) { return hx::Val( initControls_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"updateControls") ) { return hx::Val( updateControls_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Player_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"UI") ) { UI=inValue.Cast<  ::ui::InGameUI >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_menuIC") ) { _menuIC=inValue.Cast<  ::InputController >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_playerIC") ) { _playerIC=inValue.Cast<  ::InputController >(); return inValue; }
		if (HX_FIELD_EQ(inName,"character") ) { character=inValue.Cast<  ::characters::Character >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"_characterIC") ) { _characterIC=inValue.Cast<  ::InputController >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Player_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_playerIC","\xda","\x7c","\xe9","\x8f"));
	outFields->push(HX_HCSTRING("_characterIC","\xc4","\xc5","\xc8","\x24"));
	outFields->push(HX_HCSTRING("_menuIC","\xd8","\x7c","\xe4","\x73"));
	outFields->push(HX_HCSTRING("character","\xa9","\xdb","\xd1","\x41"));
	outFields->push(HX_HCSTRING("UI","\x54","\x4a","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Player_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::InputController*/ ,(int)offsetof(Player_obj,_playerIC),HX_HCSTRING("_playerIC","\xda","\x7c","\xe9","\x8f")},
	{hx::fsObject /*::InputController*/ ,(int)offsetof(Player_obj,_characterIC),HX_HCSTRING("_characterIC","\xc4","\xc5","\xc8","\x24")},
	{hx::fsObject /*::InputController*/ ,(int)offsetof(Player_obj,_menuIC),HX_HCSTRING("_menuIC","\xd8","\x7c","\xe4","\x73")},
	{hx::fsObject /*::characters::Character*/ ,(int)offsetof(Player_obj,character),HX_HCSTRING("character","\xa9","\xdb","\xd1","\x41")},
	{hx::fsObject /*::ui::InGameUI*/ ,(int)offsetof(Player_obj,UI),HX_HCSTRING("UI","\x54","\x4a","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Player_obj_sStaticStorageInfo = 0;
#endif

static ::String Player_obj_sMemberFields[] = {
	HX_HCSTRING("_playerIC","\xda","\x7c","\xe9","\x8f"),
	HX_HCSTRING("_characterIC","\xc4","\xc5","\xc8","\x24"),
	HX_HCSTRING("_menuIC","\xd8","\x7c","\xe4","\x73"),
	HX_HCSTRING("character","\xa9","\xdb","\xd1","\x41"),
	HX_HCSTRING("UI","\x54","\x4a","\x00","\x00"),
	HX_HCSTRING("initUI","\x64","\x69","\x4c","\x97"),
	HX_HCSTRING("openSubState","\x5b","\x66","\x48","\x37"),
	HX_HCSTRING("setCharacter","\xa7","\x9b","\x21","\x66"),
	HX_HCSTRING("initControls","\xa6","\x0d","\x73","\xdc"),
	HX_HCSTRING("updateControls","\x9f","\x79","\xe6","\x6c"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("getEvent","\xa4","\xd7","\x9b","\xd5"),
	HX_HCSTRING("getRequest","\x59","\x65","\xe6","\x93"),
	::String(null()) };

static void Player_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Player_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Player_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Player_obj::__mClass,"__mClass");
};

#endif

hx::Class Player_obj::__mClass;

void Player_obj::__register()
{
	hx::Object *dummy = new Player_obj;
	Player_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Player","\x81","\x5f","\x4d","\x6c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Player_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Player_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Player_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Player_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Player_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Player_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

