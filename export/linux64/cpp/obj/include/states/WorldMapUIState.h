// Generated by Haxe 3.4.0
#ifndef INCLUDED_states_WorldMapUIState
#define INCLUDED_states_WorldMapUIState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_addons_ui_FlxUISubState
#include <flixel/addons/ui/FlxUISubState.h>
#endif
HX_DECLARE_CLASS0(InputController)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUISprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUISubState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IEventGetter)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(states,WorldMapUIState)

namespace states{


class HXCPP_CLASS_ATTRIBUTES WorldMapUIState_obj : public  ::flixel::addons::ui::FlxUISubState_obj
{
	public:
		typedef  ::flixel::addons::ui::FlxUISubState_obj super;
		typedef WorldMapUIState_obj OBJ_;
		WorldMapUIState_obj();

	public:
		enum { _hx_ClassId = 0x24aff6ad };

		void __construct( ::Dynamic __o_a_color);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="states.WorldMapUIState")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"states.WorldMapUIState"); }
		static hx::ObjectPtr< WorldMapUIState_obj > __new( ::Dynamic __o_a_color);
		static hx::ObjectPtr< WorldMapUIState_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_a_color);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~WorldMapUIState_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("WorldMapUIState","\xd3","\xe8","\xdd","\x0d"); }

		 ::flixel::addons::ui::FlxUISprite worldMapSprite;
		 ::flixel::FlxSprite mapCursor;
		 ::InputController _stateIC;
		 ::flixel::group::FlxTypedGroup _flxGroup;
		void update(Float elapsed);

		void _initControls();
		::Dynamic _initControls_dyn();

};

} // end namespace states

#endif /* INCLUDED_states_WorldMapUIState */ 
