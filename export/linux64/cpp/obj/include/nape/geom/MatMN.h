// Generated by Haxe 3.4.0
#ifndef INCLUDED_nape_geom_MatMN
#define INCLUDED_nape_geom_MatMN

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nape,geom,MatMN)
HX_DECLARE_CLASS2(zpp_nape,geom,ZPP_MatMN)

namespace nape{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES MatMN_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MatMN_obj OBJ_;
		MatMN_obj();

	public:
		enum { _hx_ClassId = 0x285ceb3d };

		void __construct(int rows,int cols);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nape.geom.MatMN")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"nape.geom.MatMN"); }
		static hx::ObjectPtr< MatMN_obj > __new(int rows,int cols);
		static hx::ObjectPtr< MatMN_obj > __alloc(hx::Ctx *_hx_ctx,int rows,int cols);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MatMN_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MatMN","\xe1","\xa5","\x50","\x96"); }

		 ::zpp_nape::geom::ZPP_MatMN zpp_inner;
		int get_rows();
		::Dynamic get_rows_dyn();

		int get_cols();
		::Dynamic get_cols_dyn();

		Float x(int row,int col);
		::Dynamic x_dyn();

		Float setx(int row,int col,Float x);
		::Dynamic setx_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

		 ::nape::geom::MatMN transpose();
		::Dynamic transpose_dyn();

		 ::nape::geom::MatMN mul( ::nape::geom::MatMN matrix);
		::Dynamic mul_dyn();

};

} // end namespace nape
} // end namespace geom

#endif /* INCLUDED_nape_geom_MatMN */ 
