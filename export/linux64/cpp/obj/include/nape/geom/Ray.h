// Generated by Haxe 3.4.0
#ifndef INCLUDED_nape_geom_Ray
#define INCLUDED_nape_geom_Ray

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nape,geom,AABB)
HX_DECLARE_CLASS2(nape,geom,Ray)
HX_DECLARE_CLASS2(nape,geom,Vec2)
HX_DECLARE_CLASS2(zpp_nape,geom,ZPP_Ray)

namespace nape{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES Ray_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Ray_obj OBJ_;
		Ray_obj();

	public:
		enum { _hx_ClassId = 0x672b9442 };

		void __construct( ::nape::geom::Vec2 origin, ::nape::geom::Vec2 direction);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nape.geom.Ray")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"nape.geom.Ray"); }
		static hx::ObjectPtr< Ray_obj > __new( ::nape::geom::Vec2 origin, ::nape::geom::Vec2 direction);
		static hx::ObjectPtr< Ray_obj > __alloc(hx::Ctx *_hx_ctx, ::nape::geom::Vec2 origin, ::nape::geom::Vec2 direction);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Ray_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Ray","\xca","\x8d","\x3e","\x00"); }

		static  ::nape::geom::Ray fromSegment( ::nape::geom::Vec2 start, ::nape::geom::Vec2 end);
		static ::Dynamic fromSegment_dyn();

		 ::zpp_nape::geom::ZPP_Ray zpp_inner;
		 ::Dynamic get_userData();
		::Dynamic get_userData_dyn();

		 ::nape::geom::Vec2 get_origin();
		::Dynamic get_origin_dyn();

		 ::nape::geom::Vec2 set_origin( ::nape::geom::Vec2 origin);
		::Dynamic set_origin_dyn();

		 ::nape::geom::Vec2 get_direction();
		::Dynamic get_direction_dyn();

		 ::nape::geom::Vec2 set_direction( ::nape::geom::Vec2 direction);
		::Dynamic set_direction_dyn();

		Float get_maxDistance();
		::Dynamic get_maxDistance_dyn();

		Float set_maxDistance(Float maxDistance);
		::Dynamic set_maxDistance_dyn();

		 ::nape::geom::AABB aabb();
		::Dynamic aabb_dyn();

		 ::nape::geom::Vec2 at(Float distance,hx::Null< bool >  weak);
		::Dynamic at_dyn();

		 ::nape::geom::Ray copy();
		::Dynamic copy_dyn();

};

} // end namespace nape
} // end namespace geom

#endif /* INCLUDED_nape_geom_Ray */ 
