// Generated by Haxe 3.4.0
#ifndef INCLUDED_nape_geom_MarchingSquares
#define INCLUDED_nape_geom_MarchingSquares

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nape,geom,AABB)
HX_DECLARE_CLASS2(nape,geom,GeomPolyList)
HX_DECLARE_CLASS2(nape,geom,MarchingSquares)
HX_DECLARE_CLASS2(nape,geom,Vec2)

namespace nape{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES MarchingSquares_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MarchingSquares_obj OBJ_;
		MarchingSquares_obj();

	public:
		enum { _hx_ClassId = 0x03c13d4f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="nape.geom.MarchingSquares")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"nape.geom.MarchingSquares"); }

		hx::ObjectPtr< MarchingSquares_obj > __new() {
			hx::ObjectPtr< MarchingSquares_obj > __this = new MarchingSquares_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MarchingSquares_obj > __alloc(hx::Ctx *_hx_ctx) {
			MarchingSquares_obj *__this = (MarchingSquares_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MarchingSquares_obj), false, "nape.geom.MarchingSquares"));
			*(void **)__this = MarchingSquares_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MarchingSquares_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MarchingSquares","\xd7","\x62","\x28","\x38"); }

		static  ::nape::geom::GeomPolyList run( ::Dynamic iso, ::nape::geom::AABB bounds, ::nape::geom::Vec2 cellsize,hx::Null< int >  quality, ::nape::geom::Vec2 subgrid,hx::Null< bool >  combine, ::nape::geom::GeomPolyList output);
		static ::Dynamic run_dyn();

};

} // end namespace nape
} // end namespace geom

#endif /* INCLUDED_nape_geom_MarchingSquares */ 
