// Generated by Haxe 3.4.0
#ifndef INCLUDED_nape_util_ShapeDebug
#define INCLUDED_nape_util_ShapeDebug

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_nape_util_Debug
#include <nape/util/Debug.h>
#endif
HX_DECLARE_CLASS2(nape,geom,AABB)
HX_DECLARE_CLASS2(nape,geom,Vec2)
HX_DECLARE_CLASS2(nape,util,Debug)
HX_DECLARE_CLASS2(nape,util,ShapeDebug)
HX_DECLARE_CLASS2(zpp_nape,util,ZPP_Debug)
HX_DECLARE_CLASS2(zpp_nape,util,ZPP_ShapeDebug)

namespace nape{
namespace util{


class HXCPP_CLASS_ATTRIBUTES ShapeDebug_obj : public  ::nape::util::Debug_obj
{
	public:
		typedef  ::nape::util::Debug_obj super;
		typedef ShapeDebug_obj OBJ_;
		ShapeDebug_obj();

	public:
		enum { _hx_ClassId = 0x68cfe2fc };

		void __construct(int width,int height,hx::Null< int >  __o_bgColour);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nape.util.ShapeDebug")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"nape.util.ShapeDebug"); }
		static hx::ObjectPtr< ShapeDebug_obj > __new(int width,int height,hx::Null< int >  __o_bgColour);
		static hx::ObjectPtr< ShapeDebug_obj > __alloc(hx::Ctx *_hx_ctx,int width,int height,hx::Null< int >  __o_bgColour);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ShapeDebug_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ShapeDebug","\x92","\xeb","\x10","\xb4"); }

		 ::zpp_nape::util::ZPP_ShapeDebug zpp_inner_zn;
		Float thickness;
		void clear();

		void drawLine( ::nape::geom::Vec2 start, ::nape::geom::Vec2 end,int colour);

		void drawCurve( ::nape::geom::Vec2 start, ::nape::geom::Vec2 control, ::nape::geom::Vec2 end,int colour);

		void drawCircle( ::nape::geom::Vec2 position,Float radius,int colour);

		void drawAABB( ::nape::geom::AABB aabb,int colour);

		void drawFilledTriangle( ::nape::geom::Vec2 p0, ::nape::geom::Vec2 p1, ::nape::geom::Vec2 p2,int colour);

		void drawFilledCircle( ::nape::geom::Vec2 position,Float radius,int colour);

		void drawPolygon( ::Dynamic polygon,int colour);

		void drawFilledPolygon( ::Dynamic polygon,int colour);

		void draw( ::Dynamic object);

		void drawSpring( ::nape::geom::Vec2 start, ::nape::geom::Vec2 end,int colour,hx::Null< int >  coils,hx::Null< Float >  radius);

};

} // end namespace nape
} // end namespace util

#endif /* INCLUDED_nape_util_ShapeDebug */ 
