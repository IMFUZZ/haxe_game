// Generated by Haxe 3.4.0
#ifndef INCLUDED_nape_phys_Interactor
#define INCLUDED_nape_phys_Interactor

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nape,callbacks,CbTypeList)
HX_DECLARE_CLASS2(nape,dynamics,InteractionGroup)
HX_DECLARE_CLASS2(nape,phys,Body)
HX_DECLARE_CLASS2(nape,phys,Compound)
HX_DECLARE_CLASS2(nape,phys,Interactor)
HX_DECLARE_CLASS2(nape,shape,Shape)
HX_DECLARE_CLASS2(zpp_nape,phys,ZPP_Interactor)

namespace nape{
namespace phys{


class HXCPP_CLASS_ATTRIBUTES Interactor_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Interactor_obj OBJ_;
		Interactor_obj();

	public:
		enum { _hx_ClassId = 0x643c1bb3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="nape.phys.Interactor")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"nape.phys.Interactor"); }
		static hx::ObjectPtr< Interactor_obj > __new();
		static hx::ObjectPtr< Interactor_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Interactor_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Interactor","\x79","\xca","\x20","\x7c"); }

		 ::zpp_nape::phys::ZPP_Interactor zpp_inner_i;
		int get_id();
		::Dynamic get_id_dyn();

		 ::Dynamic get_userData();
		::Dynamic get_userData_dyn();

		bool isShape();
		::Dynamic isShape_dyn();

		bool isBody();
		::Dynamic isBody_dyn();

		bool isCompound();
		::Dynamic isCompound_dyn();

		 ::nape::shape::Shape get_castShape();
		::Dynamic get_castShape_dyn();

		 ::nape::phys::Body get_castBody();
		::Dynamic get_castBody_dyn();

		 ::nape::phys::Compound get_castCompound();
		::Dynamic get_castCompound_dyn();

		 ::nape::dynamics::InteractionGroup get_group();
		::Dynamic get_group_dyn();

		 ::nape::dynamics::InteractionGroup set_group( ::nape::dynamics::InteractionGroup group);
		::Dynamic set_group_dyn();

		 ::nape::callbacks::CbTypeList get_cbTypes();
		::Dynamic get_cbTypes_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace nape
} // end namespace phys

#endif /* INCLUDED_nape_phys_Interactor */ 
