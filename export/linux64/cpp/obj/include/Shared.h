// Generated by Haxe 3.4.0
#ifndef INCLUDED_Shared
#define INCLUDED_Shared

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Player)
HX_DECLARE_CLASS0(Shared)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IEventGetter)
HX_DECLARE_CLASS2(flixel,util,FlxTimer)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(gametime,Clock)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS1(world,MapGenerator)



class HXCPP_CLASS_ATTRIBUTES Shared_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Shared_obj OBJ_;
		Shared_obj();

	public:
		enum { _hx_ClassId = 0x51bfd2c5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Shared")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Shared"); }

		hx::ObjectPtr< Shared_obj > __new() {
			hx::ObjectPtr< Shared_obj > __this = new Shared_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Shared_obj > __alloc(hx::Ctx *_hx_ctx) {
			Shared_obj *__this = (Shared_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Shared_obj), false, "Shared"));
			*(void **)__this = Shared_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Shared_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Shared","\xc5","\xd2","\xbf","\x51"); }

		static void __boot();
		static int TILE_WIDTH;
		static int TILE_HEIGHT;
		static  ::world::MapGenerator mapGenerator;
		static  ::Player player;
		static  ::gametime::Clock clock;
		static  ::haxe::ds::StringMap supportedKeys;
		static  ::haxe::ds::StringMap supportedButtons;
		static void init();
		static ::Dynamic init_dyn();

};


#endif /* INCLUDED_Shared */ 
