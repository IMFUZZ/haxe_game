// Generated by Haxe 3.4.0
#ifndef INCLUDED_ui_InventoryBar
#define INCLUDED_ui_InventoryBar

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_addons_ui_FlxUISprite
#include <flixel/addons/ui/FlxUISprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUISprite)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(ui,InventoryBar)

namespace ui{


class HXCPP_CLASS_ATTRIBUTES InventoryBar_obj : public  ::flixel::addons::ui::FlxUISprite_obj
{
	public:
		typedef  ::flixel::addons::ui::FlxUISprite_obj super;
		typedef InventoryBar_obj OBJ_;
		InventoryBar_obj();

	public:
		enum { _hx_ClassId = 0x172dfd93 };

		void __construct(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ui.InventoryBar")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ui.InventoryBar"); }
		static hx::ObjectPtr< InventoryBar_obj > __new(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic);
		static hx::ObjectPtr< InventoryBar_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_x,hx::Null< Float >  __o_y, ::Dynamic simpleGraphic);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~InventoryBar_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("InventoryBar","\xb7","\x48","\x99","\xbb"); }

		 ::Dynamic originalImage;
		void update(Float elapsed);

		void onMouseDown( ::flixel::FlxSprite sprite);
		::Dynamic onMouseDown_dyn();

		void onMouseUp( ::flixel::FlxSprite sprite);
		::Dynamic onMouseUp_dyn();

		void onMouseOver( ::flixel::FlxSprite sprite);
		::Dynamic onMouseOver_dyn();

		void onMouseOut( ::flixel::FlxSprite sprite);
		::Dynamic onMouseOut_dyn();

};

} // end namespace ui

#endif /* INCLUDED_ui_InventoryBar */ 
