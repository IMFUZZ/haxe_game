// Generated by Haxe 3.4.0
#ifndef INCLUDED_zpp_nape_geom_ZPP_ConvexRayResult
#define INCLUDED_zpp_nape_geom_ZPP_ConvexRayResult

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(nape,geom,ConvexResult)
HX_DECLARE_CLASS2(nape,geom,RayResult)
HX_DECLARE_CLASS2(nape,geom,Vec2)
HX_DECLARE_CLASS2(nape,phys,Interactor)
HX_DECLARE_CLASS2(nape,shape,Shape)
HX_DECLARE_CLASS2(zpp_nape,geom,ZPP_ConvexRayResult)

namespace zpp_nape{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES ZPP_ConvexRayResult_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ZPP_ConvexRayResult_obj OBJ_;
		ZPP_ConvexRayResult_obj();

	public:
		enum { _hx_ClassId = 0x44641112 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="zpp_nape.geom.ZPP_ConvexRayResult")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"zpp_nape.geom.ZPP_ConvexRayResult"); }
		static hx::ObjectPtr< ZPP_ConvexRayResult_obj > __new();
		static hx::ObjectPtr< ZPP_ConvexRayResult_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ZPP_ConvexRayResult_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ZPP_ConvexRayResult","\x3b","\x71","\xb0","\x27"); }

		static void __boot();
		static  ::zpp_nape::geom::ZPP_ConvexRayResult convexPool;
		static  ::zpp_nape::geom::ZPP_ConvexRayResult rayPool;
		static bool internal;
		static  ::nape::geom::RayResult getRay( ::nape::geom::Vec2 normal,Float time,bool inner, ::nape::shape::Shape shape);
		static ::Dynamic getRay_dyn();

		static  ::nape::geom::ConvexResult getConvex( ::nape::geom::Vec2 normal, ::nape::geom::Vec2 position,Float toiDistance, ::nape::shape::Shape shape);
		static ::Dynamic getConvex_dyn();

		 ::nape::geom::Vec2 normal;
		 ::nape::shape::Shape shape;
		 ::nape::geom::ConvexResult convex;
		 ::nape::geom::Vec2 position;
		 ::nape::geom::RayResult ray;
		bool inner;
		 ::zpp_nape::geom::ZPP_ConvexRayResult next;
		Float toiDistance;
		void disposed();
		::Dynamic disposed_dyn();

		void free();
		::Dynamic free_dyn();

};

} // end namespace zpp_nape
} // end namespace geom

#endif /* INCLUDED_zpp_nape_geom_ZPP_ConvexRayResult */ 
