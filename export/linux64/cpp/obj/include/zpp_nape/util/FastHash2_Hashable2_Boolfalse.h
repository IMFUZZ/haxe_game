// Generated by Haxe 3.4.0
#ifndef INCLUDED_zpp_nape_util_FastHash2_Hashable2_Boolfalse
#define INCLUDED_zpp_nape_util_FastHash2_Hashable2_Boolfalse

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(zpp_nape,util,FastHash2_Hashable2_Boolfalse)
HX_DECLARE_CLASS2(zpp_nape,util,Hashable2_Boolfalse)

namespace zpp_nape{
namespace util{


class HXCPP_CLASS_ATTRIBUTES FastHash2_Hashable2_Boolfalse_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FastHash2_Hashable2_Boolfalse_obj OBJ_;
		FastHash2_Hashable2_Boolfalse_obj();

	public:
		enum { _hx_ClassId = 0x2427c07a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="zpp_nape.util.FastHash2_Hashable2_Boolfalse")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"zpp_nape.util.FastHash2_Hashable2_Boolfalse"); }
		static hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > __new();
		static hx::ObjectPtr< FastHash2_Hashable2_Boolfalse_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FastHash2_Hashable2_Boolfalse_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FastHash2_Hashable2_Boolfalse","\x4d","\xb3","\xf5","\x56"); }

		::Array< ::Dynamic> table;
		int cnt;
		bool empty();
		::Dynamic empty_dyn();

		void clear();
		::Dynamic clear_dyn();

		 ::zpp_nape::util::Hashable2_Boolfalse get(int id,int di);
		::Dynamic get_dyn();

		 ::zpp_nape::util::Hashable2_Boolfalse ordered_get(int id,int di);
		::Dynamic ordered_get_dyn();

		bool has(int id,int di);
		::Dynamic has_dyn();

		void maybeAdd( ::zpp_nape::util::Hashable2_Boolfalse arb);
		::Dynamic maybeAdd_dyn();

		void add( ::zpp_nape::util::Hashable2_Boolfalse arb);
		::Dynamic add_dyn();

		void remove( ::zpp_nape::util::Hashable2_Boolfalse arb);
		::Dynamic remove_dyn();

		int hash(int id,int di);
		::Dynamic hash_dyn();

};

} // end namespace zpp_nape
} // end namespace util

#endif /* INCLUDED_zpp_nape_util_FastHash2_Hashable2_Boolfalse */ 
