// Generated by Haxe 3.4.0
#ifndef INCLUDED_zpp_nape_util_ZNPArray2_Float
#define INCLUDED_zpp_nape_util_ZNPArray2_Float

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_b73ef00f7571df0a_175_new)
HX_DECLARE_CLASS2(zpp_nape,util,ZNPArray2_Float)

namespace zpp_nape{
namespace util{


class HXCPP_CLASS_ATTRIBUTES ZNPArray2_Float_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ZNPArray2_Float_obj OBJ_;
		ZNPArray2_Float_obj();

	public:
		enum { _hx_ClassId = 0x11202b83 };

		void __construct(int width,int height);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="zpp_nape.util.ZNPArray2_Float")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"zpp_nape.util.ZNPArray2_Float"); }

		hx::ObjectPtr< ZNPArray2_Float_obj > __new(int width,int height) {
			hx::ObjectPtr< ZNPArray2_Float_obj > __this = new ZNPArray2_Float_obj();
			__this->__construct(width,height);
			return __this;
		}

		static hx::ObjectPtr< ZNPArray2_Float_obj > __alloc(hx::Ctx *_hx_ctx,int width,int height) {
			ZNPArray2_Float_obj *__this = (ZNPArray2_Float_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZNPArray2_Float_obj), true, "zpp_nape.util.ZNPArray2_Float"));
			*(void **)__this = ZNPArray2_Float_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_b73ef00f7571df0a_175_new)
            	HX_STACK_THIS(__this)
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 177)		( ( ::zpp_nape::util::ZNPArray2_Float)(__this) )->width = (int)0;
HXLINE( 176)		( ( ::zpp_nape::util::ZNPArray2_Float)(__this) )->list = null();
HXLINE( 183)		( ( ::zpp_nape::util::ZNPArray2_Float)(__this) )->width = width;
HXLINE( 188)		( ( ::zpp_nape::util::ZNPArray2_Float)(__this) )->list = ::Array_obj< Float >::__new();
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ZNPArray2_Float_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ZNPArray2_Float","\x32","\x2b","\x6a","\xda"); }

		::Array< Float > list;
		int width;
		void resize(int width,int height,Float def);
		::Dynamic resize_dyn();

		Float get(int x,int y);
		::Dynamic get_dyn();

		Float set(int x,int y,Float obj);
		::Dynamic set_dyn();

};

} // end namespace zpp_nape
} // end namespace util

#endif /* INCLUDED_zpp_nape_util_ZNPArray2_Float */ 
