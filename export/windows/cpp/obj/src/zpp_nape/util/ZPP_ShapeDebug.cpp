// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_nape_constraint_Constraint
#include <nape/constraint/Constraint.h>
#endif
#ifndef INCLUDED_nape_dynamics_Arbiter
#include <nape/dynamics/Arbiter.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterIterator
#include <nape/dynamics/ArbiterIterator.h>
#endif
#ifndef INCLUDED_nape_dynamics_ArbiterList
#include <nape/dynamics/ArbiterList.h>
#endif
#ifndef INCLUDED_nape_dynamics_CollisionArbiter
#include <nape/dynamics/CollisionArbiter.h>
#endif
#ifndef INCLUDED_nape_dynamics_Contact
#include <nape/dynamics/Contact.h>
#endif
#ifndef INCLUDED_nape_dynamics_ContactList
#include <nape/dynamics/ContactList.h>
#endif
#ifndef INCLUDED_nape_dynamics_FluidArbiter
#include <nape/dynamics/FluidArbiter.h>
#endif
#ifndef INCLUDED_nape_geom_Vec2
#include <nape/geom/Vec2.h>
#endif
#ifndef INCLUDED_nape_phys_Body
#include <nape/phys/Body.h>
#endif
#ifndef INCLUDED_nape_phys_BodyList
#include <nape/phys/BodyList.h>
#endif
#ifndef INCLUDED_nape_phys_Interactor
#include <nape/phys/Interactor.h>
#endif
#ifndef INCLUDED_nape_shape_Shape
#include <nape/shape/Shape.h>
#endif
#ifndef INCLUDED_nape_shape_ShapeList
#include <nape/shape/ShapeList.h>
#endif
#ifndef INCLUDED_nape_space_Space
#include <nape/space/Space.h>
#endif
#ifndef INCLUDED_nape_util_Debug
#include <nape/util/Debug.h>
#endif
#ifndef INCLUDED_nape_util_ShapeDebug
#include <nape/util/ShapeDebug.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_CapsStyle
#include <openfl/_legacy/display/CapsStyle.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Graphics
#include <openfl/_legacy/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_JointStyle
#include <openfl/_legacy/display/JointStyle.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_LineScaleMode
#include <openfl/_legacy/display/LineScaleMode.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Shape
#include <openfl/_legacy/display/Shape.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_geom_Rectangle
#include <openfl/_legacy/geom/Rectangle.h>
#endif
#ifndef INCLUDED_zpp_nape_constraint_ZPP_Constraint
#include <zpp_nape/constraint/ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_Arbiter
#include <zpp_nape/dynamics/ZPP_Arbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_ColArbiter
#include <zpp_nape/dynamics/ZPP_ColArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_Contact
#include <zpp_nape/dynamics/ZPP_Contact.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_FluidArbiter
#include <zpp_nape/dynamics/ZPP_FluidArbiter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_InteractionFilter
#include <zpp_nape/dynamics/ZPP_InteractionFilter.h>
#endif
#ifndef INCLUDED_zpp_nape_dynamics_ZPP_SpaceArbiterList
#include <zpp_nape/dynamics/ZPP_SpaceArbiterList.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_AABB
#include <zpp_nape/geom/ZPP_AABB.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Mat23
#include <zpp_nape/geom/ZPP_Mat23.h>
#endif
#ifndef INCLUDED_zpp_nape_geom_ZPP_Vec2
#include <zpp_nape/geom/ZPP_Vec2.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Body
#include <zpp_nape/phys/ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Compound
#include <zpp_nape/phys/ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_phys_ZPP_Interactor
#include <zpp_nape/phys/ZPP_Interactor.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Circle
#include <zpp_nape/shape/ZPP_Circle.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Polygon
#include <zpp_nape/shape/ZPP_Polygon.h>
#endif
#ifndef INCLUDED_zpp_nape_shape_ZPP_Shape
#include <zpp_nape/shape/ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Broadphase
#include <zpp_nape/space/ZPP_Broadphase.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Component
#include <zpp_nape/space/ZPP_Component.h>
#endif
#ifndef INCLUDED_zpp_nape_space_ZPP_Space
#include <zpp_nape/space/ZPP_Space.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Body
#include <zpp_nape/util/ZNPList_ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Compound
#include <zpp_nape/util/ZNPList_ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Constraint
#include <zpp_nape/util/ZNPList_ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPList_ZPP_Shape
#include <zpp_nape/util/ZNPList_ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Body
#include <zpp_nape/util/ZNPNode_ZPP_Body.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Compound
#include <zpp_nape/util/ZNPNode_ZPP_Compound.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Constraint
#include <zpp_nape/util/ZNPNode_ZPP_Constraint.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZNPNode_ZPP_Shape
#include <zpp_nape/util/ZNPNode_ZPP_Shape.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ArbiterList
#include <zpp_nape/util/ZPP_ArbiterList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_BodyList
#include <zpp_nape/util/ZPP_BodyList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ContactList
#include <zpp_nape/util/ZPP_ContactList.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_Debug
#include <zpp_nape/util/ZPP_Debug.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_PubPool
#include <zpp_nape/util/ZPP_PubPool.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ShapeDebug
#include <zpp_nape/util/ZPP_ShapeDebug.h>
#endif
#ifndef INCLUDED_zpp_nape_util_ZPP_ShapeList
#include <zpp_nape/util/ZPP_ShapeList.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_430_new,"zpp_nape.util.ZPP_ShapeDebug","new",0x20392594,"zpp_nape.util.ZPP_ShapeDebug.new","zpp_nape/util/Debug.hx",430,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_443_setbg,"zpp_nape.util.ZPP_ShapeDebug","setbg",0x5dfba81b,"zpp_nape.util.ZPP_ShapeDebug.setbg","zpp_nape/util/Debug.hx",443,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_446_draw_compound,"zpp_nape.util.ZPP_ShapeDebug","draw_compound",0x5da94c7a,"zpp_nape.util.ZPP_ShapeDebug.draw_compound","zpp_nape/util/Debug.hx",446,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_474_draw_space,"zpp_nape.util.ZPP_ShapeDebug","draw_space",0xbf5b5457,"zpp_nape.util.ZPP_ShapeDebug.draw_space","zpp_nape/util/Debug.hx",474,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_573_draw_body,"zpp_nape.util.ZPP_ShapeDebug","draw_body",0xd5799031,"zpp_nape.util.ZPP_ShapeDebug.draw_body","zpp_nape/util/Debug.hx",573,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_775_draw_shape,"zpp_nape.util.ZPP_ShapeDebug","draw_shape",0xba11aab2,"zpp_nape.util.ZPP_ShapeDebug.draw_shape","zpp_nape/util/Debug.hx",775,0xeecbde16)
HX_DEFINE_STACK_FRAME(_hx_pos_3fe31e6b5404797c_1033_draw_arbiter,"zpp_nape.util.ZPP_ShapeDebug","draw_arbiter",0x43b84dba,"zpp_nape.util.ZPP_ShapeDebug.draw_arbiter","zpp_nape/util/Debug.hx",1033,0xeecbde16)
namespace zpp_nape{
namespace util{

void ZPP_ShapeDebug_obj::__construct(int width,int height){
            	HX_GC_STACKFRAME(&_hx_pos_3fe31e6b5404797c_430_new)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 473)		this->bodyList = null();
HXLINE( 472)		this->shapeList = null();
HXLINE( 445)		this->compoundstack = null();
HXLINE( 433)		this->graphics = null();
HXLINE( 432)		this->shape = null();
HXLINE( 431)		this->outer_zn = null();
HXLINE( 435)		super::__construct(width,height);
HXLINE( 436)		this->shape =  ::openfl::_legacy::display::Shape_obj::__alloc( HX_CTX );
HXLINE( 437)		 ::openfl::_legacy::display::Shape _hx_tmp = this->shape;
HXDLIN( 437)		_hx_tmp->set_scrollRect( ::openfl::_legacy::geom::Rectangle_obj::__alloc( HX_CTX ,(int)0,(int)0,width,height));
HXLINE( 438)		this->graphics = this->shape->get_graphics();
HXLINE( 439)		this->isbmp = false;
HXLINE( 440)		this->d_shape = hx::ObjectPtr<OBJ_>(this);
            	}

Dynamic ZPP_ShapeDebug_obj::__CreateEmpty() { return new ZPP_ShapeDebug_obj; }

void *ZPP_ShapeDebug_obj::_hx_vtable = 0;

Dynamic ZPP_ShapeDebug_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ZPP_ShapeDebug_obj > _hx_result = new ZPP_ShapeDebug_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ZPP_ShapeDebug_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x41fbb6e6) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x41fbb6e6;
	} else {
		return inClassId==(int)0x557db75f;
	}
}

void ZPP_ShapeDebug_obj::setbg(int bgColor){
            	HX_STACKFRAME(&_hx_pos_3fe31e6b5404797c_443_setbg)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(bgColor,"bgColor")
HXLINE( 443)		this->sup_setbg(bgColor);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ZPP_ShapeDebug_obj,setbg,(void))

void ZPP_ShapeDebug_obj::draw_compound( ::zpp_nape::phys::ZPP_Compound compound, ::zpp_nape::geom::ZPP_Mat23 xform,Float xdet,bool xnull){
            	HX_STACKFRAME(&_hx_pos_3fe31e6b5404797c_446_draw_compound)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(compound,"compound")
            	HX_STACK_ARG(xform,"xform")
            	HX_STACK_ARG(xdet,"xdet")
            	HX_STACK_ARG(xnull,"xnull")
HXLINE( 447)		{
HXLINE( 448)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_Compound,cx_ite) = compound->compounds->head;
HXLINE( 449)			while(hx::IsNotNull( cx_ite )){
HXLINE( 451)				this->draw_compound(cx_ite->elt,xform,xdet,xnull);
HXLINE( 452)				cx_ite = cx_ite->next;
            			}
            		}
HXLINE( 455)		{
HXLINE( 456)			HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Body,cx_ite1,"cx_ite") = compound->bodies->head;
HXLINE( 457)			while(hx::IsNotNull( cx_ite1 )){
HXLINE( 458)				HX_VARI(  ::zpp_nape::phys::ZPP_Body,b) = cx_ite1->elt;
HXLINE( 459)				if (b->outer->debugDraw) {
HXLINE( 459)					this->draw_body(b,xform,xdet,xnull);
            				}
HXLINE( 460)				cx_ite1 = cx_ite1->next;
            			}
            		}
HXLINE( 463)		{
HXLINE( 464)			HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Constraint,cx_ite2,"cx_ite") = compound->constraints->head;
HXLINE( 465)			while(hx::IsNotNull( cx_ite2 )){
HXLINE( 466)				HX_VARI(  ::zpp_nape::constraint::ZPP_Constraint,c) = cx_ite2->elt;
HXLINE( 467)				bool _hx_tmp;
HXDLIN( 467)				if (c->active) {
HXLINE( 467)					_hx_tmp = c->outer->debugDraw;
            				}
            				else {
HXLINE( 467)					_hx_tmp = false;
            				}
HXDLIN( 467)				if (_hx_tmp) {
HXLINE( 467)					c->draw(this->outer);
            				}
HXLINE( 468)				cx_ite2 = cx_ite2->next;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ZPP_ShapeDebug_obj,draw_compound,(void))

void ZPP_ShapeDebug_obj::draw_space( ::zpp_nape::space::ZPP_Space space, ::zpp_nape::geom::ZPP_Mat23 xform,Float xdet,bool xnull){
            	HX_GC_STACKFRAME(&_hx_pos_3fe31e6b5404797c_474_draw_space)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(space,"space")
            	HX_STACK_ARG(xform,"xform")
            	HX_STACK_ARG(xdet,"xdet")
            	HX_STACK_ARG(xnull,"xnull")
HXLINE( 475)		if (this->outer->cullingEnabled) {
HXLINE( 476)			if (this->outer->drawBodies) {
HXLINE( 477)				if (this->outer->drawBodyDetail) {
HXLINE( 478)					HX_VARI(  ::nape::phys::BodyList,bods) = (this->bodyList = space->bphase->bodiesInAABB(this->iport,false,false,null(),this->bodyList));
HXLINE( 479)					while(hx::IsNotNull( bods->zpp_inner->inner->head )){
HXLINE( 480)						HX_VARI(  ::nape::phys::Body,b) = bods->shift();
HXLINE( 481)						if (b->debugDraw) {
HXLINE( 481)							this->draw_body(b->zpp_inner,xform,xdet,xnull);
            						}
            					}
            				}
            				else {
HXLINE( 485)					HX_VARI(  ::nape::shape::ShapeList,shapes) = (this->shapeList = space->bphase->shapesInAABB(this->iport,false,false,null(),this->shapeList));
HXLINE( 486)					while(hx::IsNotNull( shapes->zpp_inner->inner->head )){
HXLINE( 487)						HX_VARI(  ::nape::shape::Shape,s) = shapes->shift();
HXLINE( 488)						 ::nape::phys::Body _hx_tmp;
HXDLIN( 488)						if (hx::IsNotNull( s->zpp_inner->body )) {
HXLINE( 488)							_hx_tmp = s->zpp_inner->body->outer;
            						}
            						else {
HXLINE( 488)							_hx_tmp = null();
            						}
HXDLIN( 488)						if (_hx_tmp->debugDraw) {
HXLINE( 488)							this->draw_shape(s->zpp_inner,xform,xdet,xnull);
            						}
            					}
            				}
            			}
            		}
            		else {
HXLINE( 494)			if (this->outer->drawBodies) {
HXLINE( 495)				if (hx::IsNull( this->compoundstack )) {
HXLINE( 495)					this->compoundstack =  ::zpp_nape::util::ZNPList_ZPP_Compound_obj::__alloc( HX_CTX );
            				}
HXLINE( 496)				{
HXLINE( 497)					HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_Body,cx_ite) = space->bodies->head;
HXLINE( 498)					while(hx::IsNotNull( cx_ite )){
HXLINE( 499)						HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,b1,"b") = cx_ite->elt;
HXLINE( 500)						if (b1->outer->debugDraw) {
HXLINE( 500)							this->draw_body(b1,xform,xdet,xnull);
            						}
HXLINE( 501)						cx_ite = cx_ite->next;
            					}
            				}
HXLINE( 504)				{
HXLINE( 505)					HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Compound,cx_ite1,"cx_ite") = space->compounds->head;
HXLINE( 506)					while(hx::IsNotNull( cx_ite1 )){
HXLINE( 508)						this->compoundstack->add(cx_ite1->elt);
HXLINE( 509)						cx_ite1 = cx_ite1->next;
            					}
            				}
HXLINE( 512)				while(hx::IsNotNull( this->compoundstack->head )){
HXLINE( 513)					HX_VARI(  ::zpp_nape::phys::ZPP_Compound,x) = this->compoundstack->pop_unsafe();
HXLINE( 514)					{
HXLINE( 515)						HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Body,cx_ite2,"cx_ite") = x->bodies->head;
HXLINE( 516)						while(hx::IsNotNull( cx_ite2 )){
HXLINE( 517)							HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,b2,"b") = cx_ite2->elt;
HXLINE( 518)							if (b2->outer->debugDraw) {
HXLINE( 518)								this->draw_body(b2,xform,xdet,xnull);
            							}
HXLINE( 519)							cx_ite2 = cx_ite2->next;
            						}
            					}
HXLINE( 522)					{
HXLINE( 523)						HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Compound,cx_ite3,"cx_ite") = x->compounds->head;
HXLINE( 524)						while(hx::IsNotNull( cx_ite3 )){
HXLINE( 526)							this->compoundstack->add(cx_ite3->elt);
HXLINE( 527)							cx_ite3 = cx_ite3->next;
            						}
            					}
            				}
            			}
            		}
HXLINE( 533)		bool _hx_tmp1;
HXDLIN( 533)		bool _hx_tmp2;
HXDLIN( 533)		if (!(this->outer->drawCollisionArbiters)) {
HXLINE( 533)			_hx_tmp2 = this->outer->drawFluidArbiters;
            		}
            		else {
HXLINE( 533)			_hx_tmp2 = true;
            		}
HXDLIN( 533)		if (!(_hx_tmp2)) {
HXLINE( 533)			_hx_tmp1 = this->outer->drawSensorArbiters;
            		}
            		else {
HXLINE( 533)			_hx_tmp1 = true;
            		}
HXDLIN( 533)		if (_hx_tmp1) {
HXLINE( 533)			HX_VARI(  ::nape::space::Space,_this) = space->outer;
HXDLIN( 533)			if (hx::IsNull( _this->zpp_inner->wrap_arbiters )) {
HXLINE( 533)				HX_VARI(  ::zpp_nape::dynamics::ZPP_SpaceArbiterList,ret) =  ::zpp_nape::dynamics::ZPP_SpaceArbiterList_obj::__alloc( HX_CTX );
HXDLIN( 533)				ret->space = _this->zpp_inner;
HXDLIN( 533)				_this->zpp_inner->wrap_arbiters = ret;
            			}
HXDLIN( 533)			HX_VARI(  ::nape::dynamics::ArbiterIterator,_g) = _this->zpp_inner->wrap_arbiters->iterator();
HXDLIN( 533)			while(true){
HXLINE( 533)				_g->zpp_inner->zpp_inner->valmod();
HXDLIN( 533)				HX_VARI( int,length) = _g->zpp_inner->zpp_gl();
HXDLIN( 533)				_g->zpp_critical = true;
HXDLIN( 533)				bool _hx_tmp3;
HXDLIN( 533)				if ((_g->zpp_i < length)) {
HXLINE( 533)					_hx_tmp3 = true;
            				}
            				else {
HXLINE( 533)					{
HXLINE( 533)						_g->zpp_next = ::nape::dynamics::ArbiterIterator_obj::zpp_pool;
HXDLIN( 533)						::nape::dynamics::ArbiterIterator_obj::zpp_pool = _g;
HXDLIN( 533)						_g->zpp_inner = null();
            					}
HXDLIN( 533)					_hx_tmp3 = false;
            				}
HXDLIN( 533)				if (!(_hx_tmp3)) {
HXLINE( 533)					goto _hx_goto_13;
            				}
HXDLIN( 533)				_g->zpp_critical = false;
HXDLIN( 533)				this->draw_arbiter(_g->zpp_inner->at(_g->zpp_i++)->zpp_inner,xform,xdet,xnull);
            			}
            			_hx_goto_13:;
            		}
HXLINE( 534)		if (this->outer->drawConstraints) {
HXLINE( 535)			if (hx::IsNull( this->compoundstack )) {
HXLINE( 535)				this->compoundstack =  ::zpp_nape::util::ZNPList_ZPP_Compound_obj::__alloc( HX_CTX );
            			}
HXLINE( 536)			{
HXLINE( 537)				HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Constraint,cx_ite4,"cx_ite") = space->constraints->head;
HXLINE( 538)				while(hx::IsNotNull( cx_ite4 )){
HXLINE( 539)					HX_VARI(  ::zpp_nape::constraint::ZPP_Constraint,c) = cx_ite4->elt;
HXLINE( 540)					bool _hx_tmp4;
HXDLIN( 540)					if (c->active) {
HXLINE( 540)						_hx_tmp4 = c->outer->debugDraw;
            					}
            					else {
HXLINE( 540)						_hx_tmp4 = false;
            					}
HXDLIN( 540)					if (_hx_tmp4) {
HXLINE( 540)						c->draw(this->outer);
            					}
HXLINE( 541)					cx_ite4 = cx_ite4->next;
            				}
            			}
HXLINE( 544)			{
HXLINE( 545)				HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Compound,cx_ite5,"cx_ite") = space->compounds->head;
HXLINE( 546)				while(hx::IsNotNull( cx_ite5 )){
HXLINE( 548)					this->compoundstack->add(cx_ite5->elt);
HXLINE( 549)					cx_ite5 = cx_ite5->next;
            				}
            			}
HXLINE( 552)			while(hx::IsNotNull( this->compoundstack->head )){
HXLINE( 553)				HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Compound,x1,"x") = this->compoundstack->pop_unsafe();
HXLINE( 554)				{
HXLINE( 555)					HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Constraint,cx_ite6,"cx_ite") = x1->constraints->head;
HXLINE( 556)					while(hx::IsNotNull( cx_ite6 )){
HXLINE( 557)						HX_VARI_NAME(  ::zpp_nape::constraint::ZPP_Constraint,c1,"c") = cx_ite6->elt;
HXLINE( 558)						bool _hx_tmp5;
HXDLIN( 558)						if (c1->active) {
HXLINE( 558)							_hx_tmp5 = c1->outer->debugDraw;
            						}
            						else {
HXLINE( 558)							_hx_tmp5 = false;
            						}
HXDLIN( 558)						if (_hx_tmp5) {
HXLINE( 558)							c1->draw(this->outer);
            						}
HXLINE( 559)						cx_ite6 = cx_ite6->next;
            					}
            				}
HXLINE( 562)				{
HXLINE( 563)					HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Compound,cx_ite7,"cx_ite") = x1->compounds->head;
HXLINE( 564)					while(hx::IsNotNull( cx_ite7 )){
HXLINE( 566)						this->compoundstack->add(cx_ite7->elt);
HXLINE( 567)						cx_ite7 = cx_ite7->next;
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ZPP_ShapeDebug_obj,draw_space,(void))

void ZPP_ShapeDebug_obj::draw_body( ::zpp_nape::phys::ZPP_Body body, ::zpp_nape::geom::ZPP_Mat23 xform,Float xdet,bool xnull){
            	HX_STACKFRAME(&_hx_pos_3fe31e6b5404797c_573_draw_body)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(body,"body")
            	HX_STACK_ARG(xform,"xform")
            	HX_STACK_ARG(xdet,"xdet")
            	HX_STACK_ARG(xnull,"xnull")
HXLINE( 574)		{
HXLINE( 575)			HX_VARI(  ::zpp_nape::util::ZNPNode_ZPP_Shape,cx_ite) = body->shapes->head;
HXLINE( 576)			while(hx::IsNotNull( cx_ite )){
HXLINE( 578)				this->draw_shape(cx_ite->elt,xform,xdet,xnull);
HXLINE( 579)				cx_ite = cx_ite->next;
            			}
            		}
HXLINE( 582)		if (this->outer->drawBodyDetail) {
HXLINE( 584)			HX_VAR( int,idc);
HXLINE( 585)			if (hx::IsNull( this->outer->colour )) {
HXLINE( 585)				idc = ::Std_obj::_hx_int(((int)16777215 * ::Math_obj::exp(((Float)-(hx::Mod(body->id,(int)500)) / (Float)(int)1500))));
            			}
            			else {
HXLINE( 586)				idc = ( (int)(this->outer->colour(body->id)) );
            			}
HXLINE( 587)			HX_VARI( Float,_r) = (((int)((int)idc & (int)(int)16711680) >> (int)(int)16) * ((Float)0.7));
HXLINE( 588)			HX_VARI( Float,_g) = (((int)((int)idc & (int)(int)65280) >> (int)(int)8) * ((Float)0.7));
HXLINE( 589)			HX_VARI( Float,_b) = (((int)idc & (int)(int)255) * ((Float)0.7));
HXLINE( 590)			bool _hx_tmp;
HXDLIN( 590)			if (hx::IsNotNull( body->space )) {
HXLINE( 590)				_hx_tmp = body->outer->zpp_inner->component->sleeping;
            			}
            			else {
HXLINE( 590)				_hx_tmp = false;
            			}
HXDLIN( 590)			if (_hx_tmp) {
HXLINE( 591)				_r = ((((Float)0.4) * _r) + (((Float)0.6) * this->bg_r));
HXLINE( 592)				_g = ((((Float)0.4) * _g) + (((Float)0.6) * this->bg_g));
HXLINE( 593)				_b = ((((Float)0.4) * _b) + (((Float)0.6) * this->bg_b));
            			}
HXLINE( 595)			HX_VARI( int,col) = ((int)(int)-16777216 | (int)((int)::Std_obj::_hx_int(_r) << (int)(int)16));
HXDLIN( 595)			HX_VARI_NAME( int,col1,"col") = ((int)col | (int)((int)::Std_obj::_hx_int(_g) << (int)(int)8));
HXLINE( 583)			HX_VARI_NAME( int,col2,"col") = ((int)col1 | (int)::Std_obj::_hx_int(_b));
HXLINE( 597)			 ::openfl::_legacy::display::Graphics _hx_tmp1 = this->graphics;
HXDLIN( 597)			Float _hx_tmp2 = this->outer_zn->thickness;
HXLINE( 601)			HX_VARI_NAME( int,_r1,"_r") = ::Std_obj::_hx_int(((((int)((int)col2 >> (int)(int)16) & (int)(int)255) * ((Float)0.8)) + ((Float)50.999999999999986)));
HXLINE( 602)			HX_VARI_NAME( int,_g1,"_g") = ::Std_obj::_hx_int((((int)((int)col2 >> (int)(int)8) & (int)(int)255) * ((Float)0.8)));
HXLINE( 597)			_hx_tmp1->lineStyle(_hx_tmp2,((int)((int)((int)(int)-16777216 | (int)((int)_r1 << (int)(int)16)) | (int)((int)_g1 << (int)(int)8)) | (int)::Std_obj::_hx_int((((int)col2 & (int)(int)255) * ((Float)0.8)))),(int)1,null(),null(),null(),null(),null());
HXLINE( 607)			HX_VARI( Float,px) = ((Float)0.0);
HXLINE( 608)			HX_VARI( Float,py) = ((Float)0.0);
HXLINE( 609)			HX_VARI( Float,qx) = ((Float)0.0);
HXLINE( 610)			HX_VARI( Float,qy) = ((Float)0.0);
HXLINE( 611)			if (hx::IsNotNull( body->shapes->head )) {
HXLINE( 612)				body->validate_worldCOM();
HXLINE( 613)				if (xnull) {
HXLINE( 614)					px = body->worldCOMx;
HXLINE( 615)					py = body->worldCOMy;
            				}
            				else {
HXLINE( 634)					px = (((xform->a * body->worldCOMx) + (xform->b * body->worldCOMy)) + xform->tx);
HXLINE( 635)					py = (((xform->c * body->worldCOMx) + (xform->d * body->worldCOMy)) + xform->ty);
            				}
HXLINE( 637)				this->graphics->drawCircle(px,py,(int)1);
HXLINE( 638)				if (body->zip_aabb) {
HXLINE( 638)					body->zip_aabb = false;
HXDLIN( 638)					{
HXLINE( 638)						body->aabb->minx = ::Math_obj::POSITIVE_INFINITY;
HXDLIN( 638)						body->aabb->miny = ::Math_obj::POSITIVE_INFINITY;
            					}
HXDLIN( 638)					{
HXLINE( 638)						body->aabb->maxx = ::Math_obj::NEGATIVE_INFINITY;
HXDLIN( 638)						body->aabb->maxy = ::Math_obj::NEGATIVE_INFINITY;
            					}
HXDLIN( 638)					{
HXLINE( 638)						HX_VARI_NAME(  ::zpp_nape::util::ZNPNode_ZPP_Shape,cx_ite1,"cx_ite") = body->shapes->head;
HXDLIN( 638)						while(hx::IsNotNull( cx_ite1 )){
HXLINE( 638)							HX_VARI(  ::zpp_nape::shape::ZPP_Shape,s) = cx_ite1->elt;
HXDLIN( 638)							{
HXLINE( 638)								if (s->zip_aabb) {
HXLINE( 638)									if (hx::IsNotNull( s->body )) {
HXLINE( 638)										s->zip_aabb = false;
HXDLIN( 638)										if ((s->type == (int)0)) {
HXLINE( 638)											HX_VARI(  ::zpp_nape::shape::ZPP_Circle,_this) = s->circle;
HXDLIN( 638)											if (_this->zip_worldCOM) {
HXLINE( 638)												if (hx::IsNotNull( _this->body )) {
HXLINE( 638)													_this->zip_worldCOM = false;
HXDLIN( 638)													if (_this->zip_localCOM) {
HXLINE( 638)														_this->zip_localCOM = false;
HXDLIN( 638)														if ((_this->type == (int)1)) {
HXLINE( 638)															HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this1,"_this") = _this->polygon;
HXDLIN( 638)															if (hx::IsNull( _this1->lverts->next->next )) {
HXLINE( 638)																_this1->localCOMx = _this1->lverts->next->x;
HXDLIN( 638)																_this1->localCOMy = _this1->lverts->next->y;
            															}
            															else {
HXLINE( 638)																if (hx::IsNull( _this1->lverts->next->next->next )) {
HXLINE( 638)																	{
HXLINE( 638)																		_this1->localCOMx = _this1->lverts->next->x;
HXDLIN( 638)																		_this1->localCOMy = _this1->lverts->next->y;
            																	}
HXDLIN( 638)																	{
HXLINE( 638)																		_this1->localCOMx = (_this1->localCOMx + _this1->lverts->next->next->x);
HXDLIN( 638)																		_this1->localCOMy = (_this1->localCOMy + _this1->lverts->next->next->y);
            																	}
HXDLIN( 638)																	{
HXLINE( 638)																		_this1->localCOMx = (_this1->localCOMx * ((Float)0.5));
HXDLIN( 638)																		_this1->localCOMy = (_this1->localCOMy * ((Float)0.5));
            																	}
            																}
            																else {
HXLINE( 638)																	{
HXLINE( 638)																		_this1->localCOMx = (int)0;
HXDLIN( 638)																		_this1->localCOMy = (int)0;
            																	}
HXDLIN( 638)																	HX_VARI( Float,area) = ((Float)0.0);
HXDLIN( 638)																	{
HXLINE( 638)																		HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite2,"cx_ite") = _this1->lverts->next;
HXDLIN( 638)																		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,u) = cx_ite2;
HXDLIN( 638)																		cx_ite2 = cx_ite2->next;
HXDLIN( 638)																		HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,v) = cx_ite2;
HXDLIN( 638)																		cx_ite2 = cx_ite2->next;
HXDLIN( 638)																		while(hx::IsNotNull( cx_ite2 )){
HXLINE( 638)																			HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,w) = cx_ite2;
HXDLIN( 638)																			{
HXLINE( 638)																				area = (area + (v->x * (w->y - u->y)));
HXDLIN( 638)																				HX_VARI( Float,cf) = ((w->y * v->x) - (w->x * v->y));
HXDLIN( 638)																				_this1->localCOMx = (_this1->localCOMx + ((v->x + w->x) * cf));
HXDLIN( 638)																				_this1->localCOMy = (_this1->localCOMy + ((v->y + w->y) * cf));
            																			}
HXDLIN( 638)																			u = v;
HXDLIN( 638)																			v = w;
HXDLIN( 638)																			cx_ite2 = cx_ite2->next;
            																		}
HXDLIN( 638)																		cx_ite2 = _this1->lverts->next;
HXDLIN( 638)																		HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w1,"w") = cx_ite2;
HXDLIN( 638)																		{
HXLINE( 638)																			area = (area + (v->x * (w1->y - u->y)));
HXDLIN( 638)																			HX_VARI_NAME( Float,cf1,"cf") = ((w1->y * v->x) - (w1->x * v->y));
HXDLIN( 638)																			_this1->localCOMx = (_this1->localCOMx + ((v->x + w1->x) * cf1));
HXDLIN( 638)																			_this1->localCOMy = (_this1->localCOMy + ((v->y + w1->y) * cf1));
            																		}
HXDLIN( 638)																		u = v;
HXDLIN( 638)																		cx_ite2 = cx_ite2->next;
HXDLIN( 638)																		HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w2,"w") = cx_ite2;
HXDLIN( 638)																		{
HXLINE( 638)																			area = (area + (w1->x * (w2->y - u->y)));
HXDLIN( 638)																			HX_VARI_NAME( Float,cf2,"cf") = ((w2->y * w1->x) - (w2->x * w1->y));
HXDLIN( 638)																			_this1->localCOMx = (_this1->localCOMx + ((w1->x + w2->x) * cf2));
HXDLIN( 638)																			_this1->localCOMy = (_this1->localCOMy + ((w1->y + w2->y) * cf2));
            																		}
            																	}
HXDLIN( 638)																	area = ((Float)(int)1 / (Float)((int)3 * area));
HXDLIN( 638)																	{
HXLINE( 638)																		HX_VARI( Float,t) = area;
HXDLIN( 638)																		_this1->localCOMx = (_this1->localCOMx * t);
HXDLIN( 638)																		_this1->localCOMy = (_this1->localCOMy * t);
            																	}
            																}
            															}
            														}
HXDLIN( 638)														if (hx::IsNotNull( _this->wrap_localCOM )) {
HXLINE( 638)															_this->wrap_localCOM->zpp_inner->x = _this->localCOMx;
HXDLIN( 638)															_this->wrap_localCOM->zpp_inner->y = _this->localCOMy;
            														}
            													}
HXDLIN( 638)													{
HXLINE( 638)														HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this2,"_this") = _this->body;
HXDLIN( 638)														if (_this2->zip_axis) {
HXLINE( 638)															_this2->zip_axis = false;
HXDLIN( 638)															{
HXLINE( 638)																_this2->axisx = ::Math_obj::sin(_this2->rot);
HXDLIN( 638)																_this2->axisy = ::Math_obj::cos(_this2->rot);
            															}
            														}
            													}
HXDLIN( 638)													{
HXLINE( 638)														_this->worldCOMx = (_this->body->posx + ((_this->body->axisy * _this->localCOMx) - (_this->body->axisx * _this->localCOMy)));
HXDLIN( 638)														_this->worldCOMy = (_this->body->posy + ((_this->localCOMx * _this->body->axisx) + (_this->localCOMy * _this->body->axisy)));
            													}
            												}
            											}
HXDLIN( 638)											HX_VARI( Float,rx) = _this->radius;
HXDLIN( 638)											HX_VARI( Float,ry) = _this->radius;
HXDLIN( 638)											{
HXLINE( 638)												_this->aabb->minx = (_this->worldCOMx - rx);
HXDLIN( 638)												_this->aabb->miny = (_this->worldCOMy - ry);
            											}
HXDLIN( 638)											{
HXLINE( 638)												_this->aabb->maxx = (_this->worldCOMx + rx);
HXDLIN( 638)												_this->aabb->maxy = (_this->worldCOMy + ry);
            											}
            										}
            										else {
HXLINE( 638)											HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this3,"_this") = s->polygon;
HXDLIN( 638)											if (_this3->zip_gverts) {
HXLINE( 638)												if (hx::IsNotNull( _this3->body )) {
HXLINE( 638)													_this3->zip_gverts = false;
HXDLIN( 638)													_this3->validate_lverts();
HXDLIN( 638)													{
HXLINE( 638)														HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this4,"_this") = _this3->body;
HXDLIN( 638)														if (_this4->zip_axis) {
HXLINE( 638)															_this4->zip_axis = false;
HXDLIN( 638)															{
HXLINE( 638)																_this4->axisx = ::Math_obj::sin(_this4->rot);
HXDLIN( 638)																_this4->axisy = ::Math_obj::cos(_this4->rot);
            															}
            														}
            													}
HXDLIN( 638)													HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,li) = _this3->lverts->next;
HXDLIN( 638)													{
HXLINE( 638)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite3,"cx_ite") = _this3->gverts->next;
HXDLIN( 638)														while(hx::IsNotNull( cx_ite3 )){
HXLINE( 638)															HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,g) = cx_ite3;
HXDLIN( 638)															{
HXLINE( 638)																HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,l) = li;
HXDLIN( 638)																li = li->next;
HXDLIN( 638)																{
HXLINE( 638)																	g->x = (_this3->body->posx + ((_this3->body->axisy * l->x) - (_this3->body->axisx * l->y)));
HXDLIN( 638)																	g->y = (_this3->body->posy + ((l->x * _this3->body->axisx) + (l->y * _this3->body->axisy)));
            																}
            															}
HXDLIN( 638)															cx_ite3 = cx_ite3->next;
            														}
            													}
            												}
            											}
HXDLIN( 638)											 ::zpp_nape::geom::ZPP_Vec2 _this5 = _this3->gverts->next;
HXDLIN( 638)											{
HXLINE( 638)												_this3->aabb->minx = _this5->x;
HXDLIN( 638)												_this3->aabb->miny = _this5->y;
            											}
HXDLIN( 638)											{
HXLINE( 638)												_this3->aabb->maxx = _this5->x;
HXDLIN( 638)												_this3->aabb->maxy = _this5->y;
            											}
HXDLIN( 638)											{
HXLINE( 638)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite4,"cx_ite") = _this3->gverts->next->next;
HXDLIN( 638)												while(hx::IsNotNull( cx_ite4 )){
HXLINE( 638)													HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,p) = cx_ite4;
HXDLIN( 638)													{
HXLINE( 638)														if ((p->x < _this3->aabb->minx)) {
HXLINE( 638)															_this3->aabb->minx = p->x;
            														}
HXDLIN( 638)														if ((p->x > _this3->aabb->maxx)) {
HXLINE( 638)															_this3->aabb->maxx = p->x;
            														}
HXDLIN( 638)														if ((p->y < _this3->aabb->miny)) {
HXLINE( 638)															_this3->aabb->miny = p->y;
            														}
HXDLIN( 638)														if ((p->y > _this3->aabb->maxy)) {
HXLINE( 638)															_this3->aabb->maxy = p->y;
            														}
            													}
HXDLIN( 638)													cx_ite4 = cx_ite4->next;
            												}
            											}
            										}
            									}
            								}
HXDLIN( 638)								{
HXLINE( 638)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this6,"_this") = body->aabb;
HXDLIN( 638)									HX_VARI(  ::zpp_nape::geom::ZPP_AABB,x) = s->aabb;
HXDLIN( 638)									if ((x->minx < _this6->minx)) {
HXLINE( 638)										_this6->minx = x->minx;
            									}
HXDLIN( 638)									if ((x->maxx > _this6->maxx)) {
HXLINE( 638)										_this6->maxx = x->maxx;
            									}
HXDLIN( 638)									if ((x->miny < _this6->miny)) {
HXLINE( 638)										_this6->miny = x->miny;
            									}
HXDLIN( 638)									if ((x->maxy > _this6->maxy)) {
HXLINE( 638)										_this6->maxy = x->maxy;
            									}
            								}
            							}
HXDLIN( 638)							cx_ite1 = cx_ite1->next;
            						}
            					}
            				}
HXLINE( 640)				if (xnull) {
HXLINE( 640)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this7,"_this") = body->aabb;
HXDLIN( 640)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this8,"_this") = body->aabb;
HXDLIN( 640)					this->graphics->drawRect(body->aabb->minx,body->aabb->miny,(_this7->maxx - _this7->minx),(_this8->maxy - _this8->miny));
            				}
            				else {
HXLINE( 642)					HX_VARI( Float,ox) = ((Float)0.0);
HXLINE( 643)					HX_VARI( Float,oy) = ((Float)0.0);
HXLINE( 664)					{
HXLINE( 665)						ox = (((xform->a * body->aabb->minx) + (xform->b * body->aabb->miny)) + xform->tx);
HXLINE( 666)						oy = (((xform->c * body->aabb->minx) + (xform->d * body->aabb->miny)) + xform->ty);
            					}
HXLINE( 668)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this9,"_this") = body->aabb;
HXDLIN( 668)					HX_VARI( Float,wx) = (_this9->maxx - _this9->minx);
HXLINE( 669)					HX_VARI( Float,wy) = (int)0;
HXLINE( 686)					{
HXLINE( 687)						HX_VARI_NAME( Float,t1,"t") = ((xform->a * wx) + (xform->b * wy));
HXLINE( 688)						wy = ((xform->c * wx) + (xform->d * wy));
HXLINE( 689)						wx = t1;
            					}
HXLINE( 691)					HX_VARI( Float,hx) = (int)0;
HXLINE( 692)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this10,"_this") = body->aabb;
HXDLIN( 692)					HX_VARI( Float,hy) = (_this10->maxy - _this10->miny);
HXLINE( 709)					{
HXLINE( 710)						HX_VARI_NAME( Float,t2,"t") = ((xform->a * hx) + (xform->b * hy));
HXLINE( 711)						hy = ((xform->c * hx) + (xform->d * hy));
HXLINE( 712)						hx = t2;
            					}
HXLINE( 714)					this->graphics->moveTo(ox,oy);
HXLINE( 715)					this->graphics->lineTo((ox + wx),(oy + wy));
HXLINE( 716)					this->graphics->lineTo(((ox + wx) + hx),((oy + wy) + hy));
HXLINE( 717)					this->graphics->lineTo((ox + hx),(oy + hy));
HXLINE( 718)					this->graphics->lineTo(ox,oy);
            				}
            			}
HXLINE( 722)			if (xnull) {
HXLINE( 723)				qx = body->pre_posx;
HXLINE( 724)				qy = body->pre_posy;
            			}
            			else {
HXLINE( 743)				qx = (((xform->a * body->pre_posx) + (xform->b * body->pre_posy)) + xform->tx);
HXLINE( 744)				qy = (((xform->c * body->pre_posx) + (xform->d * body->pre_posy)) + xform->ty);
            			}
HXLINE( 746)			if (xnull) {
HXLINE( 747)				px = body->posx;
HXLINE( 748)				py = body->posy;
            			}
            			else {
HXLINE( 767)				px = (((xform->a * body->posx) + (xform->b * body->posy)) + xform->tx);
HXLINE( 768)				py = (((xform->c * body->posx) + (xform->d * body->posy)) + xform->ty);
            			}
HXLINE( 770)			this->graphics->moveTo(qx,qy);
HXLINE( 771)			this->graphics->lineTo(px,py);
HXLINE( 772)			this->graphics->drawCircle(px,py,(int)1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ZPP_ShapeDebug_obj,draw_body,(void))

void ZPP_ShapeDebug_obj::draw_shape( ::zpp_nape::shape::ZPP_Shape shape, ::zpp_nape::geom::ZPP_Mat23 xform,Float xdet,bool xnull){
            	HX_STACKFRAME(&_hx_pos_3fe31e6b5404797c_775_draw_shape)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(shape,"shape")
            	HX_STACK_ARG(xform,"xform")
            	HX_STACK_ARG(xdet,"xdet")
            	HX_STACK_ARG(xnull,"xnull")
HXLINE( 777)		HX_VAR( int,idc);
HXLINE( 778)		if (hx::IsNull( this->outer->colour )) {
HXLINE( 778)			idc = ::Std_obj::_hx_int(((int)16777215 * ::Math_obj::exp(((Float)-(hx::Mod(shape->id,(int)500)) / (Float)(int)1500))));
            		}
            		else {
HXLINE( 779)			idc = ( (int)(this->outer->colour(shape->id)) );
            		}
HXLINE( 788)		HX_VARI( int,col) = ((int)(int)-16777216 | (int)((int)::Std_obj::_hx_int((((int)((int)idc & (int)(int)16711680) >> (int)(int)16) * ((Float)0.7))) << (int)(int)16));
HXDLIN( 788)		HX_VARI_NAME( int,col1,"col") = ((int)col | (int)((int)::Std_obj::_hx_int((((int)((int)idc & (int)(int)65280) >> (int)(int)8) * ((Float)0.7))) << (int)(int)8));
HXLINE( 776)		HX_VARI_NAME( int,col2,"col") = ((int)col1 | (int)::Std_obj::_hx_int((((int)idc & (int)(int)255) * ((Float)0.7))));
HXLINE( 790)		HX_VARI(  ::zpp_nape::phys::ZPP_Body,body) = shape->body;
HXLINE( 791)		if (hx::IsNotNull( body )) {
HXLINE( 793)			HX_VAR_NAME( int,idc1,"idc");
HXLINE( 794)			if (hx::IsNull( this->outer->colour )) {
HXLINE( 794)				idc1 = ::Std_obj::_hx_int(((int)16777215 * ::Math_obj::exp(((Float)-(hx::Mod(body->id,(int)500)) / (Float)(int)1500))));
            			}
            			else {
HXLINE( 795)				idc1 = ( (int)(this->outer->colour(body->id)) );
            			}
HXLINE( 796)			HX_VARI( Float,_r) = (((int)((int)idc1 & (int)(int)16711680) >> (int)(int)16) * ((Float)0.7));
HXLINE( 797)			HX_VARI( Float,_g) = (((int)((int)idc1 & (int)(int)65280) >> (int)(int)8) * ((Float)0.7));
HXLINE( 798)			HX_VARI( Float,_b) = (((int)idc1 & (int)(int)255) * ((Float)0.7));
HXLINE( 799)			bool _hx_tmp;
HXDLIN( 799)			if (hx::IsNotNull( body->space )) {
HXLINE( 799)				_hx_tmp = body->outer->zpp_inner->component->sleeping;
            			}
            			else {
HXLINE( 799)				_hx_tmp = false;
            			}
HXDLIN( 799)			if (_hx_tmp) {
HXLINE( 800)				_r = ((((Float)0.4) * _r) + (((Float)0.6) * this->bg_r));
HXLINE( 801)				_g = ((((Float)0.4) * _g) + (((Float)0.6) * this->bg_g));
HXLINE( 802)				_b = ((((Float)0.4) * _b) + (((Float)0.6) * this->bg_b));
            			}
HXLINE( 804)			HX_VARI( int,bcol) = ((int)(int)-16777216 | (int)((int)::Std_obj::_hx_int(_r) << (int)(int)16));
HXDLIN( 804)			HX_VARI_NAME( int,bcol1,"bcol") = ((int)bcol | (int)((int)::Std_obj::_hx_int(_g) << (int)(int)8));
HXLINE( 792)			HX_VARI_NAME( int,bcol2,"bcol") = ((int)bcol1 | (int)::Std_obj::_hx_int(_b));
HXLINE( 807)			HX_VARI_NAME( int,col3,"col") = col2;
HXLINE( 810)			HX_VARI_NAME( int,_r1,"_r") = ::Std_obj::_hx_int(((((int)((int)col3 >> (int)(int)16) & (int)(int)255) * ((Float)0.2)) + (((int)((int)bcol2 >> (int)(int)16) & (int)(int)255) * ((Float)0.8))));
HXLINE( 811)			HX_VARI_NAME( int,_g1,"_g") = ::Std_obj::_hx_int(((((int)((int)col3 >> (int)(int)8) & (int)(int)255) * ((Float)0.2)) + (((int)((int)bcol2 >> (int)(int)8) & (int)(int)255) * ((Float)0.8))));
HXLINE( 813)			col2 = ((int)((int)((int)(int)-16777216 | (int)((int)_r1 << (int)(int)16)) | (int)((int)_g1 << (int)(int)8)) | (int)::Std_obj::_hx_int(((((int)col3 & (int)(int)255) * ((Float)0.2)) + (((int)bcol2 & (int)(int)255) * ((Float)0.8)))));
HXLINE( 815)			this->graphics->lineStyle(this->outer_zn->thickness,col2,((Float)1.0),null(),null(),null(),null(),null());
HXLINE( 816)			if ((shape->type == (int)0)) {
HXLINE( 817)				HX_VARI(  ::zpp_nape::shape::ZPP_Circle,circ) = shape->circle;
HXLINE( 818)				if (circ->zip_worldCOM) {
HXLINE( 818)					if (hx::IsNotNull( circ->body )) {
HXLINE( 818)						circ->zip_worldCOM = false;
HXDLIN( 818)						if (circ->zip_localCOM) {
HXLINE( 818)							circ->zip_localCOM = false;
HXDLIN( 818)							if ((circ->type == (int)1)) {
HXLINE( 818)								HX_VARI(  ::zpp_nape::shape::ZPP_Polygon,_this) = circ->polygon;
HXDLIN( 818)								if (hx::IsNull( _this->lverts->next->next )) {
HXLINE( 818)									_this->localCOMx = _this->lverts->next->x;
HXDLIN( 818)									_this->localCOMy = _this->lverts->next->y;
            								}
            								else {
HXLINE( 818)									if (hx::IsNull( _this->lverts->next->next->next )) {
HXLINE( 818)										{
HXLINE( 818)											_this->localCOMx = _this->lverts->next->x;
HXDLIN( 818)											_this->localCOMy = _this->lverts->next->y;
            										}
HXDLIN( 818)										{
HXLINE( 818)											_this->localCOMx = (_this->localCOMx + _this->lverts->next->next->x);
HXDLIN( 818)											_this->localCOMy = (_this->localCOMy + _this->lverts->next->next->y);
            										}
HXDLIN( 818)										{
HXLINE( 818)											_this->localCOMx = (_this->localCOMx * ((Float)0.5));
HXDLIN( 818)											_this->localCOMy = (_this->localCOMy * ((Float)0.5));
            										}
            									}
            									else {
HXLINE( 818)										{
HXLINE( 818)											_this->localCOMx = (int)0;
HXDLIN( 818)											_this->localCOMy = (int)0;
            										}
HXDLIN( 818)										HX_VARI( Float,area) = ((Float)0.0);
HXDLIN( 818)										{
HXLINE( 818)											HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,cx_ite) = _this->lverts->next;
HXDLIN( 818)											HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,u) = cx_ite;
HXDLIN( 818)											cx_ite = cx_ite->next;
HXDLIN( 818)											HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,v) = cx_ite;
HXDLIN( 818)											cx_ite = cx_ite->next;
HXDLIN( 818)											while(hx::IsNotNull( cx_ite )){
HXLINE( 818)												HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,w) = cx_ite;
HXDLIN( 818)												{
HXLINE( 818)													area = (area + (v->x * (w->y - u->y)));
HXDLIN( 818)													HX_VARI( Float,cf) = ((w->y * v->x) - (w->x * v->y));
HXDLIN( 818)													_this->localCOMx = (_this->localCOMx + ((v->x + w->x) * cf));
HXDLIN( 818)													_this->localCOMy = (_this->localCOMy + ((v->y + w->y) * cf));
            												}
HXDLIN( 818)												u = v;
HXDLIN( 818)												v = w;
HXDLIN( 818)												cx_ite = cx_ite->next;
            											}
HXDLIN( 818)											cx_ite = _this->lverts->next;
HXDLIN( 818)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w1,"w") = cx_ite;
HXDLIN( 818)											{
HXLINE( 818)												area = (area + (v->x * (w1->y - u->y)));
HXDLIN( 818)												HX_VARI_NAME( Float,cf1,"cf") = ((w1->y * v->x) - (w1->x * v->y));
HXDLIN( 818)												_this->localCOMx = (_this->localCOMx + ((v->x + w1->x) * cf1));
HXDLIN( 818)												_this->localCOMy = (_this->localCOMy + ((v->y + w1->y) * cf1));
            											}
HXDLIN( 818)											u = v;
HXDLIN( 818)											cx_ite = cx_ite->next;
HXDLIN( 818)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w2,"w") = cx_ite;
HXDLIN( 818)											{
HXLINE( 818)												area = (area + (w1->x * (w2->y - u->y)));
HXDLIN( 818)												HX_VARI_NAME( Float,cf2,"cf") = ((w2->y * w1->x) - (w2->x * w1->y));
HXDLIN( 818)												_this->localCOMx = (_this->localCOMx + ((w1->x + w2->x) * cf2));
HXDLIN( 818)												_this->localCOMy = (_this->localCOMy + ((w1->y + w2->y) * cf2));
            											}
            										}
HXDLIN( 818)										area = ((Float)(int)1 / (Float)((int)3 * area));
HXDLIN( 818)										{
HXLINE( 818)											HX_VARI( Float,t) = area;
HXDLIN( 818)											_this->localCOMx = (_this->localCOMx * t);
HXDLIN( 818)											_this->localCOMy = (_this->localCOMy * t);
            										}
            									}
            								}
            							}
HXDLIN( 818)							if (hx::IsNotNull( circ->wrap_localCOM )) {
HXLINE( 818)								circ->wrap_localCOM->zpp_inner->x = circ->localCOMx;
HXDLIN( 818)								circ->wrap_localCOM->zpp_inner->y = circ->localCOMy;
            							}
            						}
HXDLIN( 818)						{
HXLINE( 818)							HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this1,"_this") = circ->body;
HXDLIN( 818)							if (_this1->zip_axis) {
HXLINE( 818)								_this1->zip_axis = false;
HXDLIN( 818)								{
HXLINE( 818)									_this1->axisx = ::Math_obj::sin(_this1->rot);
HXDLIN( 818)									_this1->axisy = ::Math_obj::cos(_this1->rot);
            								}
            							}
            						}
HXDLIN( 818)						{
HXLINE( 818)							circ->worldCOMx = (circ->body->posx + ((circ->body->axisy * circ->localCOMx) - (circ->body->axisx * circ->localCOMy)));
HXDLIN( 818)							circ->worldCOMy = (circ->body->posy + ((circ->localCOMx * circ->body->axisx) + (circ->localCOMy * circ->body->axisy)));
            						}
            					}
            				}
HXLINE( 819)				HX_VARI( Float,vx) = circ->worldCOMx;
HXLINE( 820)				HX_VARI( Float,vy) = circ->worldCOMy;
HXLINE( 821)				if (!(xnull)) {
HXLINE( 822)					HX_VARI_NAME( Float,t1,"t") = (((xform->a * vx) + (xform->b * vy)) + xform->tx);
HXLINE( 823)					vy = (((xform->c * vx) + (xform->d * vy)) + xform->ty);
HXLINE( 824)					vx = t1;
            				}
HXLINE( 826)				this->graphics->drawCircle(vx,vy,(circ->radius * xdet));
HXLINE( 827)				if (this->outer->drawShapeAngleIndicators) {
HXLINE( 828)					HX_VARI( Float,v0x) = (circ->worldCOMx + ((((Float)0.3) * circ->radius) * body->axisy));
HXLINE( 829)					HX_VARI( Float,v0y) = (circ->worldCOMy + ((((Float)0.3) * circ->radius) * body->axisx));
HXLINE( 830)					HX_VARI( Float,v1x) = (circ->worldCOMx + (circ->radius * body->axisy));
HXLINE( 831)					HX_VARI( Float,v1y) = (circ->worldCOMy + (circ->radius * body->axisx));
HXLINE( 832)					if (!(xnull)) {
HXLINE( 833)						HX_VARI_NAME( Float,t2,"t") = (((xform->a * v0x) + (xform->b * v0y)) + xform->tx);
HXLINE( 834)						v0y = (((xform->c * v0x) + (xform->d * v0y)) + xform->ty);
HXLINE( 835)						v0x = t2;
            					}
HXLINE( 837)					if (!(xnull)) {
HXLINE( 838)						HX_VARI_NAME( Float,t3,"t") = (((xform->a * v1x) + (xform->b * v1y)) + xform->tx);
HXLINE( 839)						v1y = (((xform->c * v1x) + (xform->d * v1y)) + xform->ty);
HXLINE( 840)						v1x = t3;
            					}
HXLINE( 842)					this->graphics->moveTo(v0x,v0y);
HXLINE( 843)					this->graphics->lineTo(v1x,v1y);
            				}
            			}
            			else {
HXLINE( 847)				HX_VARI(  ::zpp_nape::shape::ZPP_Polygon,poly) = shape->polygon;
HXLINE( 848)				if (poly->zip_gverts) {
HXLINE( 848)					if (hx::IsNotNull( poly->body )) {
HXLINE( 848)						poly->zip_gverts = false;
HXDLIN( 848)						poly->validate_lverts();
HXDLIN( 848)						{
HXLINE( 848)							HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this2,"_this") = poly->body;
HXDLIN( 848)							if (_this2->zip_axis) {
HXLINE( 848)								_this2->zip_axis = false;
HXDLIN( 848)								{
HXLINE( 848)									_this2->axisx = ::Math_obj::sin(_this2->rot);
HXDLIN( 848)									_this2->axisy = ::Math_obj::cos(_this2->rot);
            								}
            							}
            						}
HXDLIN( 848)						HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,li) = poly->lverts->next;
HXDLIN( 848)						{
HXLINE( 848)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite1,"cx_ite") = poly->gverts->next;
HXDLIN( 848)							while(hx::IsNotNull( cx_ite1 )){
HXLINE( 848)								HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,g) = cx_ite1;
HXDLIN( 848)								{
HXLINE( 848)									HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,l) = li;
HXDLIN( 848)									li = li->next;
HXDLIN( 848)									{
HXLINE( 848)										g->x = (poly->body->posx + ((poly->body->axisy * l->x) - (poly->body->axisx * l->y)));
HXDLIN( 848)										g->y = (poly->body->posy + ((l->x * poly->body->axisx) + (l->y * poly->body->axisy)));
            									}
            								}
HXDLIN( 848)								cx_ite1 = cx_ite1->next;
            							}
            						}
            					}
            				}
HXLINE( 849)				 ::zpp_nape::geom::ZPP_Vec2 _this3 = poly->gverts->next;
HXLINE( 850)				HX_VARI_NAME( Float,vx1,"vx") = _this3->x;
HXLINE( 851)				HX_VARI_NAME( Float,vy1,"vy") = _this3->y;
HXLINE( 852)				if (!(xnull)) {
HXLINE( 853)					HX_VARI_NAME( Float,t4,"t") = (((xform->a * vx1) + (xform->b * vy1)) + xform->tx);
HXLINE( 854)					vy1 = (((xform->c * vx1) + (xform->d * vy1)) + xform->ty);
HXLINE( 855)					vx1 = t4;
            				}
HXLINE( 857)				this->graphics->moveTo(vx1,vy1);
HXLINE( 858)				HX_VARI( Float,vox) = vx1;
HXLINE( 859)				HX_VARI( Float,voy) = vy1;
HXLINE( 860)				{
HXLINE( 861)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite2,"cx_ite") = poly->gverts->next->next;
HXLINE( 862)					while(hx::IsNotNull( cx_ite2 )){
HXLINE( 863)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,u1,"u") = cx_ite2;
HXLINE( 864)						{
HXLINE( 865)							vx1 = u1->x;
HXLINE( 866)							vy1 = u1->y;
HXLINE( 867)							if (!(xnull)) {
HXLINE( 868)								HX_VARI_NAME( Float,t5,"t") = (((xform->a * vx1) + (xform->b * vy1)) + xform->tx);
HXLINE( 869)								vy1 = (((xform->c * vx1) + (xform->d * vy1)) + xform->ty);
HXLINE( 870)								vx1 = t5;
            							}
HXLINE( 872)							this->graphics->lineTo(vx1,vy1);
            						}
HXLINE( 874)						cx_ite2 = cx_ite2->next;
            					}
            				}
HXLINE( 877)				this->graphics->lineTo(vox,voy);
HXLINE( 878)				if (this->outer->drawShapeAngleIndicators) {
HXLINE( 879)					if (poly->zip_worldCOM) {
HXLINE( 879)						if (hx::IsNotNull( poly->body )) {
HXLINE( 879)							poly->zip_worldCOM = false;
HXDLIN( 879)							if (poly->zip_localCOM) {
HXLINE( 879)								poly->zip_localCOM = false;
HXDLIN( 879)								if ((poly->type == (int)1)) {
HXLINE( 879)									HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this4,"_this") = poly->polygon;
HXDLIN( 879)									if (hx::IsNull( _this4->lverts->next->next )) {
HXLINE( 879)										_this4->localCOMx = _this4->lverts->next->x;
HXDLIN( 879)										_this4->localCOMy = _this4->lverts->next->y;
            									}
            									else {
HXLINE( 879)										if (hx::IsNull( _this4->lverts->next->next->next )) {
HXLINE( 879)											{
HXLINE( 879)												_this4->localCOMx = _this4->lverts->next->x;
HXDLIN( 879)												_this4->localCOMy = _this4->lverts->next->y;
            											}
HXDLIN( 879)											{
HXLINE( 879)												_this4->localCOMx = (_this4->localCOMx + _this4->lverts->next->next->x);
HXDLIN( 879)												_this4->localCOMy = (_this4->localCOMy + _this4->lverts->next->next->y);
            											}
HXDLIN( 879)											{
HXLINE( 879)												_this4->localCOMx = (_this4->localCOMx * ((Float)0.5));
HXDLIN( 879)												_this4->localCOMy = (_this4->localCOMy * ((Float)0.5));
            											}
            										}
            										else {
HXLINE( 879)											{
HXLINE( 879)												_this4->localCOMx = (int)0;
HXDLIN( 879)												_this4->localCOMy = (int)0;
            											}
HXDLIN( 879)											HX_VARI_NAME( Float,area1,"area") = ((Float)0.0);
HXDLIN( 879)											{
HXLINE( 879)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite3,"cx_ite") = _this4->lverts->next;
HXDLIN( 879)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,u2,"u") = cx_ite3;
HXDLIN( 879)												cx_ite3 = cx_ite3->next;
HXDLIN( 879)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,v1,"v") = cx_ite3;
HXDLIN( 879)												cx_ite3 = cx_ite3->next;
HXDLIN( 879)												while(hx::IsNotNull( cx_ite3 )){
HXLINE( 879)													HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w3,"w") = cx_ite3;
HXDLIN( 879)													{
HXLINE( 879)														area1 = (area1 + (v1->x * (w3->y - u2->y)));
HXDLIN( 879)														HX_VARI_NAME( Float,cf3,"cf") = ((w3->y * v1->x) - (w3->x * v1->y));
HXDLIN( 879)														_this4->localCOMx = (_this4->localCOMx + ((v1->x + w3->x) * cf3));
HXDLIN( 879)														_this4->localCOMy = (_this4->localCOMy + ((v1->y + w3->y) * cf3));
            													}
HXDLIN( 879)													u2 = v1;
HXDLIN( 879)													v1 = w3;
HXDLIN( 879)													cx_ite3 = cx_ite3->next;
            												}
HXDLIN( 879)												cx_ite3 = _this4->lverts->next;
HXDLIN( 879)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w4,"w") = cx_ite3;
HXDLIN( 879)												{
HXLINE( 879)													area1 = (area1 + (v1->x * (w4->y - u2->y)));
HXDLIN( 879)													HX_VARI_NAME( Float,cf4,"cf") = ((w4->y * v1->x) - (w4->x * v1->y));
HXDLIN( 879)													_this4->localCOMx = (_this4->localCOMx + ((v1->x + w4->x) * cf4));
HXDLIN( 879)													_this4->localCOMy = (_this4->localCOMy + ((v1->y + w4->y) * cf4));
            												}
HXDLIN( 879)												u2 = v1;
HXDLIN( 879)												cx_ite3 = cx_ite3->next;
HXDLIN( 879)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w5,"w") = cx_ite3;
HXDLIN( 879)												{
HXLINE( 879)													area1 = (area1 + (w4->x * (w5->y - u2->y)));
HXDLIN( 879)													HX_VARI_NAME( Float,cf5,"cf") = ((w5->y * w4->x) - (w5->x * w4->y));
HXDLIN( 879)													_this4->localCOMx = (_this4->localCOMx + ((w4->x + w5->x) * cf5));
HXDLIN( 879)													_this4->localCOMy = (_this4->localCOMy + ((w4->y + w5->y) * cf5));
            												}
            											}
HXDLIN( 879)											area1 = ((Float)(int)1 / (Float)((int)3 * area1));
HXDLIN( 879)											{
HXLINE( 879)												HX_VARI_NAME( Float,t6,"t") = area1;
HXDLIN( 879)												_this4->localCOMx = (_this4->localCOMx * t6);
HXDLIN( 879)												_this4->localCOMy = (_this4->localCOMy * t6);
            											}
            										}
            									}
            								}
HXDLIN( 879)								if (hx::IsNotNull( poly->wrap_localCOM )) {
HXLINE( 879)									poly->wrap_localCOM->zpp_inner->x = poly->localCOMx;
HXDLIN( 879)									poly->wrap_localCOM->zpp_inner->y = poly->localCOMy;
            								}
            							}
HXDLIN( 879)							{
HXLINE( 879)								HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this5,"_this") = poly->body;
HXDLIN( 879)								if (_this5->zip_axis) {
HXLINE( 879)									_this5->zip_axis = false;
HXDLIN( 879)									{
HXLINE( 879)										_this5->axisx = ::Math_obj::sin(_this5->rot);
HXDLIN( 879)										_this5->axisy = ::Math_obj::cos(_this5->rot);
            									}
            								}
            							}
HXDLIN( 879)							{
HXLINE( 879)								poly->worldCOMx = (poly->body->posx + ((poly->body->axisy * poly->localCOMx) - (poly->body->axisx * poly->localCOMy)));
HXDLIN( 879)								poly->worldCOMy = (poly->body->posy + ((poly->localCOMx * poly->body->axisx) + (poly->localCOMy * poly->body->axisy)));
            							}
            						}
            					}
HXLINE( 880)					if (xnull) {
HXLINE( 881)						vx1 = poly->worldCOMx;
HXLINE( 882)						vy1 = poly->worldCOMy;
            					}
            					else {
HXLINE( 901)						vx1 = (((xform->a * poly->worldCOMx) + (xform->b * poly->worldCOMy)) + xform->tx);
HXLINE( 902)						vy1 = (((xform->c * poly->worldCOMx) + (xform->d * poly->worldCOMy)) + xform->ty);
            					}
HXLINE( 904)					this->graphics->moveTo(vx1,vy1);
HXLINE( 905)					this->graphics->lineTo(vox,voy);
            				}
            			}
HXLINE( 908)			if (this->outer->drawShapeDetail) {
HXLINE( 909)				if (shape->zip_worldCOM) {
HXLINE( 909)					if (hx::IsNotNull( shape->body )) {
HXLINE( 909)						shape->zip_worldCOM = false;
HXDLIN( 909)						if (shape->zip_localCOM) {
HXLINE( 909)							shape->zip_localCOM = false;
HXDLIN( 909)							if ((shape->type == (int)1)) {
HXLINE( 909)								HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this6,"_this") = shape->polygon;
HXDLIN( 909)								if (hx::IsNull( _this6->lverts->next->next )) {
HXLINE( 909)									_this6->localCOMx = _this6->lverts->next->x;
HXDLIN( 909)									_this6->localCOMy = _this6->lverts->next->y;
            								}
            								else {
HXLINE( 909)									if (hx::IsNull( _this6->lverts->next->next->next )) {
HXLINE( 909)										{
HXLINE( 909)											_this6->localCOMx = _this6->lverts->next->x;
HXDLIN( 909)											_this6->localCOMy = _this6->lverts->next->y;
            										}
HXDLIN( 909)										{
HXLINE( 909)											_this6->localCOMx = (_this6->localCOMx + _this6->lverts->next->next->x);
HXDLIN( 909)											_this6->localCOMy = (_this6->localCOMy + _this6->lverts->next->next->y);
            										}
HXDLIN( 909)										{
HXLINE( 909)											_this6->localCOMx = (_this6->localCOMx * ((Float)0.5));
HXDLIN( 909)											_this6->localCOMy = (_this6->localCOMy * ((Float)0.5));
            										}
            									}
            									else {
HXLINE( 909)										{
HXLINE( 909)											_this6->localCOMx = (int)0;
HXDLIN( 909)											_this6->localCOMy = (int)0;
            										}
HXDLIN( 909)										HX_VARI_NAME( Float,area2,"area") = ((Float)0.0);
HXDLIN( 909)										{
HXLINE( 909)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite4,"cx_ite") = _this6->lverts->next;
HXDLIN( 909)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,u3,"u") = cx_ite4;
HXDLIN( 909)											cx_ite4 = cx_ite4->next;
HXDLIN( 909)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,v2,"v") = cx_ite4;
HXDLIN( 909)											cx_ite4 = cx_ite4->next;
HXDLIN( 909)											while(hx::IsNotNull( cx_ite4 )){
HXLINE( 909)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w6,"w") = cx_ite4;
HXDLIN( 909)												{
HXLINE( 909)													area2 = (area2 + (v2->x * (w6->y - u3->y)));
HXDLIN( 909)													HX_VARI_NAME( Float,cf6,"cf") = ((w6->y * v2->x) - (w6->x * v2->y));
HXDLIN( 909)													_this6->localCOMx = (_this6->localCOMx + ((v2->x + w6->x) * cf6));
HXDLIN( 909)													_this6->localCOMy = (_this6->localCOMy + ((v2->y + w6->y) * cf6));
            												}
HXDLIN( 909)												u3 = v2;
HXDLIN( 909)												v2 = w6;
HXDLIN( 909)												cx_ite4 = cx_ite4->next;
            											}
HXDLIN( 909)											cx_ite4 = _this6->lverts->next;
HXDLIN( 909)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w7,"w") = cx_ite4;
HXDLIN( 909)											{
HXLINE( 909)												area2 = (area2 + (v2->x * (w7->y - u3->y)));
HXDLIN( 909)												HX_VARI_NAME( Float,cf7,"cf") = ((w7->y * v2->x) - (w7->x * v2->y));
HXDLIN( 909)												_this6->localCOMx = (_this6->localCOMx + ((v2->x + w7->x) * cf7));
HXDLIN( 909)												_this6->localCOMy = (_this6->localCOMy + ((v2->y + w7->y) * cf7));
            											}
HXDLIN( 909)											u3 = v2;
HXDLIN( 909)											cx_ite4 = cx_ite4->next;
HXDLIN( 909)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w8,"w") = cx_ite4;
HXDLIN( 909)											{
HXLINE( 909)												area2 = (area2 + (w7->x * (w8->y - u3->y)));
HXDLIN( 909)												HX_VARI_NAME( Float,cf8,"cf") = ((w8->y * w7->x) - (w8->x * w7->y));
HXDLIN( 909)												_this6->localCOMx = (_this6->localCOMx + ((w7->x + w8->x) * cf8));
HXDLIN( 909)												_this6->localCOMy = (_this6->localCOMy + ((w7->y + w8->y) * cf8));
            											}
            										}
HXDLIN( 909)										area2 = ((Float)(int)1 / (Float)((int)3 * area2));
HXDLIN( 909)										{
HXLINE( 909)											HX_VARI_NAME( Float,t7,"t") = area2;
HXDLIN( 909)											_this6->localCOMx = (_this6->localCOMx * t7);
HXDLIN( 909)											_this6->localCOMy = (_this6->localCOMy * t7);
            										}
            									}
            								}
            							}
HXDLIN( 909)							if (hx::IsNotNull( shape->wrap_localCOM )) {
HXLINE( 909)								shape->wrap_localCOM->zpp_inner->x = shape->localCOMx;
HXDLIN( 909)								shape->wrap_localCOM->zpp_inner->y = shape->localCOMy;
            							}
            						}
HXDLIN( 909)						{
HXLINE( 909)							HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this7,"_this") = shape->body;
HXDLIN( 909)							if (_this7->zip_axis) {
HXLINE( 909)								_this7->zip_axis = false;
HXDLIN( 909)								{
HXLINE( 909)									_this7->axisx = ::Math_obj::sin(_this7->rot);
HXDLIN( 909)									_this7->axisy = ::Math_obj::cos(_this7->rot);
            								}
            							}
            						}
HXDLIN( 909)						{
HXLINE( 909)							shape->worldCOMx = (shape->body->posx + ((shape->body->axisy * shape->localCOMx) - (shape->body->axisx * shape->localCOMy)));
HXDLIN( 909)							shape->worldCOMy = (shape->body->posy + ((shape->localCOMx * shape->body->axisx) + (shape->localCOMy * shape->body->axisy)));
            						}
            					}
            				}
HXLINE( 910)				 ::openfl::_legacy::display::Graphics _hx_tmp1 = this->graphics;
HXDLIN( 910)				Float _hx_tmp2 = this->outer_zn->thickness;
HXLINE( 911)				HX_VARI_NAME( int,col4,"col") = col2;
HXLINE( 914)				HX_VARI_NAME( int,_r2,"_r") = ::Std_obj::_hx_int(((((int)((int)col4 >> (int)(int)16) & (int)(int)255) * ((Float)0.8)) + ((Float)50.999999999999986)));
HXLINE( 915)				HX_VARI_NAME( int,_g2,"_g") = ::Std_obj::_hx_int((((int)((int)col4 >> (int)(int)8) & (int)(int)255) * ((Float)0.8)));
HXLINE( 910)				_hx_tmp1->lineStyle(_hx_tmp2,((int)((int)((int)(int)-16777216 | (int)((int)_r2 << (int)(int)16)) | (int)((int)_g2 << (int)(int)8)) | (int)::Std_obj::_hx_int((((int)col4 & (int)(int)255) * ((Float)0.8)))),(int)1,null(),null(),null(),null(),null());
HXLINE( 920)				HX_VARI_NAME( Float,vx2,"vx") = ((Float)0.0);
HXLINE( 921)				HX_VARI_NAME( Float,vy2,"vy") = ((Float)0.0);
HXLINE( 922)				if (xnull) {
HXLINE( 923)					vx2 = shape->worldCOMx;
HXLINE( 924)					vy2 = shape->worldCOMy;
            				}
            				else {
HXLINE( 943)					vx2 = (((xform->a * shape->worldCOMx) + (xform->b * shape->worldCOMy)) + xform->tx);
HXLINE( 944)					vy2 = (((xform->c * shape->worldCOMx) + (xform->d * shape->worldCOMy)) + xform->ty);
            				}
HXLINE( 946)				this->graphics->drawCircle(vx2,vy2,(int)1);
HXLINE( 947)				if (shape->zip_aabb) {
HXLINE( 947)					if (hx::IsNotNull( shape->body )) {
HXLINE( 947)						shape->zip_aabb = false;
HXDLIN( 947)						if ((shape->type == (int)0)) {
HXLINE( 947)							HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Circle,_this8,"_this") = shape->circle;
HXDLIN( 947)							if (_this8->zip_worldCOM) {
HXLINE( 947)								if (hx::IsNotNull( _this8->body )) {
HXLINE( 947)									_this8->zip_worldCOM = false;
HXDLIN( 947)									if (_this8->zip_localCOM) {
HXLINE( 947)										_this8->zip_localCOM = false;
HXDLIN( 947)										if ((_this8->type == (int)1)) {
HXLINE( 947)											HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this9,"_this") = _this8->polygon;
HXDLIN( 947)											if (hx::IsNull( _this9->lverts->next->next )) {
HXLINE( 947)												_this9->localCOMx = _this9->lverts->next->x;
HXDLIN( 947)												_this9->localCOMy = _this9->lverts->next->y;
            											}
            											else {
HXLINE( 947)												if (hx::IsNull( _this9->lverts->next->next->next )) {
HXLINE( 947)													{
HXLINE( 947)														_this9->localCOMx = _this9->lverts->next->x;
HXDLIN( 947)														_this9->localCOMy = _this9->lverts->next->y;
            													}
HXDLIN( 947)													{
HXLINE( 947)														_this9->localCOMx = (_this9->localCOMx + _this9->lverts->next->next->x);
HXDLIN( 947)														_this9->localCOMy = (_this9->localCOMy + _this9->lverts->next->next->y);
            													}
HXDLIN( 947)													{
HXLINE( 947)														_this9->localCOMx = (_this9->localCOMx * ((Float)0.5));
HXDLIN( 947)														_this9->localCOMy = (_this9->localCOMy * ((Float)0.5));
            													}
            												}
            												else {
HXLINE( 947)													{
HXLINE( 947)														_this9->localCOMx = (int)0;
HXDLIN( 947)														_this9->localCOMy = (int)0;
            													}
HXDLIN( 947)													HX_VARI_NAME( Float,area3,"area") = ((Float)0.0);
HXDLIN( 947)													{
HXLINE( 947)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite5,"cx_ite") = _this9->lverts->next;
HXDLIN( 947)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,u4,"u") = cx_ite5;
HXDLIN( 947)														cx_ite5 = cx_ite5->next;
HXDLIN( 947)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,v3,"v") = cx_ite5;
HXDLIN( 947)														cx_ite5 = cx_ite5->next;
HXDLIN( 947)														while(hx::IsNotNull( cx_ite5 )){
HXLINE( 947)															HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w9,"w") = cx_ite5;
HXDLIN( 947)															{
HXLINE( 947)																area3 = (area3 + (v3->x * (w9->y - u4->y)));
HXDLIN( 947)																HX_VARI_NAME( Float,cf9,"cf") = ((w9->y * v3->x) - (w9->x * v3->y));
HXDLIN( 947)																_this9->localCOMx = (_this9->localCOMx + ((v3->x + w9->x) * cf9));
HXDLIN( 947)																_this9->localCOMy = (_this9->localCOMy + ((v3->y + w9->y) * cf9));
            															}
HXDLIN( 947)															u4 = v3;
HXDLIN( 947)															v3 = w9;
HXDLIN( 947)															cx_ite5 = cx_ite5->next;
            														}
HXDLIN( 947)														cx_ite5 = _this9->lverts->next;
HXDLIN( 947)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w10,"w") = cx_ite5;
HXDLIN( 947)														{
HXLINE( 947)															area3 = (area3 + (v3->x * (w10->y - u4->y)));
HXDLIN( 947)															HX_VARI_NAME( Float,cf10,"cf") = ((w10->y * v3->x) - (w10->x * v3->y));
HXDLIN( 947)															_this9->localCOMx = (_this9->localCOMx + ((v3->x + w10->x) * cf10));
HXDLIN( 947)															_this9->localCOMy = (_this9->localCOMy + ((v3->y + w10->y) * cf10));
            														}
HXDLIN( 947)														u4 = v3;
HXDLIN( 947)														cx_ite5 = cx_ite5->next;
HXDLIN( 947)														HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,w11,"w") = cx_ite5;
HXDLIN( 947)														{
HXLINE( 947)															area3 = (area3 + (w10->x * (w11->y - u4->y)));
HXDLIN( 947)															HX_VARI_NAME( Float,cf11,"cf") = ((w11->y * w10->x) - (w11->x * w10->y));
HXDLIN( 947)															_this9->localCOMx = (_this9->localCOMx + ((w10->x + w11->x) * cf11));
HXDLIN( 947)															_this9->localCOMy = (_this9->localCOMy + ((w10->y + w11->y) * cf11));
            														}
            													}
HXDLIN( 947)													area3 = ((Float)(int)1 / (Float)((int)3 * area3));
HXDLIN( 947)													{
HXLINE( 947)														HX_VARI_NAME( Float,t8,"t") = area3;
HXDLIN( 947)														_this9->localCOMx = (_this9->localCOMx * t8);
HXDLIN( 947)														_this9->localCOMy = (_this9->localCOMy * t8);
            													}
            												}
            											}
            										}
HXDLIN( 947)										if (hx::IsNotNull( _this8->wrap_localCOM )) {
HXLINE( 947)											_this8->wrap_localCOM->zpp_inner->x = _this8->localCOMx;
HXDLIN( 947)											_this8->wrap_localCOM->zpp_inner->y = _this8->localCOMy;
            										}
            									}
HXDLIN( 947)									{
HXLINE( 947)										HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this10,"_this") = _this8->body;
HXDLIN( 947)										if (_this10->zip_axis) {
HXLINE( 947)											_this10->zip_axis = false;
HXDLIN( 947)											{
HXLINE( 947)												_this10->axisx = ::Math_obj::sin(_this10->rot);
HXDLIN( 947)												_this10->axisy = ::Math_obj::cos(_this10->rot);
            											}
            										}
            									}
HXDLIN( 947)									{
HXLINE( 947)										_this8->worldCOMx = (_this8->body->posx + ((_this8->body->axisy * _this8->localCOMx) - (_this8->body->axisx * _this8->localCOMy)));
HXDLIN( 947)										_this8->worldCOMy = (_this8->body->posy + ((_this8->localCOMx * _this8->body->axisx) + (_this8->localCOMy * _this8->body->axisy)));
            									}
            								}
            							}
HXDLIN( 947)							HX_VARI( Float,rx) = _this8->radius;
HXDLIN( 947)							HX_VARI( Float,ry) = _this8->radius;
HXDLIN( 947)							{
HXLINE( 947)								_this8->aabb->minx = (_this8->worldCOMx - rx);
HXDLIN( 947)								_this8->aabb->miny = (_this8->worldCOMy - ry);
            							}
HXDLIN( 947)							{
HXLINE( 947)								_this8->aabb->maxx = (_this8->worldCOMx + rx);
HXDLIN( 947)								_this8->aabb->maxy = (_this8->worldCOMy + ry);
            							}
            						}
            						else {
HXLINE( 947)							HX_VARI_NAME(  ::zpp_nape::shape::ZPP_Polygon,_this11,"_this") = shape->polygon;
HXDLIN( 947)							if (_this11->zip_gverts) {
HXLINE( 947)								if (hx::IsNotNull( _this11->body )) {
HXLINE( 947)									_this11->zip_gverts = false;
HXDLIN( 947)									_this11->validate_lverts();
HXDLIN( 947)									{
HXLINE( 947)										HX_VARI_NAME(  ::zpp_nape::phys::ZPP_Body,_this12,"_this") = _this11->body;
HXDLIN( 947)										if (_this12->zip_axis) {
HXLINE( 947)											_this12->zip_axis = false;
HXDLIN( 947)											{
HXLINE( 947)												_this12->axisx = ::Math_obj::sin(_this12->rot);
HXDLIN( 947)												_this12->axisy = ::Math_obj::cos(_this12->rot);
            											}
            										}
            									}
HXDLIN( 947)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,li1,"li") = _this11->lverts->next;
HXDLIN( 947)									{
HXLINE( 947)										HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite6,"cx_ite") = _this11->gverts->next;
HXDLIN( 947)										while(hx::IsNotNull( cx_ite6 )){
HXLINE( 947)											HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,g1,"g") = cx_ite6;
HXDLIN( 947)											{
HXLINE( 947)												HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,l1,"l") = li1;
HXDLIN( 947)												li1 = li1->next;
HXDLIN( 947)												{
HXLINE( 947)													g1->x = (_this11->body->posx + ((_this11->body->axisy * l1->x) - (_this11->body->axisx * l1->y)));
HXDLIN( 947)													g1->y = (_this11->body->posy + ((l1->x * _this11->body->axisx) + (l1->y * _this11->body->axisy)));
            												}
            											}
HXDLIN( 947)											cx_ite6 = cx_ite6->next;
            										}
            									}
            								}
            							}
HXDLIN( 947)							 ::zpp_nape::geom::ZPP_Vec2 _this13 = _this11->gverts->next;
HXDLIN( 947)							{
HXLINE( 947)								_this11->aabb->minx = _this13->x;
HXDLIN( 947)								_this11->aabb->miny = _this13->y;
            							}
HXDLIN( 947)							{
HXLINE( 947)								_this11->aabb->maxx = _this13->x;
HXDLIN( 947)								_this11->aabb->maxy = _this13->y;
            							}
HXDLIN( 947)							{
HXLINE( 947)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,cx_ite7,"cx_ite") = _this11->gverts->next->next;
HXDLIN( 947)								while(hx::IsNotNull( cx_ite7 )){
HXLINE( 947)									HX_VARI(  ::zpp_nape::geom::ZPP_Vec2,p) = cx_ite7;
HXDLIN( 947)									{
HXLINE( 947)										if ((p->x < _this11->aabb->minx)) {
HXLINE( 947)											_this11->aabb->minx = p->x;
            										}
HXDLIN( 947)										if ((p->x > _this11->aabb->maxx)) {
HXLINE( 947)											_this11->aabb->maxx = p->x;
            										}
HXDLIN( 947)										if ((p->y < _this11->aabb->miny)) {
HXLINE( 947)											_this11->aabb->miny = p->y;
            										}
HXDLIN( 947)										if ((p->y > _this11->aabb->maxy)) {
HXLINE( 947)											_this11->aabb->maxy = p->y;
            										}
            									}
HXDLIN( 947)									cx_ite7 = cx_ite7->next;
            								}
            							}
            						}
            					}
            				}
HXLINE( 949)				if (xnull) {
HXLINE( 949)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this14,"_this") = shape->aabb;
HXDLIN( 949)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this15,"_this") = shape->aabb;
HXDLIN( 949)					this->graphics->drawRect(shape->aabb->minx,shape->aabb->miny,(_this14->maxx - _this14->minx),(_this15->maxy - _this15->miny));
            				}
            				else {
HXLINE( 951)					HX_VARI( Float,ox) = ((Float)0.0);
HXLINE( 952)					HX_VARI( Float,oy) = ((Float)0.0);
HXLINE( 973)					{
HXLINE( 974)						ox = (((xform->a * shape->aabb->minx) + (xform->b * shape->aabb->miny)) + xform->tx);
HXLINE( 975)						oy = (((xform->c * shape->aabb->minx) + (xform->d * shape->aabb->miny)) + xform->ty);
            					}
HXLINE( 977)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this16,"_this") = shape->aabb;
HXDLIN( 977)					HX_VARI( Float,wx) = (_this16->maxx - _this16->minx);
HXLINE( 978)					HX_VARI( Float,wy) = (int)0;
HXLINE( 995)					{
HXLINE( 996)						HX_VARI_NAME( Float,t9,"t") = ((xform->a * wx) + (xform->b * wy));
HXLINE( 997)						wy = ((xform->c * wx) + (xform->d * wy));
HXLINE( 998)						wx = t9;
            					}
HXLINE(1000)					HX_VARI( Float,hx) = (int)0;
HXLINE(1001)					HX_VARI_NAME(  ::zpp_nape::geom::ZPP_AABB,_this17,"_this") = shape->aabb;
HXDLIN(1001)					HX_VARI( Float,hy) = (_this17->maxy - _this17->miny);
HXLINE(1018)					{
HXLINE(1019)						HX_VARI_NAME( Float,t10,"t") = ((xform->a * hx) + (xform->b * hy));
HXLINE(1020)						hy = ((xform->c * hx) + (xform->d * hy));
HXLINE(1021)						hx = t10;
            					}
HXLINE(1023)					this->graphics->moveTo(ox,oy);
HXLINE(1024)					this->graphics->lineTo((ox + wx),(oy + wy));
HXLINE(1025)					this->graphics->lineTo(((ox + wx) + hx),((oy + wy) + hy));
HXLINE(1026)					this->graphics->lineTo((ox + hx),(oy + hy));
HXLINE(1027)					this->graphics->lineTo(ox,oy);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ZPP_ShapeDebug_obj,draw_shape,(void))

void ZPP_ShapeDebug_obj::draw_arbiter( ::zpp_nape::dynamics::ZPP_Arbiter arb, ::zpp_nape::geom::ZPP_Mat23 xform,Float xdet,bool xnull){
            	HX_GC_STACKFRAME(&_hx_pos_3fe31e6b5404797c_1033_draw_arbiter)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(arb,"arb")
            	HX_STACK_ARG(xform,"xform")
            	HX_STACK_ARG(xdet,"xdet")
            	HX_STACK_ARG(xnull,"xnull")
HXLINE(1034)		HX_VARI( Float,vx) = ((Float)0.0);
HXLINE(1035)		HX_VARI( Float,vy) = ((Float)0.0);
HXLINE(1036)		if ((arb->outer->zpp_inner->type == ::zpp_nape::dynamics::ZPP_Arbiter_obj::SENSOR)) {
HXLINE(1037)			if (this->outer->drawSensorArbiters) {
HXLINE(1038)				HX_VARI(  ::nape::dynamics::Arbiter,sarb) = arb->outer;
HXLINE(1039)				 ::openfl::_legacy::display::Graphics _hx_tmp = this->graphics;
HXDLIN(1039)				Float _hx_tmp1 = this->outer_zn->thickness;
HXLINE(1041)				HX_VARI( int,ncol) = ~(this->bg_col);
HXLINE(1043)				HX_VARI( int,_r) = ::Std_obj::_hx_int((((int)((int)ncol >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1044)				HX_VARI( int,_g) = ::Std_obj::_hx_int((((Float)178.5) + (((int)((int)ncol >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004))));
HXLINE(1039)				_hx_tmp->lineStyle(_hx_tmp1,((int)((int)((int)(int)-16777216 | (int)((int)_r << (int)(int)16)) | (int)((int)_g << (int)(int)8)) | (int)::Std_obj::_hx_int((((int)ncol & (int)(int)255) * ((Float)0.30000000000000004)))),(int)1,null(),null(),null(),null(),null());
HXLINE(1049)				if (xnull) {
HXLINE(1050)					HX_VAR(  ::nape::shape::Shape,_this);
HXDLIN(1050)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1050)						_this = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1050)						_this = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1050)					if (hx::IsNull( _this->zpp_inner->wrap_worldCOM )) {
HXLINE(1050)						HX_VARI( Float,x) = _this->zpp_inner->worldCOMx;
HXDLIN(1050)						HX_VARI( Float,y) = _this->zpp_inner->worldCOMy;
HXDLIN(1050)						HX_VAR(  ::nape::geom::Vec2,ret);
HXDLIN(1050)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1050)							ret =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1050)							ret = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1050)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret->zpp_pool;
HXDLIN(1050)							ret->zpp_pool = null();
            						}
HXDLIN(1050)						if (hx::IsNull( ret->zpp_inner )) {
HXLINE(1050)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret1,"ret");
HXDLIN(1050)							{
HXLINE(1050)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1050)									ret1 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1050)									ret1 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1050)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret1->next;
HXDLIN(1050)									ret1->next = null();
            								}
HXDLIN(1050)								ret1->weak = false;
            							}
HXDLIN(1050)							ret1->_immutable = false;
HXDLIN(1050)							{
HXLINE(1050)								ret1->x = x;
HXDLIN(1050)								ret1->y = y;
            							}
HXDLIN(1050)							ret->zpp_inner = ret1;
HXDLIN(1050)							ret->zpp_inner->outer = ret;
            						}
            						else {
HXLINE(1050)							bool vx1;
HXDLIN(1050)							{
HXLINE(1050)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this1,"_this") = ret->zpp_inner;
HXDLIN(1050)								if (hx::IsNotNull( _this1->_validate )) {
HXLINE(1050)									_this1->_validate();
            								}
            							}
HXDLIN(1050)							if ((ret->zpp_inner->x == x)) {
HXLINE(1050)								{
HXLINE(1050)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this2,"_this") = ret->zpp_inner;
HXDLIN(1050)									if (hx::IsNotNull( _this2->_validate )) {
HXLINE(1050)										_this2->_validate();
            									}
            								}
HXDLIN(1050)								vx1 = (ret->zpp_inner->y == y);
            							}
            							else {
HXLINE(1050)								vx1 = false;
            							}
HXDLIN(1050)							if (!(vx1)) {
HXLINE(1050)								{
HXLINE(1050)									ret->zpp_inner->x = x;
HXDLIN(1050)									ret->zpp_inner->y = y;
            								}
HXDLIN(1050)								{
HXLINE(1050)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this3,"_this") = ret->zpp_inner;
HXDLIN(1050)									if (hx::IsNotNull( _this3->_invalidate )) {
HXLINE(1050)										_this3->_invalidate(_this3);
            									}
            								}
            							}
            						}
HXDLIN(1050)						ret->zpp_inner->weak = false;
HXDLIN(1050)						_this->zpp_inner->wrap_worldCOM = ret;
HXDLIN(1050)						_this->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1050)						_this->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1050)						_this->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1050)					HX_VARI_NAME(  ::nape::geom::Vec2,_this4,"_this") = _this->zpp_inner->wrap_worldCOM;
HXDLIN(1050)					{
HXLINE(1050)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this5,"_this") = _this4->zpp_inner;
HXDLIN(1050)						if (hx::IsNotNull( _this5->_validate )) {
HXLINE(1050)							_this5->_validate();
            						}
            					}
HXDLIN(1050)					vx = _this4->zpp_inner->x;
HXLINE(1051)					HX_VAR_NAME(  ::nape::shape::Shape,_this6,"_this");
HXDLIN(1051)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1051)						_this6 = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1051)						_this6 = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1051)					if (hx::IsNull( _this6->zpp_inner->wrap_worldCOM )) {
HXLINE(1051)						HX_VARI_NAME( Float,x1,"x") = _this6->zpp_inner->worldCOMx;
HXDLIN(1051)						HX_VARI_NAME( Float,y1,"y") = _this6->zpp_inner->worldCOMy;
HXDLIN(1051)						HX_VAR_NAME(  ::nape::geom::Vec2,ret2,"ret");
HXDLIN(1051)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1051)							ret2 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1051)							ret2 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1051)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret2->zpp_pool;
HXDLIN(1051)							ret2->zpp_pool = null();
            						}
HXDLIN(1051)						if (hx::IsNull( ret2->zpp_inner )) {
HXLINE(1051)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret3,"ret");
HXDLIN(1051)							{
HXLINE(1051)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1051)									ret3 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1051)									ret3 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1051)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret3->next;
HXDLIN(1051)									ret3->next = null();
            								}
HXDLIN(1051)								ret3->weak = false;
            							}
HXDLIN(1051)							ret3->_immutable = false;
HXDLIN(1051)							{
HXLINE(1051)								ret3->x = x1;
HXDLIN(1051)								ret3->y = y1;
            							}
HXDLIN(1051)							ret2->zpp_inner = ret3;
HXDLIN(1051)							ret2->zpp_inner->outer = ret2;
            						}
            						else {
HXLINE(1051)							bool vy1;
HXDLIN(1051)							{
HXLINE(1051)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this7,"_this") = ret2->zpp_inner;
HXDLIN(1051)								if (hx::IsNotNull( _this7->_validate )) {
HXLINE(1051)									_this7->_validate();
            								}
            							}
HXDLIN(1051)							if ((ret2->zpp_inner->x == x1)) {
HXLINE(1051)								{
HXLINE(1051)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this8,"_this") = ret2->zpp_inner;
HXDLIN(1051)									if (hx::IsNotNull( _this8->_validate )) {
HXLINE(1051)										_this8->_validate();
            									}
            								}
HXDLIN(1051)								vy1 = (ret2->zpp_inner->y == y1);
            							}
            							else {
HXLINE(1051)								vy1 = false;
            							}
HXDLIN(1051)							if (!(vy1)) {
HXLINE(1051)								{
HXLINE(1051)									ret2->zpp_inner->x = x1;
HXDLIN(1051)									ret2->zpp_inner->y = y1;
            								}
HXDLIN(1051)								{
HXLINE(1051)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this9,"_this") = ret2->zpp_inner;
HXDLIN(1051)									if (hx::IsNotNull( _this9->_invalidate )) {
HXLINE(1051)										_this9->_invalidate(_this9);
            									}
            								}
            							}
            						}
HXDLIN(1051)						ret2->zpp_inner->weak = false;
HXDLIN(1051)						_this6->zpp_inner->wrap_worldCOM = ret2;
HXDLIN(1051)						_this6->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1051)						_this6->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1051)						_this6->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this6->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1051)					HX_VARI_NAME(  ::nape::geom::Vec2,_this10,"_this") = _this6->zpp_inner->wrap_worldCOM;
HXDLIN(1051)					{
HXLINE(1051)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this11,"_this") = _this10->zpp_inner;
HXDLIN(1051)						if (hx::IsNotNull( _this11->_validate )) {
HXLINE(1051)							_this11->_validate();
            						}
            					}
HXDLIN(1051)					vy = _this10->zpp_inner->y;
            				}
            				else {
HXLINE(1070)					HX_VARI_NAME( Float,xform1,"xform") = xform->a;
HXDLIN(1070)					HX_VAR_NAME(  ::nape::shape::Shape,_this12,"_this");
HXDLIN(1070)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1070)						_this12 = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1070)						_this12 = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1070)					if (hx::IsNull( _this12->zpp_inner->wrap_worldCOM )) {
HXLINE(1070)						HX_VARI_NAME( Float,x2,"x") = _this12->zpp_inner->worldCOMx;
HXDLIN(1070)						HX_VARI_NAME( Float,y2,"y") = _this12->zpp_inner->worldCOMy;
HXDLIN(1070)						HX_VAR_NAME(  ::nape::geom::Vec2,ret4,"ret");
HXDLIN(1070)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1070)							ret4 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1070)							ret4 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1070)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret4->zpp_pool;
HXDLIN(1070)							ret4->zpp_pool = null();
            						}
HXDLIN(1070)						if (hx::IsNull( ret4->zpp_inner )) {
HXLINE(1070)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret5,"ret");
HXDLIN(1070)							{
HXLINE(1070)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1070)									ret5 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1070)									ret5 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1070)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret5->next;
HXDLIN(1070)									ret5->next = null();
            								}
HXDLIN(1070)								ret5->weak = false;
            							}
HXDLIN(1070)							ret5->_immutable = false;
HXDLIN(1070)							{
HXLINE(1070)								ret5->x = x2;
HXDLIN(1070)								ret5->y = y2;
            							}
HXDLIN(1070)							ret4->zpp_inner = ret5;
HXDLIN(1070)							ret4->zpp_inner->outer = ret4;
            						}
            						else {
HXLINE(1070)							bool vx2;
HXDLIN(1070)							{
HXLINE(1070)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this13,"_this") = ret4->zpp_inner;
HXDLIN(1070)								if (hx::IsNotNull( _this13->_validate )) {
HXLINE(1070)									_this13->_validate();
            								}
            							}
HXDLIN(1070)							if ((ret4->zpp_inner->x == x2)) {
HXLINE(1070)								{
HXLINE(1070)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this14,"_this") = ret4->zpp_inner;
HXDLIN(1070)									if (hx::IsNotNull( _this14->_validate )) {
HXLINE(1070)										_this14->_validate();
            									}
            								}
HXDLIN(1070)								vx2 = (ret4->zpp_inner->y == y2);
            							}
            							else {
HXLINE(1070)								vx2 = false;
            							}
HXDLIN(1070)							if (!(vx2)) {
HXLINE(1070)								{
HXLINE(1070)									ret4->zpp_inner->x = x2;
HXDLIN(1070)									ret4->zpp_inner->y = y2;
            								}
HXDLIN(1070)								{
HXLINE(1070)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this15,"_this") = ret4->zpp_inner;
HXDLIN(1070)									if (hx::IsNotNull( _this15->_invalidate )) {
HXLINE(1070)										_this15->_invalidate(_this15);
            									}
            								}
            							}
            						}
HXDLIN(1070)						ret4->zpp_inner->weak = false;
HXDLIN(1070)						_this12->zpp_inner->wrap_worldCOM = ret4;
HXDLIN(1070)						_this12->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1070)						_this12->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1070)						_this12->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this12->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1070)					HX_VARI_NAME(  ::nape::geom::Vec2,_this16,"_this") = _this12->zpp_inner->wrap_worldCOM;
HXDLIN(1070)					{
HXLINE(1070)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this17,"_this") = _this16->zpp_inner;
HXDLIN(1070)						if (hx::IsNotNull( _this17->_validate )) {
HXLINE(1070)							_this17->_validate();
            						}
            					}
HXDLIN(1070)					HX_VARI_NAME( Float,vx3,"vx") = (xform1 * _this16->zpp_inner->x);
HXDLIN(1070)					HX_VARI_NAME( Float,xform2,"xform") = xform->b;
HXDLIN(1070)					HX_VAR_NAME(  ::nape::shape::Shape,_this18,"_this");
HXDLIN(1070)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1070)						_this18 = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1070)						_this18 = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1070)					if (hx::IsNull( _this18->zpp_inner->wrap_worldCOM )) {
HXLINE(1070)						HX_VARI_NAME( Float,x3,"x") = _this18->zpp_inner->worldCOMx;
HXDLIN(1070)						HX_VARI_NAME( Float,y3,"y") = _this18->zpp_inner->worldCOMy;
HXDLIN(1070)						HX_VAR_NAME(  ::nape::geom::Vec2,ret6,"ret");
HXDLIN(1070)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1070)							ret6 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1070)							ret6 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1070)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret6->zpp_pool;
HXDLIN(1070)							ret6->zpp_pool = null();
            						}
HXDLIN(1070)						if (hx::IsNull( ret6->zpp_inner )) {
HXLINE(1070)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret7,"ret");
HXDLIN(1070)							{
HXLINE(1070)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1070)									ret7 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1070)									ret7 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1070)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret7->next;
HXDLIN(1070)									ret7->next = null();
            								}
HXDLIN(1070)								ret7->weak = false;
            							}
HXDLIN(1070)							ret7->_immutable = false;
HXDLIN(1070)							{
HXLINE(1070)								ret7->x = x3;
HXDLIN(1070)								ret7->y = y3;
            							}
HXDLIN(1070)							ret6->zpp_inner = ret7;
HXDLIN(1070)							ret6->zpp_inner->outer = ret6;
            						}
            						else {
HXLINE(1070)							bool vx4;
HXDLIN(1070)							{
HXLINE(1070)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this19,"_this") = ret6->zpp_inner;
HXDLIN(1070)								if (hx::IsNotNull( _this19->_validate )) {
HXLINE(1070)									_this19->_validate();
            								}
            							}
HXDLIN(1070)							if ((ret6->zpp_inner->x == x3)) {
HXLINE(1070)								{
HXLINE(1070)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this20,"_this") = ret6->zpp_inner;
HXDLIN(1070)									if (hx::IsNotNull( _this20->_validate )) {
HXLINE(1070)										_this20->_validate();
            									}
            								}
HXDLIN(1070)								vx4 = (ret6->zpp_inner->y == y3);
            							}
            							else {
HXLINE(1070)								vx4 = false;
            							}
HXDLIN(1070)							if (!(vx4)) {
HXLINE(1070)								{
HXLINE(1070)									ret6->zpp_inner->x = x3;
HXDLIN(1070)									ret6->zpp_inner->y = y3;
            								}
HXDLIN(1070)								{
HXLINE(1070)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this21,"_this") = ret6->zpp_inner;
HXDLIN(1070)									if (hx::IsNotNull( _this21->_invalidate )) {
HXLINE(1070)										_this21->_invalidate(_this21);
            									}
            								}
            							}
            						}
HXDLIN(1070)						ret6->zpp_inner->weak = false;
HXDLIN(1070)						_this18->zpp_inner->wrap_worldCOM = ret6;
HXDLIN(1070)						_this18->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1070)						_this18->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1070)						_this18->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this18->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1070)					HX_VARI_NAME(  ::nape::geom::Vec2,_this22,"_this") = _this18->zpp_inner->wrap_worldCOM;
HXDLIN(1070)					{
HXLINE(1070)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this23,"_this") = _this22->zpp_inner;
HXDLIN(1070)						if (hx::IsNotNull( _this23->_validate )) {
HXLINE(1070)							_this23->_validate();
            						}
            					}
HXDLIN(1070)					vx = ((vx3 + (xform2 * _this22->zpp_inner->y)) + xform->tx);
HXLINE(1071)					HX_VARI_NAME( Float,xform3,"xform") = xform->c;
HXDLIN(1071)					HX_VAR_NAME(  ::nape::shape::Shape,_this24,"_this");
HXDLIN(1071)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1071)						_this24 = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1071)						_this24 = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1071)					if (hx::IsNull( _this24->zpp_inner->wrap_worldCOM )) {
HXLINE(1071)						HX_VARI_NAME( Float,x4,"x") = _this24->zpp_inner->worldCOMx;
HXDLIN(1071)						HX_VARI_NAME( Float,y4,"y") = _this24->zpp_inner->worldCOMy;
HXDLIN(1071)						HX_VAR_NAME(  ::nape::geom::Vec2,ret8,"ret");
HXDLIN(1071)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1071)							ret8 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1071)							ret8 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1071)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret8->zpp_pool;
HXDLIN(1071)							ret8->zpp_pool = null();
            						}
HXDLIN(1071)						if (hx::IsNull( ret8->zpp_inner )) {
HXLINE(1071)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret9,"ret");
HXDLIN(1071)							{
HXLINE(1071)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1071)									ret9 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1071)									ret9 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1071)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret9->next;
HXDLIN(1071)									ret9->next = null();
            								}
HXDLIN(1071)								ret9->weak = false;
            							}
HXDLIN(1071)							ret9->_immutable = false;
HXDLIN(1071)							{
HXLINE(1071)								ret9->x = x4;
HXDLIN(1071)								ret9->y = y4;
            							}
HXDLIN(1071)							ret8->zpp_inner = ret9;
HXDLIN(1071)							ret8->zpp_inner->outer = ret8;
            						}
            						else {
HXLINE(1071)							bool vy2;
HXDLIN(1071)							{
HXLINE(1071)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this25,"_this") = ret8->zpp_inner;
HXDLIN(1071)								if (hx::IsNotNull( _this25->_validate )) {
HXLINE(1071)									_this25->_validate();
            								}
            							}
HXDLIN(1071)							if ((ret8->zpp_inner->x == x4)) {
HXLINE(1071)								{
HXLINE(1071)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this26,"_this") = ret8->zpp_inner;
HXDLIN(1071)									if (hx::IsNotNull( _this26->_validate )) {
HXLINE(1071)										_this26->_validate();
            									}
            								}
HXDLIN(1071)								vy2 = (ret8->zpp_inner->y == y4);
            							}
            							else {
HXLINE(1071)								vy2 = false;
            							}
HXDLIN(1071)							if (!(vy2)) {
HXLINE(1071)								{
HXLINE(1071)									ret8->zpp_inner->x = x4;
HXDLIN(1071)									ret8->zpp_inner->y = y4;
            								}
HXDLIN(1071)								{
HXLINE(1071)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this27,"_this") = ret8->zpp_inner;
HXDLIN(1071)									if (hx::IsNotNull( _this27->_invalidate )) {
HXLINE(1071)										_this27->_invalidate(_this27);
            									}
            								}
            							}
            						}
HXDLIN(1071)						ret8->zpp_inner->weak = false;
HXDLIN(1071)						_this24->zpp_inner->wrap_worldCOM = ret8;
HXDLIN(1071)						_this24->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1071)						_this24->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1071)						_this24->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this24->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1071)					HX_VARI_NAME(  ::nape::geom::Vec2,_this28,"_this") = _this24->zpp_inner->wrap_worldCOM;
HXDLIN(1071)					{
HXLINE(1071)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this29,"_this") = _this28->zpp_inner;
HXDLIN(1071)						if (hx::IsNotNull( _this29->_validate )) {
HXLINE(1071)							_this29->_validate();
            						}
            					}
HXDLIN(1071)					HX_VARI_NAME( Float,vy3,"vy") = (xform3 * _this28->zpp_inner->x);
HXDLIN(1071)					HX_VARI_NAME( Float,xform4,"xform") = xform->d;
HXDLIN(1071)					HX_VAR_NAME(  ::nape::shape::Shape,_this30,"_this");
HXDLIN(1071)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1071)						_this30 = sarb->zpp_inner->ws2->outer;
            					}
            					else {
HXLINE(1071)						_this30 = sarb->zpp_inner->ws1->outer;
            					}
HXDLIN(1071)					if (hx::IsNull( _this30->zpp_inner->wrap_worldCOM )) {
HXLINE(1071)						HX_VARI_NAME( Float,x5,"x") = _this30->zpp_inner->worldCOMx;
HXDLIN(1071)						HX_VARI_NAME( Float,y5,"y") = _this30->zpp_inner->worldCOMy;
HXDLIN(1071)						HX_VAR_NAME(  ::nape::geom::Vec2,ret10,"ret");
HXDLIN(1071)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1071)							ret10 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1071)							ret10 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1071)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret10->zpp_pool;
HXDLIN(1071)							ret10->zpp_pool = null();
            						}
HXDLIN(1071)						if (hx::IsNull( ret10->zpp_inner )) {
HXLINE(1071)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret11,"ret");
HXDLIN(1071)							{
HXLINE(1071)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1071)									ret11 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1071)									ret11 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1071)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret11->next;
HXDLIN(1071)									ret11->next = null();
            								}
HXDLIN(1071)								ret11->weak = false;
            							}
HXDLIN(1071)							ret11->_immutable = false;
HXDLIN(1071)							{
HXLINE(1071)								ret11->x = x5;
HXDLIN(1071)								ret11->y = y5;
            							}
HXDLIN(1071)							ret10->zpp_inner = ret11;
HXDLIN(1071)							ret10->zpp_inner->outer = ret10;
            						}
            						else {
HXLINE(1071)							bool vy4;
HXDLIN(1071)							{
HXLINE(1071)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this31,"_this") = ret10->zpp_inner;
HXDLIN(1071)								if (hx::IsNotNull( _this31->_validate )) {
HXLINE(1071)									_this31->_validate();
            								}
            							}
HXDLIN(1071)							if ((ret10->zpp_inner->x == x5)) {
HXLINE(1071)								{
HXLINE(1071)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this32,"_this") = ret10->zpp_inner;
HXDLIN(1071)									if (hx::IsNotNull( _this32->_validate )) {
HXLINE(1071)										_this32->_validate();
            									}
            								}
HXDLIN(1071)								vy4 = (ret10->zpp_inner->y == y5);
            							}
            							else {
HXLINE(1071)								vy4 = false;
            							}
HXDLIN(1071)							if (!(vy4)) {
HXLINE(1071)								{
HXLINE(1071)									ret10->zpp_inner->x = x5;
HXDLIN(1071)									ret10->zpp_inner->y = y5;
            								}
HXDLIN(1071)								{
HXLINE(1071)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this33,"_this") = ret10->zpp_inner;
HXDLIN(1071)									if (hx::IsNotNull( _this33->_invalidate )) {
HXLINE(1071)										_this33->_invalidate(_this33);
            									}
            								}
            							}
            						}
HXDLIN(1071)						ret10->zpp_inner->weak = false;
HXDLIN(1071)						_this30->zpp_inner->wrap_worldCOM = ret10;
HXDLIN(1071)						_this30->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1071)						_this30->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1071)						_this30->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this30->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1071)					HX_VARI_NAME(  ::nape::geom::Vec2,_this34,"_this") = _this30->zpp_inner->wrap_worldCOM;
HXDLIN(1071)					{
HXLINE(1071)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this35,"_this") = _this34->zpp_inner;
HXDLIN(1071)						if (hx::IsNotNull( _this35->_validate )) {
HXLINE(1071)							_this35->_validate();
            						}
            					}
HXDLIN(1071)					vy = ((vy3 + (xform4 * _this34->zpp_inner->y)) + xform->ty);
            				}
HXLINE(1073)				this->graphics->moveTo(vx,vy);
HXLINE(1074)				if (xnull) {
HXLINE(1075)					HX_VAR_NAME(  ::nape::shape::Shape,_this36,"_this");
HXDLIN(1075)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1075)						_this36 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1075)						_this36 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1075)					if (hx::IsNull( _this36->zpp_inner->wrap_worldCOM )) {
HXLINE(1075)						HX_VARI_NAME( Float,x6,"x") = _this36->zpp_inner->worldCOMx;
HXDLIN(1075)						HX_VARI_NAME( Float,y6,"y") = _this36->zpp_inner->worldCOMy;
HXDLIN(1075)						HX_VAR_NAME(  ::nape::geom::Vec2,ret12,"ret");
HXDLIN(1075)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1075)							ret12 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1075)							ret12 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1075)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret12->zpp_pool;
HXDLIN(1075)							ret12->zpp_pool = null();
            						}
HXDLIN(1075)						if (hx::IsNull( ret12->zpp_inner )) {
HXLINE(1075)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret13,"ret");
HXDLIN(1075)							{
HXLINE(1075)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1075)									ret13 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1075)									ret13 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1075)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret13->next;
HXDLIN(1075)									ret13->next = null();
            								}
HXDLIN(1075)								ret13->weak = false;
            							}
HXDLIN(1075)							ret13->_immutable = false;
HXDLIN(1075)							{
HXLINE(1075)								ret13->x = x6;
HXDLIN(1075)								ret13->y = y6;
            							}
HXDLIN(1075)							ret12->zpp_inner = ret13;
HXDLIN(1075)							ret12->zpp_inner->outer = ret12;
            						}
            						else {
HXLINE(1075)							bool vx5;
HXDLIN(1075)							{
HXLINE(1075)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this37,"_this") = ret12->zpp_inner;
HXDLIN(1075)								if (hx::IsNotNull( _this37->_validate )) {
HXLINE(1075)									_this37->_validate();
            								}
            							}
HXDLIN(1075)							if ((ret12->zpp_inner->x == x6)) {
HXLINE(1075)								{
HXLINE(1075)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this38,"_this") = ret12->zpp_inner;
HXDLIN(1075)									if (hx::IsNotNull( _this38->_validate )) {
HXLINE(1075)										_this38->_validate();
            									}
            								}
HXDLIN(1075)								vx5 = (ret12->zpp_inner->y == y6);
            							}
            							else {
HXLINE(1075)								vx5 = false;
            							}
HXDLIN(1075)							if (!(vx5)) {
HXLINE(1075)								{
HXLINE(1075)									ret12->zpp_inner->x = x6;
HXDLIN(1075)									ret12->zpp_inner->y = y6;
            								}
HXDLIN(1075)								{
HXLINE(1075)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this39,"_this") = ret12->zpp_inner;
HXDLIN(1075)									if (hx::IsNotNull( _this39->_invalidate )) {
HXLINE(1075)										_this39->_invalidate(_this39);
            									}
            								}
            							}
            						}
HXDLIN(1075)						ret12->zpp_inner->weak = false;
HXDLIN(1075)						_this36->zpp_inner->wrap_worldCOM = ret12;
HXDLIN(1075)						_this36->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1075)						_this36->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1075)						_this36->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this36->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1075)					HX_VARI_NAME(  ::nape::geom::Vec2,_this40,"_this") = _this36->zpp_inner->wrap_worldCOM;
HXDLIN(1075)					{
HXLINE(1075)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this41,"_this") = _this40->zpp_inner;
HXDLIN(1075)						if (hx::IsNotNull( _this41->_validate )) {
HXLINE(1075)							_this41->_validate();
            						}
            					}
HXDLIN(1075)					vx = _this40->zpp_inner->x;
HXLINE(1076)					HX_VAR_NAME(  ::nape::shape::Shape,_this42,"_this");
HXDLIN(1076)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1076)						_this42 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1076)						_this42 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1076)					if (hx::IsNull( _this42->zpp_inner->wrap_worldCOM )) {
HXLINE(1076)						HX_VARI_NAME( Float,x7,"x") = _this42->zpp_inner->worldCOMx;
HXDLIN(1076)						HX_VARI_NAME( Float,y7,"y") = _this42->zpp_inner->worldCOMy;
HXDLIN(1076)						HX_VAR_NAME(  ::nape::geom::Vec2,ret14,"ret");
HXDLIN(1076)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1076)							ret14 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1076)							ret14 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1076)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret14->zpp_pool;
HXDLIN(1076)							ret14->zpp_pool = null();
            						}
HXDLIN(1076)						if (hx::IsNull( ret14->zpp_inner )) {
HXLINE(1076)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret15,"ret");
HXDLIN(1076)							{
HXLINE(1076)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1076)									ret15 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1076)									ret15 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1076)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret15->next;
HXDLIN(1076)									ret15->next = null();
            								}
HXDLIN(1076)								ret15->weak = false;
            							}
HXDLIN(1076)							ret15->_immutable = false;
HXDLIN(1076)							{
HXLINE(1076)								ret15->x = x7;
HXDLIN(1076)								ret15->y = y7;
            							}
HXDLIN(1076)							ret14->zpp_inner = ret15;
HXDLIN(1076)							ret14->zpp_inner->outer = ret14;
            						}
            						else {
HXLINE(1076)							bool vy5;
HXDLIN(1076)							{
HXLINE(1076)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this43,"_this") = ret14->zpp_inner;
HXDLIN(1076)								if (hx::IsNotNull( _this43->_validate )) {
HXLINE(1076)									_this43->_validate();
            								}
            							}
HXDLIN(1076)							if ((ret14->zpp_inner->x == x7)) {
HXLINE(1076)								{
HXLINE(1076)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this44,"_this") = ret14->zpp_inner;
HXDLIN(1076)									if (hx::IsNotNull( _this44->_validate )) {
HXLINE(1076)										_this44->_validate();
            									}
            								}
HXDLIN(1076)								vy5 = (ret14->zpp_inner->y == y7);
            							}
            							else {
HXLINE(1076)								vy5 = false;
            							}
HXDLIN(1076)							if (!(vy5)) {
HXLINE(1076)								{
HXLINE(1076)									ret14->zpp_inner->x = x7;
HXDLIN(1076)									ret14->zpp_inner->y = y7;
            								}
HXDLIN(1076)								{
HXLINE(1076)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this45,"_this") = ret14->zpp_inner;
HXDLIN(1076)									if (hx::IsNotNull( _this45->_invalidate )) {
HXLINE(1076)										_this45->_invalidate(_this45);
            									}
            								}
            							}
            						}
HXDLIN(1076)						ret14->zpp_inner->weak = false;
HXDLIN(1076)						_this42->zpp_inner->wrap_worldCOM = ret14;
HXDLIN(1076)						_this42->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1076)						_this42->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1076)						_this42->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this42->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1076)					HX_VARI_NAME(  ::nape::geom::Vec2,_this46,"_this") = _this42->zpp_inner->wrap_worldCOM;
HXDLIN(1076)					{
HXLINE(1076)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this47,"_this") = _this46->zpp_inner;
HXDLIN(1076)						if (hx::IsNotNull( _this47->_validate )) {
HXLINE(1076)							_this47->_validate();
            						}
            					}
HXDLIN(1076)					vy = _this46->zpp_inner->y;
            				}
            				else {
HXLINE(1095)					HX_VARI_NAME( Float,xform5,"xform") = xform->a;
HXDLIN(1095)					HX_VAR_NAME(  ::nape::shape::Shape,_this48,"_this");
HXDLIN(1095)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1095)						_this48 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1095)						_this48 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1095)					if (hx::IsNull( _this48->zpp_inner->wrap_worldCOM )) {
HXLINE(1095)						HX_VARI_NAME( Float,x8,"x") = _this48->zpp_inner->worldCOMx;
HXDLIN(1095)						HX_VARI_NAME( Float,y8,"y") = _this48->zpp_inner->worldCOMy;
HXDLIN(1095)						HX_VAR_NAME(  ::nape::geom::Vec2,ret16,"ret");
HXDLIN(1095)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1095)							ret16 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1095)							ret16 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1095)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret16->zpp_pool;
HXDLIN(1095)							ret16->zpp_pool = null();
            						}
HXDLIN(1095)						if (hx::IsNull( ret16->zpp_inner )) {
HXLINE(1095)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret17,"ret");
HXDLIN(1095)							{
HXLINE(1095)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1095)									ret17 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1095)									ret17 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1095)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret17->next;
HXDLIN(1095)									ret17->next = null();
            								}
HXDLIN(1095)								ret17->weak = false;
            							}
HXDLIN(1095)							ret17->_immutable = false;
HXDLIN(1095)							{
HXLINE(1095)								ret17->x = x8;
HXDLIN(1095)								ret17->y = y8;
            							}
HXDLIN(1095)							ret16->zpp_inner = ret17;
HXDLIN(1095)							ret16->zpp_inner->outer = ret16;
            						}
            						else {
HXLINE(1095)							bool vx6;
HXDLIN(1095)							{
HXLINE(1095)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this49,"_this") = ret16->zpp_inner;
HXDLIN(1095)								if (hx::IsNotNull( _this49->_validate )) {
HXLINE(1095)									_this49->_validate();
            								}
            							}
HXDLIN(1095)							if ((ret16->zpp_inner->x == x8)) {
HXLINE(1095)								{
HXLINE(1095)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this50,"_this") = ret16->zpp_inner;
HXDLIN(1095)									if (hx::IsNotNull( _this50->_validate )) {
HXLINE(1095)										_this50->_validate();
            									}
            								}
HXDLIN(1095)								vx6 = (ret16->zpp_inner->y == y8);
            							}
            							else {
HXLINE(1095)								vx6 = false;
            							}
HXDLIN(1095)							if (!(vx6)) {
HXLINE(1095)								{
HXLINE(1095)									ret16->zpp_inner->x = x8;
HXDLIN(1095)									ret16->zpp_inner->y = y8;
            								}
HXDLIN(1095)								{
HXLINE(1095)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this51,"_this") = ret16->zpp_inner;
HXDLIN(1095)									if (hx::IsNotNull( _this51->_invalidate )) {
HXLINE(1095)										_this51->_invalidate(_this51);
            									}
            								}
            							}
            						}
HXDLIN(1095)						ret16->zpp_inner->weak = false;
HXDLIN(1095)						_this48->zpp_inner->wrap_worldCOM = ret16;
HXDLIN(1095)						_this48->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1095)						_this48->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1095)						_this48->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this48->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1095)					HX_VARI_NAME(  ::nape::geom::Vec2,_this52,"_this") = _this48->zpp_inner->wrap_worldCOM;
HXDLIN(1095)					{
HXLINE(1095)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this53,"_this") = _this52->zpp_inner;
HXDLIN(1095)						if (hx::IsNotNull( _this53->_validate )) {
HXLINE(1095)							_this53->_validate();
            						}
            					}
HXDLIN(1095)					HX_VARI_NAME( Float,vx7,"vx") = (xform5 * _this52->zpp_inner->x);
HXDLIN(1095)					HX_VARI_NAME( Float,xform6,"xform") = xform->b;
HXDLIN(1095)					HX_VAR_NAME(  ::nape::shape::Shape,_this54,"_this");
HXDLIN(1095)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1095)						_this54 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1095)						_this54 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1095)					if (hx::IsNull( _this54->zpp_inner->wrap_worldCOM )) {
HXLINE(1095)						HX_VARI_NAME( Float,x9,"x") = _this54->zpp_inner->worldCOMx;
HXDLIN(1095)						HX_VARI_NAME( Float,y9,"y") = _this54->zpp_inner->worldCOMy;
HXDLIN(1095)						HX_VAR_NAME(  ::nape::geom::Vec2,ret18,"ret");
HXDLIN(1095)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1095)							ret18 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1095)							ret18 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1095)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret18->zpp_pool;
HXDLIN(1095)							ret18->zpp_pool = null();
            						}
HXDLIN(1095)						if (hx::IsNull( ret18->zpp_inner )) {
HXLINE(1095)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret19,"ret");
HXDLIN(1095)							{
HXLINE(1095)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1095)									ret19 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1095)									ret19 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1095)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret19->next;
HXDLIN(1095)									ret19->next = null();
            								}
HXDLIN(1095)								ret19->weak = false;
            							}
HXDLIN(1095)							ret19->_immutable = false;
HXDLIN(1095)							{
HXLINE(1095)								ret19->x = x9;
HXDLIN(1095)								ret19->y = y9;
            							}
HXDLIN(1095)							ret18->zpp_inner = ret19;
HXDLIN(1095)							ret18->zpp_inner->outer = ret18;
            						}
            						else {
HXLINE(1095)							bool vx8;
HXDLIN(1095)							{
HXLINE(1095)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this55,"_this") = ret18->zpp_inner;
HXDLIN(1095)								if (hx::IsNotNull( _this55->_validate )) {
HXLINE(1095)									_this55->_validate();
            								}
            							}
HXDLIN(1095)							if ((ret18->zpp_inner->x == x9)) {
HXLINE(1095)								{
HXLINE(1095)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this56,"_this") = ret18->zpp_inner;
HXDLIN(1095)									if (hx::IsNotNull( _this56->_validate )) {
HXLINE(1095)										_this56->_validate();
            									}
            								}
HXDLIN(1095)								vx8 = (ret18->zpp_inner->y == y9);
            							}
            							else {
HXLINE(1095)								vx8 = false;
            							}
HXDLIN(1095)							if (!(vx8)) {
HXLINE(1095)								{
HXLINE(1095)									ret18->zpp_inner->x = x9;
HXDLIN(1095)									ret18->zpp_inner->y = y9;
            								}
HXDLIN(1095)								{
HXLINE(1095)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this57,"_this") = ret18->zpp_inner;
HXDLIN(1095)									if (hx::IsNotNull( _this57->_invalidate )) {
HXLINE(1095)										_this57->_invalidate(_this57);
            									}
            								}
            							}
            						}
HXDLIN(1095)						ret18->zpp_inner->weak = false;
HXDLIN(1095)						_this54->zpp_inner->wrap_worldCOM = ret18;
HXDLIN(1095)						_this54->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1095)						_this54->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1095)						_this54->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this54->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1095)					HX_VARI_NAME(  ::nape::geom::Vec2,_this58,"_this") = _this54->zpp_inner->wrap_worldCOM;
HXDLIN(1095)					{
HXLINE(1095)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this59,"_this") = _this58->zpp_inner;
HXDLIN(1095)						if (hx::IsNotNull( _this59->_validate )) {
HXLINE(1095)							_this59->_validate();
            						}
            					}
HXDLIN(1095)					vx = ((vx7 + (xform6 * _this58->zpp_inner->y)) + xform->tx);
HXLINE(1096)					HX_VARI_NAME( Float,xform7,"xform") = xform->c;
HXDLIN(1096)					HX_VAR_NAME(  ::nape::shape::Shape,_this60,"_this");
HXDLIN(1096)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1096)						_this60 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1096)						_this60 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1096)					if (hx::IsNull( _this60->zpp_inner->wrap_worldCOM )) {
HXLINE(1096)						HX_VARI_NAME( Float,x10,"x") = _this60->zpp_inner->worldCOMx;
HXDLIN(1096)						HX_VARI_NAME( Float,y10,"y") = _this60->zpp_inner->worldCOMy;
HXDLIN(1096)						HX_VAR_NAME(  ::nape::geom::Vec2,ret20,"ret");
HXDLIN(1096)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1096)							ret20 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1096)							ret20 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1096)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret20->zpp_pool;
HXDLIN(1096)							ret20->zpp_pool = null();
            						}
HXDLIN(1096)						if (hx::IsNull( ret20->zpp_inner )) {
HXLINE(1096)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret21,"ret");
HXDLIN(1096)							{
HXLINE(1096)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1096)									ret21 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1096)									ret21 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1096)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret21->next;
HXDLIN(1096)									ret21->next = null();
            								}
HXDLIN(1096)								ret21->weak = false;
            							}
HXDLIN(1096)							ret21->_immutable = false;
HXDLIN(1096)							{
HXLINE(1096)								ret21->x = x10;
HXDLIN(1096)								ret21->y = y10;
            							}
HXDLIN(1096)							ret20->zpp_inner = ret21;
HXDLIN(1096)							ret20->zpp_inner->outer = ret20;
            						}
            						else {
HXLINE(1096)							bool vy6;
HXDLIN(1096)							{
HXLINE(1096)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this61,"_this") = ret20->zpp_inner;
HXDLIN(1096)								if (hx::IsNotNull( _this61->_validate )) {
HXLINE(1096)									_this61->_validate();
            								}
            							}
HXDLIN(1096)							if ((ret20->zpp_inner->x == x10)) {
HXLINE(1096)								{
HXLINE(1096)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this62,"_this") = ret20->zpp_inner;
HXDLIN(1096)									if (hx::IsNotNull( _this62->_validate )) {
HXLINE(1096)										_this62->_validate();
            									}
            								}
HXDLIN(1096)								vy6 = (ret20->zpp_inner->y == y10);
            							}
            							else {
HXLINE(1096)								vy6 = false;
            							}
HXDLIN(1096)							if (!(vy6)) {
HXLINE(1096)								{
HXLINE(1096)									ret20->zpp_inner->x = x10;
HXDLIN(1096)									ret20->zpp_inner->y = y10;
            								}
HXDLIN(1096)								{
HXLINE(1096)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this63,"_this") = ret20->zpp_inner;
HXDLIN(1096)									if (hx::IsNotNull( _this63->_invalidate )) {
HXLINE(1096)										_this63->_invalidate(_this63);
            									}
            								}
            							}
            						}
HXDLIN(1096)						ret20->zpp_inner->weak = false;
HXDLIN(1096)						_this60->zpp_inner->wrap_worldCOM = ret20;
HXDLIN(1096)						_this60->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1096)						_this60->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1096)						_this60->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this60->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1096)					HX_VARI_NAME(  ::nape::geom::Vec2,_this64,"_this") = _this60->zpp_inner->wrap_worldCOM;
HXDLIN(1096)					{
HXLINE(1096)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this65,"_this") = _this64->zpp_inner;
HXDLIN(1096)						if (hx::IsNotNull( _this65->_validate )) {
HXLINE(1096)							_this65->_validate();
            						}
            					}
HXDLIN(1096)					HX_VARI_NAME( Float,vy7,"vy") = (xform7 * _this64->zpp_inner->x);
HXDLIN(1096)					HX_VARI_NAME( Float,xform8,"xform") = xform->d;
HXDLIN(1096)					HX_VAR_NAME(  ::nape::shape::Shape,_this66,"_this");
HXDLIN(1096)					if ((sarb->zpp_inner->ws1->id > sarb->zpp_inner->ws2->id)) {
HXLINE(1096)						_this66 = sarb->zpp_inner->ws1->outer;
            					}
            					else {
HXLINE(1096)						_this66 = sarb->zpp_inner->ws2->outer;
            					}
HXDLIN(1096)					if (hx::IsNull( _this66->zpp_inner->wrap_worldCOM )) {
HXLINE(1096)						HX_VARI_NAME( Float,x11,"x") = _this66->zpp_inner->worldCOMx;
HXDLIN(1096)						HX_VARI_NAME( Float,y11,"y") = _this66->zpp_inner->worldCOMy;
HXDLIN(1096)						HX_VAR_NAME(  ::nape::geom::Vec2,ret22,"ret");
HXDLIN(1096)						if (hx::IsNull( ::zpp_nape::util::ZPP_PubPool_obj::poolVec2 )) {
HXLINE(1096)							ret22 =  ::nape::geom::Vec2_obj::__alloc( HX_CTX ,null(),null());
            						}
            						else {
HXLINE(1096)							ret22 = ::zpp_nape::util::ZPP_PubPool_obj::poolVec2;
HXDLIN(1096)							::zpp_nape::util::ZPP_PubPool_obj::poolVec2 = ret22->zpp_pool;
HXDLIN(1096)							ret22->zpp_pool = null();
            						}
HXDLIN(1096)						if (hx::IsNull( ret22->zpp_inner )) {
HXLINE(1096)							HX_VAR_NAME(  ::zpp_nape::geom::ZPP_Vec2,ret23,"ret");
HXDLIN(1096)							{
HXLINE(1096)								if (hx::IsNull( ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool )) {
HXLINE(1096)									ret23 =  ::zpp_nape::geom::ZPP_Vec2_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE(1096)									ret23 = ::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool;
HXDLIN(1096)									::zpp_nape::geom::ZPP_Vec2_obj::zpp_pool = ret23->next;
HXDLIN(1096)									ret23->next = null();
            								}
HXDLIN(1096)								ret23->weak = false;
            							}
HXDLIN(1096)							ret23->_immutable = false;
HXDLIN(1096)							{
HXLINE(1096)								ret23->x = x11;
HXDLIN(1096)								ret23->y = y11;
            							}
HXDLIN(1096)							ret22->zpp_inner = ret23;
HXDLIN(1096)							ret22->zpp_inner->outer = ret22;
            						}
            						else {
HXLINE(1096)							bool vy8;
HXDLIN(1096)							{
HXLINE(1096)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this67,"_this") = ret22->zpp_inner;
HXDLIN(1096)								if (hx::IsNotNull( _this67->_validate )) {
HXLINE(1096)									_this67->_validate();
            								}
            							}
HXDLIN(1096)							if ((ret22->zpp_inner->x == x11)) {
HXLINE(1096)								{
HXLINE(1096)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this68,"_this") = ret22->zpp_inner;
HXDLIN(1096)									if (hx::IsNotNull( _this68->_validate )) {
HXLINE(1096)										_this68->_validate();
            									}
            								}
HXDLIN(1096)								vy8 = (ret22->zpp_inner->y == y11);
            							}
            							else {
HXLINE(1096)								vy8 = false;
            							}
HXDLIN(1096)							if (!(vy8)) {
HXLINE(1096)								{
HXLINE(1096)									ret22->zpp_inner->x = x11;
HXDLIN(1096)									ret22->zpp_inner->y = y11;
            								}
HXDLIN(1096)								{
HXLINE(1096)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this69,"_this") = ret22->zpp_inner;
HXDLIN(1096)									if (hx::IsNotNull( _this69->_invalidate )) {
HXLINE(1096)										_this69->_invalidate(_this69);
            									}
            								}
            							}
            						}
HXDLIN(1096)						ret22->zpp_inner->weak = false;
HXDLIN(1096)						_this66->zpp_inner->wrap_worldCOM = ret22;
HXDLIN(1096)						_this66->zpp_inner->wrap_worldCOM->zpp_inner->_inuse = true;
HXDLIN(1096)						_this66->zpp_inner->wrap_worldCOM->zpp_inner->_immutable = true;
HXDLIN(1096)						_this66->zpp_inner->wrap_worldCOM->zpp_inner->_validate = _this66->zpp_inner->getworldCOM_dyn();
            					}
HXDLIN(1096)					HX_VARI_NAME(  ::nape::geom::Vec2,_this70,"_this") = _this66->zpp_inner->wrap_worldCOM;
HXDLIN(1096)					{
HXLINE(1096)						HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this71,"_this") = _this70->zpp_inner;
HXDLIN(1096)						if (hx::IsNotNull( _this71->_validate )) {
HXLINE(1096)							_this71->_validate();
            						}
            					}
HXDLIN(1096)					vy = ((vy7 + (xform8 * _this70->zpp_inner->y)) + xform->ty);
            				}
HXLINE(1098)				this->graphics->lineTo(vx,vy);
            			}
            		}
            		else {
HXLINE(1101)			if ((arb->outer->zpp_inner->type == ::zpp_nape::dynamics::ZPP_Arbiter_obj::FLUID)) {
HXLINE(1102)				if (this->outer->drawFluidArbiters) {
HXLINE(1103)					HX_VARI_NAME(  ::nape::dynamics::Arbiter,_this72,"_this") = arb->outer;
HXDLIN(1103)					HX_VAR(  ::nape::dynamics::FluidArbiter,farb);
HXDLIN(1103)					if ((_this72->zpp_inner->type == ::zpp_nape::dynamics::ZPP_Arbiter_obj::FLUID)) {
HXLINE(1103)						farb = _this72->zpp_inner->fluidarb->outer_zn;
            					}
            					else {
HXLINE(1103)						farb = null();
            					}
HXLINE(1104)					 ::openfl::_legacy::display::Graphics _hx_tmp2 = this->graphics;
HXDLIN(1104)					Float _hx_tmp3 = this->outer_zn->thickness;
HXLINE(1106)					HX_VARI_NAME( int,ncol1,"ncol") = ~(this->bg_col);
HXLINE(1108)					HX_VARI_NAME( int,_r1,"_r") = ::Std_obj::_hx_int((((int)((int)ncol1 >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1109)					HX_VARI_NAME( int,_g1,"_g") = ::Std_obj::_hx_int((((int)((int)ncol1 >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1104)					_hx_tmp2->lineStyle(_hx_tmp3,((int)((int)((int)(int)-16777216 | (int)((int)_r1 << (int)(int)16)) | (int)((int)_g1 << (int)(int)8)) | (int)::Std_obj::_hx_int((((Float)178.5) + (((int)ncol1 & (int)(int)255) * ((Float)0.30000000000000004))))),(int)1,null(),null(),null(),null(),null());
HXLINE(1114)					if (xnull) {
HXLINE(1115)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1115)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1115)						HX_VARI_NAME(  ::nape::geom::Vec2,_this73,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1115)						{
HXLINE(1115)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this74,"_this") = _this73->zpp_inner;
HXDLIN(1115)							if (hx::IsNotNull( _this74->_validate )) {
HXLINE(1115)								_this74->_validate();
            							}
            						}
HXDLIN(1115)						vx = _this73->zpp_inner->x;
HXLINE(1116)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1116)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1116)						HX_VARI_NAME(  ::nape::geom::Vec2,_this75,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1116)						{
HXLINE(1116)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this76,"_this") = _this75->zpp_inner;
HXDLIN(1116)							if (hx::IsNotNull( _this76->_validate )) {
HXLINE(1116)								_this76->_validate();
            							}
            						}
HXDLIN(1116)						vy = _this75->zpp_inner->y;
            					}
            					else {
HXLINE(1135)						HX_VARI_NAME( Float,xform9,"xform") = xform->a;
HXDLIN(1135)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1135)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1135)						HX_VARI_NAME(  ::nape::geom::Vec2,_this77,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1135)						{
HXLINE(1135)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this78,"_this") = _this77->zpp_inner;
HXDLIN(1135)							if (hx::IsNotNull( _this78->_validate )) {
HXLINE(1135)								_this78->_validate();
            							}
            						}
HXDLIN(1135)						HX_VARI_NAME( Float,vx9,"vx") = (xform9 * _this77->zpp_inner->x);
HXDLIN(1135)						HX_VARI_NAME( Float,xform10,"xform") = xform->b;
HXDLIN(1135)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1135)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1135)						HX_VARI_NAME(  ::nape::geom::Vec2,_this79,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1135)						{
HXLINE(1135)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this80,"_this") = _this79->zpp_inner;
HXDLIN(1135)							if (hx::IsNotNull( _this80->_validate )) {
HXLINE(1135)								_this80->_validate();
            							}
            						}
HXDLIN(1135)						vx = ((vx9 + (xform10 * _this79->zpp_inner->y)) + xform->tx);
HXLINE(1136)						HX_VARI_NAME( Float,xform11,"xform") = xform->c;
HXDLIN(1136)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1136)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1136)						HX_VARI_NAME(  ::nape::geom::Vec2,_this81,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1136)						{
HXLINE(1136)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this82,"_this") = _this81->zpp_inner;
HXDLIN(1136)							if (hx::IsNotNull( _this82->_validate )) {
HXLINE(1136)								_this82->_validate();
            							}
            						}
HXDLIN(1136)						HX_VARI_NAME( Float,vy9,"vy") = (xform11 * _this81->zpp_inner->x);
HXDLIN(1136)						HX_VARI_NAME( Float,xform12,"xform") = xform->d;
HXDLIN(1136)						if (hx::IsNull( farb->zpp_inner->fluidarb->wrap_position )) {
HXLINE(1136)							farb->zpp_inner->fluidarb->getposition();
            						}
HXDLIN(1136)						HX_VARI_NAME(  ::nape::geom::Vec2,_this83,"_this") = farb->zpp_inner->fluidarb->wrap_position;
HXDLIN(1136)						{
HXLINE(1136)							HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this84,"_this") = _this83->zpp_inner;
HXDLIN(1136)							if (hx::IsNotNull( _this84->_validate )) {
HXLINE(1136)								_this84->_validate();
            							}
            						}
HXDLIN(1136)						vy = ((vy9 + (xform12 * _this83->zpp_inner->y)) + xform->ty);
            					}
HXLINE(1138)					this->graphics->drawCircle(vx,vy,((Float)0.75));
            				}
            			}
            			else {
HXLINE(1142)				if (this->outer->drawCollisionArbiters) {
HXLINE(1143)					HX_VARI_NAME(  ::nape::dynamics::Arbiter,_this85,"_this") = arb->outer;
HXDLIN(1143)					HX_VAR(  ::nape::dynamics::CollisionArbiter,carb);
HXDLIN(1143)					if ((_this85->zpp_inner->type == ::zpp_nape::dynamics::ZPP_Arbiter_obj::COL)) {
HXLINE(1143)						carb = _this85->zpp_inner->colarb->outer_zn;
            					}
            					else {
HXLINE(1143)						carb = null();
            					}
HXLINE(1144)					if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1144)						carb->zpp_inner->colarb->setupcontacts();
            					}
HXDLIN(1144)					HX_VARI_NAME(  ::nape::dynamics::ContactList,_this86,"_this") = carb->zpp_inner->colarb->wrap_contacts;
HXDLIN(1144)					_this86->zpp_inner->valmod();
HXDLIN(1144)					if (_this86->zpp_inner->zip_length) {
HXLINE(1144)						_this86->zpp_inner->zip_length = false;
HXDLIN(1144)						{
HXLINE(1144)							_this86->zpp_inner->user_length = (int)0;
HXDLIN(1144)							{
HXLINE(1144)								HX_VARI(  ::zpp_nape::dynamics::ZPP_Contact,cx_ite) = _this86->zpp_inner->inner->next;
HXDLIN(1144)								while(hx::IsNotNull( cx_ite )){
HXLINE(1144)									HX_VARI(  ::zpp_nape::dynamics::ZPP_Contact,i) = cx_ite;
HXDLIN(1144)									bool _hx_tmp4;
HXDLIN(1144)									if (i->active) {
HXLINE(1144)										_hx_tmp4 = i->arbiter->active;
            									}
            									else {
HXLINE(1144)										_hx_tmp4 = false;
            									}
HXDLIN(1144)									if (_hx_tmp4) {
HXLINE(1144)										_this86->zpp_inner->user_length++;
            									}
HXDLIN(1144)									cx_ite = cx_ite->next;
            								}
            							}
            						}
            					}
HXDLIN(1144)					if ((_this86->zpp_inner->user_length != (int)0)) {
HXLINE(1145)						HX_VARI( Float,px) = ((Float)0.0);
HXLINE(1146)						HX_VARI( Float,py) = ((Float)0.0);
HXLINE(1147)						if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1147)							carb->zpp_inner->colarb->setupcontacts();
            						}
HXDLIN(1147)						HX_VARI_NAME(  ::nape::dynamics::ContactList,_this87,"_this") = carb->zpp_inner->colarb->wrap_contacts;
HXDLIN(1147)						_this87->zpp_inner->valmod();
HXDLIN(1147)						if (_this87->zpp_inner->zip_length) {
HXLINE(1147)							_this87->zpp_inner->zip_length = false;
HXDLIN(1147)							{
HXLINE(1147)								_this87->zpp_inner->user_length = (int)0;
HXDLIN(1147)								{
HXLINE(1147)									HX_VARI_NAME(  ::zpp_nape::dynamics::ZPP_Contact,cx_ite1,"cx_ite") = _this87->zpp_inner->inner->next;
HXDLIN(1147)									while(hx::IsNotNull( cx_ite1 )){
HXLINE(1147)										HX_VARI_NAME(  ::zpp_nape::dynamics::ZPP_Contact,i1,"i") = cx_ite1;
HXDLIN(1147)										bool _hx_tmp5;
HXDLIN(1147)										if (i1->active) {
HXLINE(1147)											_hx_tmp5 = i1->arbiter->active;
            										}
            										else {
HXLINE(1147)											_hx_tmp5 = false;
            										}
HXDLIN(1147)										if (_hx_tmp5) {
HXLINE(1147)											_this87->zpp_inner->user_length++;
            										}
HXDLIN(1147)										cx_ite1 = cx_ite1->next;
            									}
            								}
            							}
            						}
HXDLIN(1147)						if ((_this87->zpp_inner->user_length == (int)2)) {
HXLINE(1148)							if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1148)								carb->zpp_inner->colarb->setupcontacts();
            							}
HXDLIN(1148)							HX_VARI_NAME(  ::nape::dynamics::Contact,_this88,"_this") = carb->zpp_inner->colarb->wrap_contacts->at((int)0);
HXDLIN(1148)							if (hx::IsNull( _this88->zpp_inner->wrap_position )) {
HXLINE(1148)								_this88->zpp_inner->getposition();
            							}
HXDLIN(1148)							HX_VARI(  ::nape::geom::Vec2,c1) = _this88->zpp_inner->wrap_position;
HXLINE(1149)							if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1149)								carb->zpp_inner->colarb->setupcontacts();
            							}
HXDLIN(1149)							HX_VARI_NAME(  ::nape::dynamics::Contact,_this89,"_this") = carb->zpp_inner->colarb->wrap_contacts->at((int)1);
HXDLIN(1149)							if (hx::IsNull( _this89->zpp_inner->wrap_position )) {
HXLINE(1149)								_this89->zpp_inner->getposition();
            							}
HXDLIN(1149)							HX_VARI(  ::nape::geom::Vec2,c2) = _this89->zpp_inner->wrap_position;
HXLINE(1150)							if (hx::IsNull( carb->zpp_inner->colarb->wrap_normal )) {
HXLINE(1150)								carb->zpp_inner->colarb->getnormal();
            							}
HXDLIN(1150)							HX_VARI(  ::nape::geom::Vec2,n) = carb->zpp_inner->colarb->wrap_normal;
HXLINE(1151)							HX_VARI_NAME( Float,x12,"x") = ((Float)0.661437828);
HXLINE(1152)							HX_VARI_NAME( Float,y12,"y") = ((Float)0.75);
HXLINE(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this90,"_this") = n->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this90->_validate )) {
HXLINE(1153)									_this90->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp6 = n->zpp_inner->y;
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this91,"_this") = c1->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this91->_validate )) {
HXLINE(1153)									_this91->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp7 = (_hx_tmp6 * c1->zpp_inner->x);
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this92,"_this") = n->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this92->_validate )) {
HXLINE(1153)									_this92->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp8 = n->zpp_inner->x;
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this93,"_this") = c1->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this93->_validate )) {
HXLINE(1153)									_this93->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp9 = (_hx_tmp7 - (_hx_tmp8 * c1->zpp_inner->y));
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this94,"_this") = n->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this94->_validate )) {
HXLINE(1153)									_this94->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp10 = n->zpp_inner->y;
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this95,"_this") = c2->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this95->_validate )) {
HXLINE(1153)									_this95->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp11 = (_hx_tmp10 * c2->zpp_inner->x);
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this96,"_this") = n->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this96->_validate )) {
HXLINE(1153)									_this96->_validate();
            								}
            							}
HXDLIN(1153)							Float _hx_tmp12 = n->zpp_inner->x;
HXDLIN(1153)							{
HXLINE(1153)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this97,"_this") = c2->zpp_inner;
HXDLIN(1153)								if (hx::IsNotNull( _this97->_validate )) {
HXLINE(1153)									_this97->_validate();
            								}
            							}
HXDLIN(1153)							if ((_hx_tmp9 < (_hx_tmp11 - (_hx_tmp12 * c2->zpp_inner->y)))) {
HXLINE(1154)								x12 = ((Float)-0.661437828);
HXLINE(1155)								y12 = ((Float)-0.75);
            							}
HXLINE(1157)							 ::openfl::_legacy::display::Graphics _hx_tmp13 = this->graphics;
HXDLIN(1157)							Float _hx_tmp14 = this->outer_zn->thickness;
HXLINE(1159)							HX_VARI_NAME( int,ncol2,"ncol") = ~(this->bg_col);
HXLINE(1161)							HX_VARI_NAME( int,_r2,"_r") = ::Std_obj::_hx_int((((int)((int)ncol2 >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1162)							HX_VARI_NAME( int,_g2,"_g") = ::Std_obj::_hx_int((((int)((int)ncol2 >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1157)							_hx_tmp13->lineStyle(_hx_tmp14,((int)((int)((int)(int)-16777216 | (int)((int)_r2 << (int)(int)16)) | (int)((int)_g2 << (int)(int)8)) | (int)::Std_obj::_hx_int((((Float)178.5) + (((int)ncol2 & (int)(int)255) * ((Float)0.30000000000000004))))),(int)1,null(),null(),null(),null(),null());
HXLINE(1167)							{
HXLINE(1168)								{
HXLINE(1168)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this98,"_this") = c1->zpp_inner;
HXDLIN(1168)									if (hx::IsNotNull( _this98->_validate )) {
HXLINE(1168)										_this98->_validate();
            									}
            								}
HXDLIN(1168)								HX_VARI_NAME( Float,vx10,"vx") = c1->zpp_inner->x;
HXDLIN(1168)								{
HXLINE(1168)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this99,"_this") = n->zpp_inner;
HXDLIN(1168)									if (hx::IsNotNull( _this99->_validate )) {
HXLINE(1168)										_this99->_validate();
            									}
            								}
HXDLIN(1168)								HX_VARI_NAME( Float,vx11,"vx") = (vx10 + (n->zpp_inner->x * y12));
HXDLIN(1168)								{
HXLINE(1168)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this100,"_this") = n->zpp_inner;
HXDLIN(1168)									if (hx::IsNotNull( _this100->_validate )) {
HXLINE(1168)										_this100->_validate();
            									}
            								}
HXDLIN(1168)								vx = (vx11 - (n->zpp_inner->y * x12));
HXLINE(1169)								{
HXLINE(1169)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this101,"_this") = c1->zpp_inner;
HXDLIN(1169)									if (hx::IsNotNull( _this101->_validate )) {
HXLINE(1169)										_this101->_validate();
            									}
            								}
HXDLIN(1169)								HX_VARI_NAME( Float,vy10,"vy") = c1->zpp_inner->y;
HXDLIN(1169)								{
HXLINE(1169)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this102,"_this") = n->zpp_inner;
HXDLIN(1169)									if (hx::IsNotNull( _this102->_validate )) {
HXLINE(1169)										_this102->_validate();
            									}
            								}
HXDLIN(1169)								HX_VARI_NAME( Float,vy11,"vy") = (vy10 + (n->zpp_inner->y * y12));
HXDLIN(1169)								{
HXLINE(1169)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this103,"_this") = n->zpp_inner;
HXDLIN(1169)									if (hx::IsNotNull( _this103->_validate )) {
HXLINE(1169)										_this103->_validate();
            									}
            								}
HXDLIN(1169)								vy = (vy11 + (n->zpp_inner->x * x12));
            							}
HXLINE(1187)							if (!(xnull)) {
HXLINE(1188)								HX_VARI( Float,t) = (((xform->a * vx) + (xform->b * vy)) + xform->tx);
HXLINE(1189)								vy = (((xform->c * vx) + (xform->d * vy)) + xform->ty);
HXLINE(1190)								vx = t;
            							}
HXLINE(1192)							this->graphics->moveTo(vx,vy);
HXLINE(1193)							{
HXLINE(1194)								{
HXLINE(1194)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this104,"_this") = c2->zpp_inner;
HXDLIN(1194)									if (hx::IsNotNull( _this104->_validate )) {
HXLINE(1194)										_this104->_validate();
            									}
            								}
HXDLIN(1194)								HX_VARI_NAME( Float,vx12,"vx") = c2->zpp_inner->x;
HXDLIN(1194)								{
HXLINE(1194)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this105,"_this") = n->zpp_inner;
HXDLIN(1194)									if (hx::IsNotNull( _this105->_validate )) {
HXLINE(1194)										_this105->_validate();
            									}
            								}
HXDLIN(1194)								HX_VARI_NAME( Float,vx13,"vx") = (vx12 + (n->zpp_inner->x * y12));
HXDLIN(1194)								{
HXLINE(1194)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this106,"_this") = n->zpp_inner;
HXDLIN(1194)									if (hx::IsNotNull( _this106->_validate )) {
HXLINE(1194)										_this106->_validate();
            									}
            								}
HXDLIN(1194)								vx = (vx13 + (n->zpp_inner->y * x12));
HXLINE(1195)								{
HXLINE(1195)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this107,"_this") = c2->zpp_inner;
HXDLIN(1195)									if (hx::IsNotNull( _this107->_validate )) {
HXLINE(1195)										_this107->_validate();
            									}
            								}
HXDLIN(1195)								HX_VARI_NAME( Float,vy12,"vy") = c2->zpp_inner->y;
HXDLIN(1195)								{
HXLINE(1195)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this108,"_this") = n->zpp_inner;
HXDLIN(1195)									if (hx::IsNotNull( _this108->_validate )) {
HXLINE(1195)										_this108->_validate();
            									}
            								}
HXDLIN(1195)								HX_VARI_NAME( Float,vy13,"vy") = (vy12 + (n->zpp_inner->y * y12));
HXDLIN(1195)								{
HXLINE(1195)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this109,"_this") = n->zpp_inner;
HXDLIN(1195)									if (hx::IsNotNull( _this109->_validate )) {
HXLINE(1195)										_this109->_validate();
            									}
            								}
HXDLIN(1195)								vy = (vy13 - (n->zpp_inner->x * x12));
            							}
HXLINE(1213)							if (!(xnull)) {
HXLINE(1214)								HX_VARI_NAME( Float,t1,"t") = (((xform->a * vx) + (xform->b * vy)) + xform->tx);
HXLINE(1215)								vy = (((xform->c * vx) + (xform->d * vy)) + xform->ty);
HXLINE(1216)								vx = t1;
            							}
HXLINE(1218)							this->graphics->lineTo(vx,vy);
HXLINE(1219)							 ::openfl::_legacy::display::Graphics _hx_tmp15 = this->graphics;
HXDLIN(1219)							Float _hx_tmp16 = this->outer_zn->thickness;
HXLINE(1221)							HX_VARI_NAME( int,ncol3,"ncol") = ~(this->bg_col);
HXLINE(1223)							HX_VARI_NAME( int,_r3,"_r") = ::Std_obj::_hx_int((((Float)178.5) + (((int)((int)ncol3 >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004))));
HXLINE(1224)							HX_VARI_NAME( int,_g3,"_g") = ::Std_obj::_hx_int((((int)((int)ncol3 >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1219)							_hx_tmp15->lineStyle(_hx_tmp16,((int)((int)((int)(int)-16777216 | (int)((int)_r3 << (int)(int)16)) | (int)((int)_g3 << (int)(int)8)) | (int)::Std_obj::_hx_int((((int)ncol3 & (int)(int)255) * ((Float)0.30000000000000004)))),(int)1,null(),null(),null(),null(),null());
HXLINE(1229)							{
HXLINE(1230)								{
HXLINE(1230)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this110,"_this") = c1->zpp_inner;
HXDLIN(1230)									if (hx::IsNotNull( _this110->_validate )) {
HXLINE(1230)										_this110->_validate();
            									}
            								}
HXDLIN(1230)								HX_VARI_NAME( Float,vx14,"vx") = c1->zpp_inner->x;
HXDLIN(1230)								{
HXLINE(1230)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this111,"_this") = n->zpp_inner;
HXDLIN(1230)									if (hx::IsNotNull( _this111->_validate )) {
HXLINE(1230)										_this111->_validate();
            									}
            								}
HXDLIN(1230)								HX_VARI_NAME( Float,vx15,"vx") = (vx14 - (n->zpp_inner->x * y12));
HXDLIN(1230)								{
HXLINE(1230)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this112,"_this") = n->zpp_inner;
HXDLIN(1230)									if (hx::IsNotNull( _this112->_validate )) {
HXLINE(1230)										_this112->_validate();
            									}
            								}
HXDLIN(1230)								vx = (vx15 - (n->zpp_inner->y * x12));
HXLINE(1231)								{
HXLINE(1231)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this113,"_this") = c1->zpp_inner;
HXDLIN(1231)									if (hx::IsNotNull( _this113->_validate )) {
HXLINE(1231)										_this113->_validate();
            									}
            								}
HXDLIN(1231)								HX_VARI_NAME( Float,vy14,"vy") = c1->zpp_inner->y;
HXDLIN(1231)								{
HXLINE(1231)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this114,"_this") = n->zpp_inner;
HXDLIN(1231)									if (hx::IsNotNull( _this114->_validate )) {
HXLINE(1231)										_this114->_validate();
            									}
            								}
HXDLIN(1231)								HX_VARI_NAME( Float,vy15,"vy") = (vy14 - (n->zpp_inner->y * y12));
HXDLIN(1231)								{
HXLINE(1231)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this115,"_this") = n->zpp_inner;
HXDLIN(1231)									if (hx::IsNotNull( _this115->_validate )) {
HXLINE(1231)										_this115->_validate();
            									}
            								}
HXDLIN(1231)								vy = (vy15 + (n->zpp_inner->x * x12));
            							}
HXLINE(1249)							if (!(xnull)) {
HXLINE(1250)								HX_VARI_NAME( Float,t2,"t") = (((xform->a * vx) + (xform->b * vy)) + xform->tx);
HXLINE(1251)								vy = (((xform->c * vx) + (xform->d * vy)) + xform->ty);
HXLINE(1252)								vx = t2;
            							}
HXLINE(1254)							this->graphics->moveTo(vx,vy);
HXLINE(1255)							{
HXLINE(1256)								{
HXLINE(1256)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this116,"_this") = c2->zpp_inner;
HXDLIN(1256)									if (hx::IsNotNull( _this116->_validate )) {
HXLINE(1256)										_this116->_validate();
            									}
            								}
HXDLIN(1256)								HX_VARI_NAME( Float,vx16,"vx") = c2->zpp_inner->x;
HXDLIN(1256)								{
HXLINE(1256)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this117,"_this") = n->zpp_inner;
HXDLIN(1256)									if (hx::IsNotNull( _this117->_validate )) {
HXLINE(1256)										_this117->_validate();
            									}
            								}
HXDLIN(1256)								HX_VARI_NAME( Float,vx17,"vx") = (vx16 - (n->zpp_inner->x * y12));
HXDLIN(1256)								{
HXLINE(1256)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this118,"_this") = n->zpp_inner;
HXDLIN(1256)									if (hx::IsNotNull( _this118->_validate )) {
HXLINE(1256)										_this118->_validate();
            									}
            								}
HXDLIN(1256)								vx = (vx17 + (n->zpp_inner->y * x12));
HXLINE(1257)								{
HXLINE(1257)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this119,"_this") = c2->zpp_inner;
HXDLIN(1257)									if (hx::IsNotNull( _this119->_validate )) {
HXLINE(1257)										_this119->_validate();
            									}
            								}
HXDLIN(1257)								HX_VARI_NAME( Float,vy16,"vy") = c2->zpp_inner->y;
HXDLIN(1257)								{
HXLINE(1257)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this120,"_this") = n->zpp_inner;
HXDLIN(1257)									if (hx::IsNotNull( _this120->_validate )) {
HXLINE(1257)										_this120->_validate();
            									}
            								}
HXDLIN(1257)								HX_VARI_NAME( Float,vy17,"vy") = (vy16 - (n->zpp_inner->y * y12));
HXDLIN(1257)								{
HXLINE(1257)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this121,"_this") = n->zpp_inner;
HXDLIN(1257)									if (hx::IsNotNull( _this121->_validate )) {
HXLINE(1257)										_this121->_validate();
            									}
            								}
HXDLIN(1257)								vy = (vy17 - (n->zpp_inner->x * x12));
            							}
HXLINE(1275)							if (!(xnull)) {
HXLINE(1276)								HX_VARI_NAME( Float,t3,"t") = (((xform->a * vx) + (xform->b * vy)) + xform->tx);
HXLINE(1277)								vy = (((xform->c * vx) + (xform->d * vy)) + xform->ty);
HXLINE(1278)								vx = t3;
            							}
HXLINE(1280)							this->graphics->lineTo(vx,vy);
HXLINE(1281)							{
HXLINE(1282)								{
HXLINE(1282)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this122,"_this") = c1->zpp_inner;
HXDLIN(1282)									if (hx::IsNotNull( _this122->_validate )) {
HXLINE(1282)										_this122->_validate();
            									}
            								}
HXDLIN(1282)								HX_VARI_NAME( Float,px1,"px") = c1->zpp_inner->x;
HXDLIN(1282)								{
HXLINE(1282)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this123,"_this") = c2->zpp_inner;
HXDLIN(1282)									if (hx::IsNotNull( _this123->_validate )) {
HXLINE(1282)										_this123->_validate();
            									}
            								}
HXDLIN(1282)								px = (((Float)0.5) * (px1 + c2->zpp_inner->x));
HXLINE(1283)								{
HXLINE(1283)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this124,"_this") = c1->zpp_inner;
HXDLIN(1283)									if (hx::IsNotNull( _this124->_validate )) {
HXLINE(1283)										_this124->_validate();
            									}
            								}
HXDLIN(1283)								HX_VARI_NAME( Float,py1,"py") = c1->zpp_inner->y;
HXDLIN(1283)								{
HXLINE(1283)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this125,"_this") = c2->zpp_inner;
HXDLIN(1283)									if (hx::IsNotNull( _this125->_validate )) {
HXLINE(1283)										_this125->_validate();
            									}
            								}
HXDLIN(1283)								py = (((Float)0.5) * (py1 + c2->zpp_inner->y));
            							}
HXLINE(1301)							if (!(xnull)) {
HXLINE(1302)								HX_VARI_NAME( Float,t4,"t") = (((xform->a * px) + (xform->b * py)) + xform->tx);
HXLINE(1303)								py = (((xform->c * px) + (xform->d * py)) + xform->ty);
HXLINE(1304)								px = t4;
            							}
            						}
            						else {
HXLINE(1308)							{
HXLINE(1309)								if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1309)									carb->zpp_inner->colarb->setupcontacts();
            								}
HXDLIN(1309)								HX_VARI_NAME(  ::nape::dynamics::Contact,_this126,"_this") = carb->zpp_inner->colarb->wrap_contacts->at((int)0);
HXDLIN(1309)								if (hx::IsNull( _this126->zpp_inner->wrap_position )) {
HXLINE(1309)									_this126->zpp_inner->getposition();
            								}
HXDLIN(1309)								HX_VARI_NAME(  ::nape::geom::Vec2,_this127,"_this") = _this126->zpp_inner->wrap_position;
HXDLIN(1309)								{
HXLINE(1309)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this128,"_this") = _this127->zpp_inner;
HXDLIN(1309)									if (hx::IsNotNull( _this128->_validate )) {
HXLINE(1309)										_this128->_validate();
            									}
            								}
HXDLIN(1309)								px = _this127->zpp_inner->x;
HXLINE(1310)								if (hx::IsNull( carb->zpp_inner->colarb->wrap_contacts )) {
HXLINE(1310)									carb->zpp_inner->colarb->setupcontacts();
            								}
HXDLIN(1310)								HX_VARI_NAME(  ::nape::dynamics::Contact,_this129,"_this") = carb->zpp_inner->colarb->wrap_contacts->at((int)0);
HXDLIN(1310)								if (hx::IsNull( _this129->zpp_inner->wrap_position )) {
HXLINE(1310)									_this129->zpp_inner->getposition();
            								}
HXDLIN(1310)								HX_VARI_NAME(  ::nape::geom::Vec2,_this130,"_this") = _this129->zpp_inner->wrap_position;
HXDLIN(1310)								{
HXLINE(1310)									HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this131,"_this") = _this130->zpp_inner;
HXDLIN(1310)									if (hx::IsNotNull( _this131->_validate )) {
HXLINE(1310)										_this131->_validate();
            									}
            								}
HXDLIN(1310)								py = _this130->zpp_inner->y;
            							}
HXLINE(1328)							if (!(xnull)) {
HXLINE(1329)								HX_VARI_NAME( Float,t5,"t") = (((xform->a * px) + (xform->b * py)) + xform->tx);
HXLINE(1330)								py = (((xform->c * px) + (xform->d * py)) + xform->ty);
HXLINE(1331)								px = t5;
            							}
HXLINE(1333)							 ::openfl::_legacy::display::Graphics _hx_tmp17 = this->graphics;
HXDLIN(1333)							Float _hx_tmp18 = this->outer_zn->thickness;
HXLINE(1335)							HX_VARI_NAME( int,ncol4,"ncol") = ~(this->bg_col);
HXLINE(1337)							HX_VARI_NAME( int,_r4,"_r") = ::Std_obj::_hx_int((((Float)178.5) + (((int)((int)ncol4 >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004))));
HXLINE(1338)							HX_VARI_NAME( int,_g4,"_g") = ::Std_obj::_hx_int((((int)((int)ncol4 >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004)));
HXLINE(1333)							_hx_tmp17->lineStyle(_hx_tmp18,((int)((int)((int)(int)-16777216 | (int)((int)_r4 << (int)(int)16)) | (int)((int)_g4 << (int)(int)8)) | (int)::Std_obj::_hx_int((((Float)178.5) + (((int)ncol4 & (int)(int)255) * ((Float)0.30000000000000004))))),(int)1,null(),null(),null(),null(),null());
HXLINE(1343)							this->graphics->drawCircle(px,py,(int)1);
            						}
HXLINE(1345)						 ::openfl::_legacy::display::Graphics _hx_tmp19 = this->graphics;
HXDLIN(1345)						Float _hx_tmp20 = this->outer_zn->thickness;
HXLINE(1346)						HX_VARI( int,col) = ~(this->bg_col);
HXLINE(1347)						HX_VARI_NAME( int,ncol5,"ncol") = this->bg_col;
HXLINE(1349)						HX_VARI_NAME( int,_r5,"_r") = ::Std_obj::_hx_int(((((int)((int)col >> (int)(int)16) & (int)(int)255) * ((Float)0.7)) + (((int)((int)ncol5 >> (int)(int)16) & (int)(int)255) * ((Float)0.30000000000000004))));
HXLINE(1350)						HX_VARI_NAME( int,_g5,"_g") = ::Std_obj::_hx_int(((((int)((int)col >> (int)(int)8) & (int)(int)255) * ((Float)0.7)) + (((int)((int)ncol5 >> (int)(int)8) & (int)(int)255) * ((Float)0.30000000000000004))));
HXLINE(1345)						_hx_tmp19->lineStyle(_hx_tmp20,((int)((int)((int)(int)-16777216 | (int)((int)_r5 << (int)(int)16)) | (int)((int)_g5 << (int)(int)8)) | (int)::Std_obj::_hx_int(((((int)col & (int)(int)255) * ((Float)0.7)) + (((int)ncol5 & (int)(int)255) * ((Float)0.30000000000000004))))),(int)1,null(),null(),null(),null(),null());
HXLINE(1355)						this->graphics->moveTo(px,py);
HXLINE(1356)						{
HXLINE(1357)							if (hx::IsNull( carb->zpp_inner->colarb->wrap_normal )) {
HXLINE(1357)								carb->zpp_inner->colarb->getnormal();
            							}
HXDLIN(1357)							HX_VARI_NAME(  ::nape::geom::Vec2,_this132,"_this") = carb->zpp_inner->colarb->wrap_normal;
HXDLIN(1357)							{
HXLINE(1357)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this133,"_this") = _this132->zpp_inner;
HXDLIN(1357)								if (hx::IsNotNull( _this133->_validate )) {
HXLINE(1357)									_this133->_validate();
            								}
            							}
HXDLIN(1357)							vx = (_this132->zpp_inner->x * (int)5);
HXLINE(1358)							if (hx::IsNull( carb->zpp_inner->colarb->wrap_normal )) {
HXLINE(1358)								carb->zpp_inner->colarb->getnormal();
            							}
HXDLIN(1358)							HX_VARI_NAME(  ::nape::geom::Vec2,_this134,"_this") = carb->zpp_inner->colarb->wrap_normal;
HXDLIN(1358)							{
HXLINE(1358)								HX_VARI_NAME(  ::zpp_nape::geom::ZPP_Vec2,_this135,"_this") = _this134->zpp_inner;
HXDLIN(1358)								if (hx::IsNotNull( _this135->_validate )) {
HXLINE(1358)									_this135->_validate();
            								}
            							}
HXDLIN(1358)							vy = (_this134->zpp_inner->y * (int)5);
            						}
HXLINE(1376)						if (!(xnull)) {
HXLINE(1377)							HX_VARI_NAME( Float,t6,"t") = ((xform->a * vx) + (xform->b * vy));
HXLINE(1378)							vy = ((xform->c * vx) + (xform->d * vy));
HXLINE(1379)							vx = t6;
            						}
HXLINE(1381)						this->graphics->lineTo((px + vx),(py + vy));
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ZPP_ShapeDebug_obj,draw_arbiter,(void))


hx::ObjectPtr< ZPP_ShapeDebug_obj > ZPP_ShapeDebug_obj::__new(int width,int height) {
	hx::ObjectPtr< ZPP_ShapeDebug_obj > __this = new ZPP_ShapeDebug_obj();
	__this->__construct(width,height);
	return __this;
}

hx::ObjectPtr< ZPP_ShapeDebug_obj > ZPP_ShapeDebug_obj::__alloc(hx::Ctx *_hx_ctx,int width,int height) {
	ZPP_ShapeDebug_obj *__this = (ZPP_ShapeDebug_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ZPP_ShapeDebug_obj), true, "zpp_nape.util.ZPP_ShapeDebug"));
	*(void **)__this = ZPP_ShapeDebug_obj::_hx_vtable;
	__this->__construct(width,height);
	return __this;
}

ZPP_ShapeDebug_obj::ZPP_ShapeDebug_obj()
{
}

void ZPP_ShapeDebug_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ZPP_ShapeDebug);
	HX_MARK_MEMBER_NAME(outer_zn,"outer_zn");
	HX_MARK_MEMBER_NAME(shape,"shape");
	HX_MARK_MEMBER_NAME(graphics,"graphics");
	HX_MARK_MEMBER_NAME(compoundstack,"compoundstack");
	HX_MARK_MEMBER_NAME(shapeList,"shapeList");
	HX_MARK_MEMBER_NAME(bodyList,"bodyList");
	 ::zpp_nape::util::ZPP_Debug_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ZPP_ShapeDebug_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(outer_zn,"outer_zn");
	HX_VISIT_MEMBER_NAME(shape,"shape");
	HX_VISIT_MEMBER_NAME(graphics,"graphics");
	HX_VISIT_MEMBER_NAME(compoundstack,"compoundstack");
	HX_VISIT_MEMBER_NAME(shapeList,"shapeList");
	HX_VISIT_MEMBER_NAME(bodyList,"bodyList");
	 ::zpp_nape::util::ZPP_Debug_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ZPP_ShapeDebug_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"shape") ) { return hx::Val( shape); }
		if (HX_FIELD_EQ(inName,"setbg") ) { return hx::Val( setbg_dyn()); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"outer_zn") ) { return hx::Val( outer_zn); }
		if (HX_FIELD_EQ(inName,"graphics") ) { return hx::Val( graphics); }
		if (HX_FIELD_EQ(inName,"bodyList") ) { return hx::Val( bodyList); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"shapeList") ) { return hx::Val( shapeList); }
		if (HX_FIELD_EQ(inName,"draw_body") ) { return hx::Val( draw_body_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"draw_space") ) { return hx::Val( draw_space_dyn()); }
		if (HX_FIELD_EQ(inName,"draw_shape") ) { return hx::Val( draw_shape_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"draw_arbiter") ) { return hx::Val( draw_arbiter_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"compoundstack") ) { return hx::Val( compoundstack); }
		if (HX_FIELD_EQ(inName,"draw_compound") ) { return hx::Val( draw_compound_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ZPP_ShapeDebug_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"shape") ) { shape=inValue.Cast<  ::openfl::_legacy::display::Shape >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"outer_zn") ) { outer_zn=inValue.Cast<  ::nape::util::ShapeDebug >(); return inValue; }
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=inValue.Cast<  ::openfl::_legacy::display::Graphics >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bodyList") ) { bodyList=inValue.Cast<  ::nape::phys::BodyList >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"shapeList") ) { shapeList=inValue.Cast<  ::nape::shape::ShapeList >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"compoundstack") ) { compoundstack=inValue.Cast<  ::zpp_nape::util::ZNPList_ZPP_Compound >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ZPP_ShapeDebug_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("outer_zn","\x38","\x07","\xb0","\xa2"));
	outFields->push(HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c"));
	outFields->push(HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"));
	outFields->push(HX_HCSTRING("compoundstack","\xfd","\x5f","\x68","\x73"));
	outFields->push(HX_HCSTRING("shapeList","\x1f","\xd0","\x8f","\xe2"));
	outFields->push(HX_HCSTRING("bodyList","\x20","\xbc","\xd6","\xc6"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ZPP_ShapeDebug_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::nape::util::ShapeDebug*/ ,(int)offsetof(ZPP_ShapeDebug_obj,outer_zn),HX_HCSTRING("outer_zn","\x38","\x07","\xb0","\xa2")},
	{hx::fsObject /*::openfl::_legacy::display::Shape*/ ,(int)offsetof(ZPP_ShapeDebug_obj,shape),HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c")},
	{hx::fsObject /*::openfl::_legacy::display::Graphics*/ ,(int)offsetof(ZPP_ShapeDebug_obj,graphics),HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12")},
	{hx::fsObject /*::zpp_nape::util::ZNPList_ZPP_Compound*/ ,(int)offsetof(ZPP_ShapeDebug_obj,compoundstack),HX_HCSTRING("compoundstack","\xfd","\x5f","\x68","\x73")},
	{hx::fsObject /*::nape::shape::ShapeList*/ ,(int)offsetof(ZPP_ShapeDebug_obj,shapeList),HX_HCSTRING("shapeList","\x1f","\xd0","\x8f","\xe2")},
	{hx::fsObject /*::nape::phys::BodyList*/ ,(int)offsetof(ZPP_ShapeDebug_obj,bodyList),HX_HCSTRING("bodyList","\x20","\xbc","\xd6","\xc6")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ZPP_ShapeDebug_obj_sStaticStorageInfo = 0;
#endif

static ::String ZPP_ShapeDebug_obj_sMemberFields[] = {
	HX_HCSTRING("outer_zn","\x38","\x07","\xb0","\xa2"),
	HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c"),
	HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"),
	HX_HCSTRING("setbg","\xe7","\x9d","\x2f","\x7a"),
	HX_HCSTRING("compoundstack","\xfd","\x5f","\x68","\x73"),
	HX_HCSTRING("draw_compound","\x46","\xee","\xb9","\x86"),
	HX_HCSTRING("shapeList","\x1f","\xd0","\x8f","\xe2"),
	HX_HCSTRING("bodyList","\x20","\xbc","\xd6","\xc6"),
	HX_HCSTRING("draw_space","\x0b","\xdb","\x7c","\x8a"),
	HX_HCSTRING("draw_body","\xfd","\x5b","\x0a","\x29"),
	HX_HCSTRING("draw_shape","\x66","\x31","\x33","\x85"),
	HX_HCSTRING("draw_arbiter","\x6e","\xe9","\x4f","\x3f"),
	::String(null()) };

static void ZPP_ShapeDebug_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ZPP_ShapeDebug_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ZPP_ShapeDebug_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ZPP_ShapeDebug_obj::__mClass,"__mClass");
};

#endif

hx::Class ZPP_ShapeDebug_obj::__mClass;

void ZPP_ShapeDebug_obj::__register()
{
	hx::Object *dummy = new ZPP_ShapeDebug_obj;
	ZPP_ShapeDebug_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("zpp_nape.util.ZPP_ShapeDebug","\xa2","\x0b","\x32","\xd1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ZPP_ShapeDebug_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ZPP_ShapeDebug_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ZPP_ShapeDebug_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ZPP_ShapeDebug_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ZPP_ShapeDebug_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ZPP_ShapeDebug_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace zpp_nape
} // end namespace util
