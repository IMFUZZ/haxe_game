// Generated by Haxe 3.4.0
#ifndef INCLUDED_items_Gold
#define INCLUDED_items_Gold

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_items_Item
#include <items/Item.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,nape,FlxNapeSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(items,Gold)
HX_DECLARE_CLASS1(items,Item)

namespace items{


class HXCPP_CLASS_ATTRIBUTES Gold_obj : public  ::items::Item_obj
{
	public:
		typedef  ::items::Item_obj super;
		typedef Gold_obj OBJ_;
		Gold_obj();

	public:
		enum { _hx_ClassId = 0x0408fd80 };

		void __construct(hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="items.Gold")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"items.Gold"); }
		static hx::ObjectPtr< Gold_obj > __new(hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y);
		static hx::ObjectPtr< Gold_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_a_x,hx::Null< Float >  __o_a_y);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Gold_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Gold","\xc0","\xbe","\x42","\x2f"); }

};

} // end namespace items

#endif /* INCLUDED_items_Gold */ 
